From owner-cypherpunks@Algebra.COM  Mon Jul  8 01:59:17 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g685xHk31102
	for <rsw@opamp.org>; Mon, 8 Jul 2002 01:59:17 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id BAA26498
	for <rsw@mit.edu>; Mon, 8 Jul 2002 01:59:13 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g685024l026300
	for <cypherpunks-outgoing@ak47.algebra.com>; Mon, 8 Jul 2002 00:00:02 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g68501rs026280
	for cypherpunks-outgoing; Mon, 8 Jul 2002 00:00:01 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@[207.200.56.4])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g684xv4l026162
	for <cypherpunks@algebra.com>; Sun, 7 Jul 2002 23:59:58 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id AAA04500
	for cypherpunks@algebra.com; Mon, 8 Jul 2002 00:04:33 -0500
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id AAA04470
	for cypherpunks-outgoing; Mon, 8 Jul 2002 00:02:56 -0500
Received: from smile.idiom.com (smile.idiom.com [216.240.32.5])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id AAA04437
	for <cypherpunks@einstein.ssz.com>; Mon, 8 Jul 2002 00:02:41 -0500
Received: from billstewart.pobox.com (slip-12-64-30-15.mis.prserv.net [12.64.30.15])
	by smile.idiom.com (8.9.1/8.8.5) with ESMTP id OAA55661;
	Sun, 7 Jul 2002 14:55:22 -0700 (PDT)
Message-Id: <5.1.1.6.2.20020707151025.04ae7e98@idiom.com>
X-Sender: wcs@idiom.com
X-Mailer: QUALCOMM Windows Eudora Version 5.1.1
Date: Sun, 07 Jul 2002 21:30:41 -0700
To: "Joseph Ashwood" <ashwood@msn.com>
From: Bill Stewart <bill.stewart@pobox.com>
Old-Subject: CDR: Re: Closed source more secure than open source
Cc: <cypherpunks@einstein.ssz.com>, <cryptography@wasabisystems.com>
In-Reply-To: <00ee01c22556$58c33b00$6501a8c0@josephas>
References: <19644b6e446618b92d13ea000f36fb96@remailer.privacy.at>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-Unsubscription-Info: http://einstein.ssz.com/cdr
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Acceptable-Languages: English, Russian, German, French, Spanish
Subject:  Re: Closed source more secure than open source
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 2691
Lines: 52


At 06:31 PM 07/06/2002 -0700, Joseph Ashwood wrote:
>First, closed source testing, beginning in the late Alpha testing stage, is
>generally done without any assistance from source code, by _anyone_, this
>significantly hampers the testing.

>This has led to observed situations where
>QA engineers sign off on products that don't even function,
>let alone have close to 0 bugs.

I don't know where *you* develop software, but anywhere I've been or seen
that had QA engineers signing off on non-functional products would
either lead to serious re-education for the engineers or
an internal understanding that the company values ship dates above
capabilities (not that that's unknown in the industry,
and admittedly closed-source development shops are more likely
to have business models that emphasize shipping, but Darwin fixes them.)

One of the purposes of having QA people work without source
is so that they're actually testing documented functions of the product,
rather than testing what the code looks like it can do successfully.
Except for those products that are code designed to be integrated
into other programs, where actual code matters, that modularity is critical.
You test the interfaces, not the innards.  It's still an infinite problem,
but it's much less infinite, and lets you hit what you need.
If the interfaces don't work, you're supposed to figure that out,
though sometimes late-alpha code is known to be missing major pieces --
you usually work around this by writing lots of test drivers.
You're also supposed to find out if there are missing pieces that
somehow escaped the design phase.

White-box testing lets you go beyond that to find subtle nasty bugs
that escaped unit testing and developer code reviews,
and have a better view into holes in the system
that a malicious attacker can break.  It's important for security,
because there are often things you don't find during black-box testing.

>With the software engineers believing that because the code
>was signed off, it must be bug-free. This is a rather substantial problem.

A much more serious problem is coders and testers believing that the
design documentation they're working from, if any, reflects what the
system is supposed to do and what it's supposed to not do.

>To address this problem one must actually correct the number of testers for
>the ones that are effectively doing nothing.

In commercial code with internal testers, you're not supposed to need this.
Obviously, for community-tested code, duplication in code coverage is common,
and one challenge for the open-source business is finding ways to
improve test coverage in volunteer testing, by adding some kind of 
coordination.

