From owner-cypherpunks@Algebra.COM  Sun Sep  2 13:46:45 2001
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id NAA28005
	for <kwantam@positron.mit.edu>; Sun, 2 Sep 2001 13:46:45 -0400
Received: from ak47.algebra.com (ak47.algebra.com [208.233.99.160])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id NAA00434
	for <rsw@mit.edu>; Sun, 2 Sep 2001 13:43:13 -0400 (EDT)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f82HeIO08139
	for cypherpunks-outgoing; Sun, 2 Sep 2001 12:40:18 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (dns.lne.com [209.157.136.81])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f82HeFO08125
	for <cypherpunks@algebra.com>; Sun, 2 Sep 2001 12:40:15 -0500
Received: (from cpunk@localhost)
	by slack.lne.com (8.11.0/8.11.0) id f82HeCg22976
	for cypherpunks@algebra.com; Sun, 2 Sep 2001 10:40:12 -0700
Received: (from majordom@localhost)
	by slack.lne.com (8.11.0/8.11.0) id f82HdME22958
	for cypherpunks-goingout; Sun, 2 Sep 2001 10:39:22 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
From: georgemw@speakeasy.net
To: cypherpunks@lne.com
Date: Sun, 2 Sep 2001 10:46:57 -0700
MIME-Version: 1.0
Content-type: text/plain; charset=US-ASCII
Content-transfer-encoding: 7bit
Old-Subject: Re: Stealth Computing Abuses TCP Checksums 
Message-ID: <3B920E21.14079.152CBF20@localhost>
In-reply-to: <200109021641.f82Gf0f22781@slack.lne.com>
References: <3B91FA7E.1924.14E00A23@localhost>
X-mailer: Pegasus Mail for Win32 (v3.12c)
X-Loop: cypherpunks@lne.com
X-spam: 0 
Subject:  Re: Stealth Computing Abuses TCP Checksums 
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 0 
Status: O
Content-Length: 2267
Lines: 61


On 2 Sep 2001, at 9:37, Tim May wrote:


> > Since I haven't noticed anyone else point this out (apologies for
> > my redundancy if I just somehow missed it),  it's worth mentioning
> > that the original result was more of a "gee whiz,  it's interesting we
> > can do this in principle" type of thing than an actual threat of
> > something anybody would ever actually do. Yes, you can trick a
> > remote host into performing calculations for you with a specially
> > prepared message, but it requires a hell of a lot more effort to
> > prepare the message than it would to perform the calculation
> > yourself.
> 
> 
> Why would you think this is always so?
> 

Gut hunch.

> It would not take much effort to arrange a computation that consumed a 
> lot of CPU cycles and returned a result, once one has gotten access to a 
> remote machine. The case of the corportate employee using machines he 
> could access to compute a screensaver/P2P job for a possible winning 
> payoff comes to mind. Granted, he may have had permissions to access 
> these machines, but the general point is that someone who got past these 
> permissions could have done the same compute-intensive thing.
> 

I was referring to the specific type of exploit where the
"parasite" is abusing the TCP checksum. I suspect the
same result is likely to hold with attempts to exploit
other protocols.

Obviously, if an attacker "owns" your machine, that's a
completely different kettle of fish.


> I see no reason to believe that "it requires a hell of a lot more effort 
> to
> prepare the message than it would to perform the calculation
> yourself."
> 
> Sometimes it does, sometimes it doesn't.
> 
> 

Right, and I suspect I have a fair idea which is which.  If you can
get a remote host to execute arbitrary code, with loops and 
branches, or to evaluate complicated functions, then it may be
worth your while to do it.  If all you can do is get it to add up a list of
numbers, then it's almost certainly going to be easier to just do
the addition yourself. If there's also a bunch of extra effort required 
to turn an abstract problem into a series of addition problems,
the advantage of solving the problem yourself (without this 
intermediate step) is even greater.

George 


> --Tim May

