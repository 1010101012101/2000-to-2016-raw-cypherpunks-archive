From cypherpunks-bounces@cpunks.org  Thu Oct  3 15:58:16 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r93Jvw5K015426;
	Thu, 3 Oct 2013 15:57:59 -0400
Received: from mail-ea0-f174.google.com (mail-ea0-f174.google.com
 [209.85.215.174])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r93Jvto0015421
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 3 Oct 2013 15:57:57 -0400
Received: by mail-ea0-f174.google.com with SMTP id z15so1339548ead.5
 for <cypherpunks@cpunks.org>; Thu, 03 Oct 2013 12:57:49 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20130820;
 h=date:from:to:cc:subject:message-id:references:mime-version
 :content-type:content-disposition:in-reply-to:user-agent;
 bh=/KXgZAMnwM6JzlZrlof4v7xhJIg1wtjEJOXxvj4Afbk=;
 b=VPkX/qcQ87ciwbHfAzty0ygBXoDWZH3vbwyXbMFJmwb1v1IcyGb2i4D0NniWgpL3av
 CMK2cBT0+squv8LlFwTY5849haGiFr9XuYMSRVC5NL47bUEMwgRS+DpKh5K7LDL5S00X
 hHBXuc94SRYNjMPXmARK4slnF5HQHz76sgexrPLGQ88oYpIyFC21PnwjI7+zjEFhhq0Z
 tNukQvcc67QOuFgd004Dc9XCQMi65C0UCFqj2+84jVGVMEj7fmjwR/hUUY9X/hOnywBC
 1kDGPBo9LHrBtRDeKxMMXb3qadrtT0D65pKA5qfcAm8UO8JisAUt/nJZM8jBdBvGwKfX
 m3Mg==
X-Received: by 10.14.45.70 with SMTP id o46mr15305452eeb.19.1380830269705;
 Thu, 03 Oct 2013 12:57:49 -0700 (PDT)
Received: from netbook (c83-90.i07-21.onvol.net. [92.251.83.90])
 by mx.google.com with ESMTPSA id k7sm19364531eeg.13.1969.12.31.16.00.00
 (version=TLSv1.1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
 Thu, 03 Oct 2013 12:57:49 -0700 (PDT)
Received: by netbook (Postfix, from userid 1000)
 id 578522E08A0; Thu,  3 Oct 2013 21:57:49 +0200 (CEST)
Received: by flare (hashcash-sendmail, from uid 1000);
 Thu, 3 Oct 2013 21:57:47 +0200
Date: Thu, 3 Oct 2013 21:57:47 +0200
From: Adam Back <adam@cypherspace.org>
To: coderman <coderman@gmail.com>
Subject: Re: Pen register request used to force disclosure of SSL private
 keys - LavaBit hearings
Message-ID: <20131003195747.GA16123@netbook.cypherspace.org>
References: <CAJVRA1S4SagR+=JHrJDsQ_UGGksm0GKEu-XQ=t-HXn9_oKhjig@mail.gmail.com>
 <78F290E1-A5ED-4B63-A089-D22FD9E78576@obscura.com>
 <CAJVRA1R5E71D6mAN4zPivMK_KHeFPuZQ-=dCidMhF8wJb=-qUA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <CAJVRA1R5E71D6mAN4zPivMK_KHeFPuZQ-=dCidMhF8wJb=-qUA@mail.gmail.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Hashcash: 1:20:131003:coderman@gmail.com::7EGmke/aqyvkhFsc:0000000000000000000
 00000000000000000000000036ja
X-Hashcash: 1:20:131003:loki@obscura.com::MuK9uylJP2AbD02U:01F0I
X-Hashcash: 1:20:131003:cypherpunks@cpunks.org::XuLLo+1u4i6AcrZY:000000000000000
 0000000000000000000000008cMH
Cc: cpunks <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 4025
Lines: 81

[Man there's a lot of names from the old days on this list.  Good to hear
from you Lance :-]

I think the take-away from this issue is CAs should issue certifictes on
keys used for signing only.  Say its a DSA, or ECDSA which is a damn good
choice because it is not even directly possible to encrypt with it (*), and
the key usage will be marked sign only, so there is no argument about its
purpose.

Then we disable any non-forward-secret ciphersuites (and forward secret
ciphersuites are not coincidentally the only ciphersuites that work with a
signing only server key).  Then the only plausible reason to demand the
signing key is to perform a MITM not to access "encrypted data".

Firstly MITM is more work, and secondly theyd at that point just as well
play nicely and ask the operator with a subpoena to hand over some info
inside the SSL stream if there's anything useful in there.

In some countries there are explicit legal protections for signature only
keys.  At best they subpoena could ask the operator to record the session
keys via the SSL web server, however that feature is not present as far as I
know.

I also think the weak point with lavabit was probably the in-mail and
out-mail, as with silentcircle, and I presume the reason silent circle
disabled email (though they could have secured internal sc-sc mail using eg
the same end2end secure messaging architcture they use for messaging).

A further weak point of lavabit as I understand it is it was actually taking
the password to the server!!  So the user private key was in the server ram
temporarily.  Which is complete misdesign and makes you start to question
Snowden's crypto tradecraft which up to that point was looking pretty damn
strong from the news reports.

Anyway signature only keys and forward-secrecy FTW already.


About software updates, I think we've reached the point of multiple
independent public interest code review bodies with signing authority
together with the software vendor.  The other thing with opensource it can
be forked if the main vendor goes wrong or is coerced.  You see this kind of
reasoning with bitcoin foundation etc as its probably the highest open
software assurance level on the planet protecting > $1bn in bearer bitcoin
value :)

The only possible exception to the coerced code change might be the hushmail
thing thogh I am kind of fuzzy about what exactly did happen.  There were
two versions, one like lavabit (server has key temporarily) and one real
end2end as I recall and one version of the story is it was the non-end2end
one that got the user info info subpoenaed.

Adam

(*) Yes yes I know you could abuse DSA public key for another discrete
encryption log algorithm, however such practice is considered risky to reuse
an asymmetric key for two different algorithms in case there is a way to use
one as an oracle to attack the other.

On Thu, Oct 03, 2013 at 11:57:22AM -0700, coderman wrote:
>On Thu, Oct 3, 2013 at 9:30 AM, Lance Cottrell <loki@obscura.com> wrote:
>> When architecting a system, it is critical that the operator of the system
>> should not have access to the keys at all...
>> ...
>> Rule #1 don't store clear text.
>> Rule #2 don't store decryption keys
>> Rule #3 don't do decryption on the server
>> Rule #4 treat all communications with people not implementing security on
>> THEIR computers as insecure
>
>some have suggested a rule #5: don't distribute updates automatically
>to your users and don't implement security critical functions in code
>that is delivered to the client via the server.
>
>i have yet to see a definitive case of a US company forced to include
>a backdoor in their software or forced to use their software update
>channel to deliver a CALEA/intercept friendly version of code to the
>targeted customer.  to date all of these requests appear to be off the
>record rather than enforced via judicial motion.
>
>this is a shame, since out of date software itself poses significant
>risk, and is best resolved via automatic updates from the vendor.

