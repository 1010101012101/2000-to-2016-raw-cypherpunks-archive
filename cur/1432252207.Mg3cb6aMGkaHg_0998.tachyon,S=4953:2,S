From cypherpunks-bounces@cpunks.org  Tue Nov 19 01:14:37 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAJ6E2FJ006327;
	Tue, 19 Nov 2013 01:14:07 -0500
Received: from nschwmtas04p.mx.bigpond.com (nschwmtas04p.mx.bigpond.com
 [61.9.189.146])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAJ6Dw3j006299
 for <cypherpunks@cpunks.org>; Tue, 19 Nov 2013 01:13:59 -0500
Received: from nschwcmgw09p ([61.9.190.169]) by nschwmtas04p.mx.bigpond.com
 with ESMTP
 id <20131119061352.EWZY2030.nschwmtas04p.mx.bigpond.com@nschwcmgw09p>
 for <cypherpunks@cpunks.org>; Tue, 19 Nov 2013 06:13:52 +0000
Received: from [10.0.0.1] ([123.211.78.188])
 by nschwcmgw09p with BigPond Outbound
 id rJDr1m00q43mJVF01JDsFA; Tue, 19 Nov 2013 06:13:52 +0000
X-Authority-Analysis: v=2.0 cv=Zbefx7pA c=1 sm=1
 a=ur3uMiG07ooMsh1EARtdnQ==:17 a=qBqOgKIwwcsA:10 a=oja_tBSO8rAA:10
 a=lN9ePCqjFVwA:10 a=IkcTkHD0fZMA:10 a=Lz0ecinzAAAA:8 a=EJVyQ2BcI4EA:10
 a=toY94pQBAAAA:8 a=B3p31B8y-F7gedzWO7UA:9 a=QEXdDO2ut3YA:10 a=ZokA4zlgGx0A:10
 a=G2MgIj9mRJ8A:10 a=ur3uMiG07ooMsh1EARtdnQ==:117
Message-ID: <528B019A.5040501@echeque.com>
Date: Tue, 19 Nov 2013 16:13:46 +1000
From: "James A. Donald" <jamesd@echeque.com>
User-Agent: Mozilla/5.0 (Windows NT 5.1;
 rv:24.0) Gecko/20100101 Thunderbird/24.1.0
MIME-Version: 1.0
To: cypherpunks@cpunks.org
Subject: Re: RetroShare
References: <2273118.NEfOTMQzUT@lap> <11446519.UaTmSoLtO9@lap>
 <CAHWD2rJTEjRmVDW1wJ+d3ZLJo10bm0GajTW2-Ofxu0xZ1fdmMw@mail.gmail.com>
 <1892324.eEEYb6oia5@lap> <20131117234414.0e52405e@Neptune>
 <CAHWD2rKGfKRyUCqZiZgyU693Y727Q5dfa3cEWiBCmsnLP9imdg@mail.gmail.com>
 <20131118134618.73f0092d@Neptune>
In-Reply-To: <20131118134618.73f0092d@Neptune>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 2336
Lines: 46

On 2013-11-18 23:46, Cathal Garvey wrote:
> Well, the DHT is (if I recall correctly!) used not only for locating
> peers for but locating files. So, for example imagine the case where an
> update to Retroshare is offered from within the network: the retroshare
> devs themselves estimated that to forge a malicious hash would take
> weeks on consumer end hardware, and therefore that it was an
> impractical attack not worthy of threat modelling.
>
> Leaving aside the fact that your real adversary does *not have to
> constrain itself to consumer end hardware*, it's the first time I've
> encountered a "serious" crypto project that considers *weeks* to be
> "computationally infeasible".
>
> This is all ignoring the fact that SHA1 was built by the NSA.
> Specifically (correct me if I'm mistaken): SHA0 was based on MD5, and
> SHA1 was then proposed soon after as its replacement by the NSA after
> some alterations to correct *undisclosed vulnerabilities*. Ahem.
>
> So, AFAIK RS is using a hash function redesigned (for all intents and
> purposes) in secret by *the adversary* which has plenty of publicly
> known attacks and may well have a critical in-built attack, and relies
> on this hash to route to the correct file or peer.
>
> Once you have a peer's keys, you can keep them and trust-on-first-use,
> and RS *probably* (anyone wanna check source?) uses and checks
> signatures thereafter, but if the signatures are based on a SHA1 hash
> you're back to square one, where a forged hash will fit a valid
> signature.

In view of recent events, I am inclined to distrust SHA1, and even if 
SHA1 is entirely trustworthy, using it gives NIST and thus the NSA power 
which it will abuse, and even if one doubts that the use of NIST 
approved algorithms in one's own project gives the NSA power, or doubts 
that the NSA will abuse that power, using NIST approved algorithms on 
default settings gives people reason to suspect that the group, 
individual, or organization setting those defaults might play footsie 
with the NSA behind closed doors.

For this reason I recommend employing the symmetric algorithms set as 
defaults by Jon Callas, and the asymmetric algorithms of Daniel Bernstein.

Skein in place of SHA.

http://blog.jim.com/crypto/moving-away-from-nist.html
http://blog.jim.com/crypto/cryptography-standards.html


