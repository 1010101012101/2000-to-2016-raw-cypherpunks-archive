From owner-cypherpunks@Algebra.COM  Mon Dec  3 10:25:41 2001
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.mit.edu (8.11.6/8.9.3) with ESMTP id fB3FPfB25575
	for <kwantam@positron.mit.edu>; Mon, 3 Dec 2001 10:25:41 -0500
Received: from ak47.algebra.com (ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id KAA12134
	for <rsw@mit.edu>; Mon, 3 Dec 2001 10:25:11 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id fB3FMcf31837
	for cypherpunks-outgoing; Mon, 3 Dec 2001 09:22:38 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (dns.lne.com [209.157.136.81])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id fB3FMW531802
	for <cypherpunks@ak47.algebra.com>; Mon, 3 Dec 2001 09:22:34 -0600
Received: (from cpunk@localhost)
	by slack.lne.com (8.11.0/8.11.0) id fB3FMFB01824
	for cypherpunks@ak47.algebra.com; Mon, 3 Dec 2001 07:22:15 -0800
Received: (from majordom@localhost)
	by slack.lne.com (8.11.0/8.11.0) id fB3FMEv01814
	for cypherpunks-goingout; Mon, 3 Dec 2001 07:22:14 -0800
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Message-Id: <5.0.2.1.1.20011202163543.033ae5b0@idiom.com>
X-Sender: wcs@idiom.com
X-Mailer: QUALCOMM Windows Eudora Version 5.0.2
Date: Mon, 03 Dec 2001 01:27:21 -0800
To: cp <cypherpunks@lne.com>
From: Bill Stewart <bill.stewart@pobox.com>
Old-Subject: Re: 256 Bit Encryption for Secure Email and Secure Online File
  Storage
In-Reply-To: <Pine.LNX.4.30.QNWS.0112011616560.28614-100000@thetis.deor.
  org>
References: <000401c17a53$321cff80$5a01a8c0@adam>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
X-Loop: cypherpunks@lne.com
X-spam: 0 
Subject:  Re: 256 Bit Encryption for Secure Email and Secure Online File
  Storage
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 0 
Status: O
Content-Length: 2436
Lines: 45


At 04:31 PM 12/01/2001 -0800, Meyer Wolfsheim wrote:
>Another proprietary key format. Why not base such a system on OpenPGP?

OpenPGP, ClosedPGP, GPG, PGP2.x, and X.509 all have blazingly ugly data 
formats,
especially for keys.  The main advantages of recycling one of the
N variations on PGP formats or one of the K variations on X.509
are that you can reuse code, and in some cases you can gain compatibility
with existing user bases.  On the other hand, you can gain compatibility
with existing user bases by letting PGP users sign messages saying
"My Cryptoheaven Public Key For Messages is <key1> and for Signatures is 
<key2>"
and similarly letting X.509 users do the same if they want.
It's not automated, but it can work ok.

Also, of course, you'd need to register the Rijndael and SHA-256
entities onto the **PG** formatspaces, but they're generally designed for it.

The cleanest key format I've seen is in CryptoKong - it has the
advantage that Elliptic Curve cryptosystems let you use short keys,
at least if you believe that the math works adequately,
and it's not trying to use any "KeyID" as an abbreviation for the key,
so it's just a simple direct encoding of the key,
without PGP's annoyances of KeyID lookup and risks of KeyID forgery.
Of course, it's also not mapping KeyIDs to users, only to messages,
so if you want to maintain relationships between them,
you've got to do it yourself, and if you want to have
senders of some messages vet senders of other messages,
you need to track the messages yourself.  James Donald's implementation
uses an Evil Microsoft Access database to save messages,
but you could do a different implementation if you wanted to.

Was the real motivation for using their own format simplicity?
Or not-invented-here-ness?  Or not-thinking-ness?
Or unwillingness to wade through the huge amount of existing ugly code
just for compatibility with existing ugly formats?
Does it matter much?  They're in the Software / Internet Services business,
so either they'll find a niche where they get lots of users
(in which case it's worth reviewing their code for real security),
or they'll fail to do so and Darwin Will Get Them,
like so many other projects out there, or they'll end up with a
small but fanatic group of users who keep them going,
or somebody will discover a Serious Bug which will blow away their security
(though they do have at least semi-open source available for review.)

