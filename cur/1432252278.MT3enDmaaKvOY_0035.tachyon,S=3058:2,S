From owner-cypherpunks@lne.com  Thu Nov  6 06:57:39 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p3/8.11.6-03-31-03) with ESMTP id hA6Bvbq06363
	for <rsw@jfet.org>; Thu, 6 Nov 2003 06:57:38 -0500
Received: from slack.lne.com (slack.lne.com [127.0.0.1])
	by slack.lne.com (8.12.10/8.12.10) with ESMTP id hA6BdrBB006720
	(version=TLSv1/SSLv3 cipher=EDH-DSS-DES-CBC3-SHA bits=168 verify=NO)
	for <cypherpunks-goingout345@slack.lne.com>; Thu, 6 Nov 2003 03:39:53 -0800
Received: (from majordom@localhost)
	by slack.lne.com (8.12.10/8.12.10/Submit) id hA6BdqRV006719
	for cypherpunks-goingout345; Thu, 6 Nov 2003 03:39:53 -0800
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Message-ID: <20031106113948.75554.qmail@web21202.mail.yahoo.com>
Date: Thu, 6 Nov 2003 03:39:48 -0800 (PST)
From: Sarad AV <jtrjtrjtr2001@yahoo.com>
Subject: Re: Deniable data storage
To: cypherpunks@lne.com
In-Reply-To: <3FA94872.10325.DEE3A0@localhost>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1809
Lines: 72

hi,

Keep

K =Original Key
P =Original Plain Text
C =Original cipher text
D=Dummy plain text
C'=Dummy cipher text
K'=Dummy key

use a symmetric key encryption algorithm with a secret
key 'k' over plain text 'P' to obtain cipher text 'C'

Then we find

k'= C (xor) D

Preferably D is atleast as long as C.

Now we can claim we used k' as one time pad to
encrypt.
 
When the police decrypts they obtain
D= C (xor) k', the dummy plain text.

This is not an efficient algorithm but even if you did
have one, this is not a very good idea because the
secret police will first get the dummy key and when
they see there is nothing of significance in the plain
text, they will beat the original key out of us and I
dont suppose any democracy in the world prevents this
from happening :-)


Regards Sarath.

--- "James A. Donald" <jamesd@echeque.com> wrote:
> I want to store information deniably.
> 
> So there would be a fixed sized block of data, say
> one megabyte, 
> increasing by multiples of 8 as needed.
> 
> This would contain various items of information that
> one could 
> extract by supplyin a secret, symmetric, key.   A
> random key would 
> extract a block of gibberish of random length  
> There would be no 
> indication as to how many bits of meaningful data
> were stored in the 
> block, though obviously they would have to add up to
> less than the 
> size of the block.
> 
> So one could store one's password list under one
> key, and the 
> location of the dead bodies under another key, and
> absent that key, 
> there would be no evidence that they key, or
> information hidden under 
> that key, existed.
> 
> What is a good algorithm for this?
> 


__________________________________
Do you Yahoo!?
Protect your identity with Yahoo! Mail AddressGuard
http://antispam.yahoo.com/whatsnewfree

