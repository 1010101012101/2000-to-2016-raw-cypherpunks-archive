From owner-cypherpunks@jfet.org  Fri Oct 28 20:47:45 2005
Return-Path: <owner-cypherpunks@jfet.org>
Received: from proton.jfet.org (localhost [127.0.0.1])
	by proton.jfet.org (8.13.4/8.13.4/Debian-3) with ESMTP id j9T0lc2o022960
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Fri, 28 Oct 2005 20:47:38 -0400
Received: (from majordomo@localhost)
	by proton.jfet.org (8.13.4/8.13.4/Submit) id j9T0lcYf022959
	for cypherpunks-outgoing; Fri, 28 Oct 2005 20:47:38 -0400
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;         s=beta;
  d=gmail.com;        
  h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
  b=f/iSB3QhQ+9vYYfaMFQ+lQLY2IcwVshsh2YBwZo58FwR3RI4fmkYVCvvM2qXp2Bjx0n+z+K8bo39BLihcwkxqsLmJ5GDCTW91fdgO3cmrh2amJXkhNtWa6je6nAUnE2sKFydXK45gk+xyWnKfnVYlNdzs5mbrdFjs/H8LYNV3L0=
Message-ID: <d4f1333a0510281747l1e3a0a45x9a8557e665bc2d7b@mail.gmail.com>
Date: Fri, 28 Oct 2005 19:47:35 -0500
From: "Travis H." <solinym@gmail.com>
To: John Denker <jsd@av8n.com>
Subject: Re: packet traffic analysis
Cc: cyphrpunk <cyphrpunk@gmail.com>, cypherpunks@jfet.org,
        cryptography@metzdowd.com, PracticalSecurity@hbarel.com
In-Reply-To: <435FD593.3030708@av8n.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
References: <p06230967bf8325224617@68.167.57.91> 	
  <792ce4370510242218h12985e18ua62efb15f9e25590@mail.gmail.com> 	
  <d4f1333a0510252140t29fffe61nb8aa0871fb48aabc@mail.gmail.com> 	
  <435FD593.3030708@av8n.com>
Content-Transfer-Encoding: 7bit
X-MIME-Autoconverted: from quoted-printable to 8bit by proton.jfet.org
  id j9T0lamw022924
Sender: owner-cypherpunks@jfet.org
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 2300
Lines: 40

Good catch on the encryption.  I feel silly for not thinking of it.

> If your plaintext consists primarily of small packets, you should set the MTU
> of the transporter to be small.   This will cause fragmentation of the
> large packets, which is the price you have to pay.  Conversely, if your
> plaintext consists primarily of large packets, you should make the MTU large.
> This means that a lot of bandwidth will be wasted on padding if/when there
> are small packets (e.g. keystrokes, TCP acks, and voice cells) but that's
> the price you have to pay to thwart traffic analysis.

I'm not so sure.  If we're talking about thwarting traffic on the link
level (real circuit) or on the virtual-circuit level, then you're
adding, on average, a half-packet latency whenever you want to send a
real packet.  And then there's the bandwidth tradeoff you mention,
which is probably of a larger concern (although bandwidth will
increase over time, whereas the speed of light will not).

I don't see any reason why it's necessary to pay these costs if you
abandon the idea of generating only equal-length packets and creating
all your chaff as packets.  Let's assume the link is encrypted as
before.  Then you merely introduce your legitimate packets with a
certain escape sequence, and pad between these packets with either
zeroes, or if you're more paranoid, some kind of PRNG.  In this way,
if the link is idle, you can stop generating chaff and start
generating packets at any time.  I assume that the length is
explicitly encoded in the legitimate packet.  Then the peer for the
link ignores everything until the next "escape sequence" introducing a
legitimate packet.

This is not a tiny hack, but avoids much of the overhead in your
technique.  It could easily be applied to something like openvpn,
which can operate over a TCP virtual circuit, or ppp.  It'd be a nice
optimization if you could avoid retransmits of segments that contained
only chaff, but that may or may not be possible to do without giving
up some TA resistance (esp. in the presence of an attacker who may
prevent transmission of segments).
--
http://www.lightconsulting.com/~travis/  -><-
"We already have enough fast, insecure systems." -- Schneier & Ferguson
GPG fingerprint: 50A1 15C5 A9DE 23B9 ED98 C93E 38E9 204A 94C2 641B

