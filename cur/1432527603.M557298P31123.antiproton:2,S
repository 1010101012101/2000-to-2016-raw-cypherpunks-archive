Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t4P4IsRR031075;
	Mon, 25 May 2015 00:18:59 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=os5FuMA3;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: from mail-qk0-f173.google.com (mail-qk0-f173.google.com
 [209.85.220.173])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t4P4ImCc031071
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Mon, 25 May 2015 00:18:50 -0400
Received: by qkx62 with SMTP id 62so56392377qkx.3
 for <cypherpunks@cpunks.org>; Sun, 24 May 2015 21:18:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:sender:in-reply-to:references:from:date:message-id
 :subject:to:cc:content-type;
 bh=BTI2BpBYwY0MLqoPFAdK5gYnEvkt+fl9TyRtbiyWqOI=;
 b=os5FuMA3nWQjsjjPle5DAKOzs1pp9Zt1YBDMU4pTJpkLUe9FrwIqyYGhreyY+h155E
 NbblDXb0fBKI/9YuYvvEwPpc+n2EZBKqHEtC4Qc97BZaTzYHDJa31ehgha/oB2+vLPh7
 +TvQphMsINdDfHx4lk77z4Rr5Blz1QEwHoU7fjtTDNg+iUXkPh0oCrXqLb+lwH+3ozZl
 tktNDwr8/qn7B5yltU7mPqBMbj905Xh5nbckKDz36By4UOLBuEKuOZDVN2fztzZFBL1o
 CAmUYIIg9vzwIfNYGpq5jaa8mq67KiHc8Po7e9L8fbTOKU58/hII9ZLoK0327rG5D4//
 2Brg==
X-Received: by 10.140.86.47 with SMTP id o44mr24842571qgd.98.1432527523031;
 Sun, 24 May 2015 21:18:43 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.140.30.70 with HTTP; Sun, 24 May 2015 21:18:22 -0700 (PDT)
In-Reply-To: <55621BE8.5050901@cs.helsinki.fi>
References: <55621BE8.5050901@cs.helsinki.fi>
From: =?UTF-8?Q?Lodewijk_andr=C3=A9_de_la_porte?= <l@odewijk.nl>
Date: Mon, 25 May 2015 13:18:22 +0900
X-Google-Sender-Auth: CVXre_GAQzQxfdv2fornKhTLe8o
Message-ID: <CAHWD2rKYQushRzL33L2ftuxnuVdO+cUgWwakQQLaqrD5LMZrQA@mail.gmail.com>
Subject: Re: TFC 0.5.5 out
To: Markus Ottela <oottela@cs.helsinki.fi>
Content-Type: multipart/alternative; boundary=001a11c12ea22432470516e04ef8
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 54

--001a11c12ea22432470516e04ef8
Content-Type: text/plain; charset=UTF-8

Cool! I like the cipher-cascade :)

Regarding the FS: if Keccak loses some entropy in it's hashing, the entropy
in the key used would slowly degrade. Certainly Keccak doesn't preserve all
entropy, but it probably doesn't leak it fast enough to matter. You could
probably add some new entropy from the random generators. To prevent
padding, you could replace, say, merely the last bit as Keccak doesn't
(seem to) lose a bit of entropy per cycle. Could someone more knowledgeable
comment on this issue? It's probably inconsequential so long as Keccak is
what it seems, but it's much weaker-looking than the cipher-cascade.

I'm also impressed by the idea of data diodes. At first I thought they were
in software, and already thought "what an effective way to limit risk!".
Write a "microservice" that fronts two other processes, with separated user
accounts, and allows only data in or data out. Formally prove the fronting
microservice (it's small enough) and any error in your own code becomes far
less harmful (side channels are still there; cache- ,DOS, timing-attacks,
etc). Doing it in hardware is even better. It's highly likely that it
works, and that's *very cool*.

My biggest question is, why as a plugin for Pidgin?

--001a11c12ea22432470516e04ef8
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_extra">Cool! I like the cipher-cascade=
 :)</div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">Re=
garding the FS: if Keccak loses some entropy in it&#39;s hashing, the entro=
py in the key used would slowly degrade. Certainly Keccak doesn&#39;t prese=
rve all entropy, but it probably doesn&#39;t leak it fast enough to matter.=
 You could probably add some new entropy from the random generators. To pre=
vent padding, you could replace, say, merely the last bit as Keccak doesn&#=
39;t (seem to) lose a bit of entropy per cycle. Could someone more knowledg=
eable comment on this issue? It&#39;s probably inconsequential so long as K=
eccak is what it seems, but it&#39;s much weaker-looking than the cipher-ca=
scade.</div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra"=
>I&#39;m also impressed by the idea of data diodes. At first I thought they=
 were in software, and already thought &quot;what an effective way to limit=
 risk!&quot;. Write a &quot;microservice&quot; that fronts two other proces=
ses, with separated user accounts, and allows only data in or data out. For=
mally prove the fronting microservice (it&#39;s small enough) and any error=
 in your own code becomes far less harmful (side channels are still there; =
cache- ,DOS, timing-attacks, etc). Doing it in hardware is even better. It&=
#39;s highly likely that it works, and that&#39;s <b>very cool</b>.</div><d=
iv class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">My biggest qu=
estion is, why as a plugin for Pidgin?</div></div>

--001a11c12ea22432470516e04ef8--

