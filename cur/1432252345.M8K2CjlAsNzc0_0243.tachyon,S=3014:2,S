From owner-cypherpunks@lne.com  Mon May 19 14:38:57 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h4JIctt28391
	for <rsw@jfet.org>; Mon, 19 May 2003 14:38:55 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h4JIKAtE011410
	for cypherpunks-goingout345; Mon, 19 May 2003 11:20:10 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
X-envelope-info: <bill.stewart@pobox.com>
Message-Id: <5.1.1.6.2.20030519105950.02dfed58@idiom.com>
X-Sender: wcs@idiom.com
X-Mailer: QUALCOMM Windows Eudora Version 5.1.1
Date: Mon, 19 May 2003 11:12:17 -0700
To: cypherpunks@lne.com, cryptography@metzdowd.com
From: Bill Stewart <bill.stewart@pobox.com>
Subject: Re: using PoW + filters to avoid false positives (Re: Re: A
  Trial Balloon to Ban Email?)
In-Reply-To: <20030516102248.C21475@slack.lne.com>
References: <20030515095617.A9475477@exeter.ac.uk> <Your
  <Pine.LNX.4.40.0305121022230.16578-100000@bolt.sonic.net>
  <5.2.0.9.0.20030512183116.044db8d0@pop.ix.netcom.com>
  <021501c319ca$39747ed0$6701a8c0@JOSEPHAS>
  <20030515095617.A9475477@exeter.ac.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1571
Lines: 30

At 10:22 AM 05/16/2003 -0700, Eric Murray wrote:
>There is already a reasonably good proof-of-work mechanism built
>into SMTP-- START_TLS.
>
>Any server that is willing to do TLS with mine is very unlikely
>to be a spammer.  In fact a quick check of about 8000 spams I have
>shows that two of them used TLS.  (both in the last week.   hmm.)

Steve Bellovin pointed out that spammers who use open relays and
open proxies will happily burn those CPUs doing proof-of-work
as well as burning their bandwidth multiplying spam.
That's not necessarily a _bad_ thing, if it gets the attention of
the people running the relay/proxy machines (:-)

But it's a basic problem with link-based proof-of-work like START_TLS
as opposed to end-to-end proof-of-work mechanisms in the message itself.
If you do link-based, the pnly last relay site needs to do the work,
so the spammer can steal CPU from lots of machines without burning his own.
If you do message-based proof-of-work, it's much harder to get a proxy
or relay to do the work, as opposed to using the spammer's own machine.

START_TLS and other link-based mechanisms _do_ have the benefit of
harassing dialup and DSL spammers, who are using their own CPUs without relays,
so it at least gets rid of some of the ankle-biters and forces spammers
to abuse relays and proxies, which may be easier to identify
(especially because they're using START_TLS...)

This has the side benefit that it cuts down on the use of dial/dsl blacklists,
which are one of the extremely annoying sources of collateral damage
in the anti-spam world.

