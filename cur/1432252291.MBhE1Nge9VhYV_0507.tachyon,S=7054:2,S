From cypherpunks-bounces@cpunks.org  Wed Aug  7 05:06:11 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from proton.jfet.org (localhost.localdomain [127.0.0.1])
	by proton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r77968uf030923;
	Wed, 7 Aug 2013 05:06:08 -0400
Received: from mail-pa0-f51.google.com (mail-pa0-f51.google.com
 [209.85.220.51])
 by proton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r77964WU030919
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Wed, 7 Aug 2013 05:06:06 -0400
Received: by mail-pa0-f51.google.com with SMTP id lf11so1911847pab.38
 for <cypherpunks@cpunks.org>; Wed, 07 Aug 2013 02:05:59 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=date:from:to:cc:subject:message-id:references:mime-version
 :content-type:content-disposition:in-reply-to:user-agent;
 bh=g8cNsCV2zZ6j925+hmADKt2k3ujKtboygAweqGARU/s=;
 b=UnpJ+hKxJxoH+sZLejz1HFFlZIkpjJey3zkJ829k36WvWqOjPr2A1LTtdvJo5PZ1gi
 9HcgAeULdWgATqFXjp/iTMQ4ti3kECLF4GtksueU+H2dvsc7s4lJoaVNUqrmEenknySv
 fRelIazPZXeBJptWrZRJ8e9IwfnwLGReI/ra5idyHm89sWPPKHfe+1Ku2yIC5lKOM/RK
 xc7HKYeaTTOnaW7HuKBYmWY5A89Rf6BE2leX1bNJFuZyL2i5KR6GwUelyPZO5evAvfKN
 ppLnt4SzwyL1qlm47kT1SuwmRK/e1ilexpceWdoQgwB45tfjvhhgWptb0YC1e7cDWNGY
 CPmg==
X-Received: by 10.66.196.168 with SMTP id in8mr3306838pac.18.1375866359009;
 Wed, 07 Aug 2013 02:05:59 -0700 (PDT)
Received: from netbook (110-174-53-246.static.tpgi.com.au. [110.174.53.246])
 by mx.google.com with ESMTPSA id iu7sm7034216pbc.8.2013.08.07.02.05.54
 for <multiple recipients>
 (version=TLSv1.1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
 Wed, 07 Aug 2013 02:05:58 -0700 (PDT)
Received: by netbook (Postfix, from userid 1000)
 id B1E562E032D; Wed,  7 Aug 2013 11:05:48 +0200 (CEST)
Received: by flare (hashcash-sendmail, from uid 1000);
 Wed, 7 Aug 2013 11:05:42 +0200
Date: Wed, 7 Aug 2013 11:05:42 +0200
From: Adam Back <adam@cypherspace.org>
To: Joss Wright <joss-cypherpunks@pseudonymity.net>
Subject: Re: [cryptography] Paillier Crypto for homomorphic computation
Message-ID: <20130807090542.GA11713@netbook.cypherspace.org>
References: <20130806181152.GE29404@leitl.org>
 <20130806230907.GA3203@netbook.cypherspace.org>
 <20130807082602.GB6467@kafka.pseudonymity.local>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <20130807082602.GB6467@kafka.pseudonymity.local>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Hashcash: 1:20:130807:joss-cypherpunks@pseudonymity.net::lIfXsV+ZNmOSkhCs:0000
 0000000000000000000000004H/R
X-Hashcash: 1:20:130807:eugen@leitl.org::JFk3X5y7VYu2Rteu:0026UJ
X-Hashcash: 1:20:130807:cypherpunks@cpunks.org::OF+FsNh1KavJKlzm:000000000000000
 0000000000000000000000000bGs
X-Hashcash: 1:20:130807:zs-p2p@zerostate.is::cjUNQk+9C7a9fEBU:000000000000000000
 000000000000000000000000K6ck
X-Hashcash: 1:20:130807:info@postbiota.org::71qdB32YAmoxZ+rx:0000000000000000000
 0000000000000000000000002i1w
X-Hashcash: 1:20:130807:adam@cypherspace.org::Wkrc0vCL37Id9pk/:00000000000000000
 000000000000000000000000Eid+
Cc: cpunks <cypherpunks@cpunks.org>, zs-p2p@zerostate.is, info@postbiota.org
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>

No recall that the simplified paillier is c=g^m*r^n mod n^2 so
multiplication gives addition:

g^a*r1^n * g^b*r2^n = g^{a+b}*(r1*r2)^n

ie multiplication of ciphertexts gives you homomorphic addition of
plaintexts.

but g^a*r1^n ^ (g^b*r2^n) != g^{a*b}*r3^n

(the core part is g^a ^ (g^b) = g^{a*g^b} != g^{a*b}).

what does work is as I said raising to the power of a constant eg k:

(g^m*r^n)^k = g^{k*m}*(r^k)^n so you can still decrypt and the 
operation is multiply by constant k).

Adam

On Wed, Aug 07, 2013 at 09:26:02AM +0100, Joss Wright wrote:
>On Wed, Aug 07, 2013 at 01:09:07AM +0200, Adam Back wrote:
>> I dont get it.  Paillier is additively homomorphic only.  (And obviously by
>> implication multiplyable by non-encrypted constants.)
>
>Minor point, but by raising one Paillier ciphertext to the power of
>another you get multiplication without revealing the factor.
>
>>
>> RSA is multiplicatively homomorphic.  And Elgamal additive.
>>
>> Why is paillier proposed as "might scale homomorphic" the interesting
>> property is dual homomorphic crypto which Gentry and variants provide (but
>> at impractical computational and large space overhead huge).  Dual or fully
>> homomorphic is the interesting property because then you can do arbitrary
>> computations (using multiplication as single-bit AND and addition as
>> single-bit OR and building a CPU from gates - still expensive even if the
>> base algorithm was as efficient as Paillier/RSA/Elgamal but interesting).
>>
>> Also why would they send the "encrypted numbers" to two peers and have them
>> do the encrypted computation?  The whole point is its zero-trust secure from
>> the point of view of the client - client encrypts, server does computations
>> on encrypted values, sends encrypted result back to client, client decrypts
>> - and you dont need to trust the server.  No need for threshold crypto,
>> having multiple peers do some kind of multi-party computation etc.
>>
>> Adam
>>
>> On Tue, Aug 06, 2013 at 08:11:52PM +0200, Eugen Leitl wrote:
>> >----- Forwarded message from dan@geer.org -----
>> >
>> >Date: Mon, 05 Aug 2013 14:43:28 -0400
>> >From: dan@geer.org
>> >To: cryptography@randombit.net
>> >Subject: [cryptography] fwd: Paillier Crypto
>> >
>> >
>> >>http://9ac345a5509a.github.io/p2p-paillier/
>> >>
>> >>This is a form of Homomorphic Encryption that might actually scale,
>> >>given the right cloud backend. It verges on the spookiness of
>> >>Quantum.
>> >>
>> >>Support logic that might shed light on the true performance of
>> >>Paillier.
>> >>
>> >>http://plaintext.crypto.lo.gy/article/658/encounter
>> >
>> >
>> >--dan
>> >
>> >_______________________________________________
>> >cryptography mailing list
>> >cryptography@randombit.net
>> >http://lists.randombit.net/mailman/listinfo/cryptography
>> >
>> >----- End forwarded message -----
>> >--
>> >Eugen* Leitl <a href="http://leitl.org">leitl</a> http://leitl.org
>> >______________________________________________________________
>> >ICBM: 48.07100, 11.36820 http://ativel.com http://postbiota.org
>> >AC894EC5: 38A5 5F46 A4FF 59B8 336B  47EE F46E 3489 AC89 4EC5
>
>-- 
>Joss Wright | @JossWright
>http://www.pseudonymity.net

