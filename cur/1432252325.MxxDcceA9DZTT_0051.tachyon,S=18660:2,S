From rswatjfet.org+caf_=rsw=jfet.org@gmail.com  Fri Sep 19 07:47:50 2014
Return-Path: <rswatjfet.org+caf_=rsw=jfet.org@gmail.com>
Received: from mail-pd0-f171.google.com (mail-pd0-f171.google.com [209.85.192.171])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s8JBlmdU009459
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <rsw@jfet.org>; Fri, 19 Sep 2014 07:47:50 -0400
Received: by mail-pd0-f171.google.com with SMTP id y13so2479728pdi.30
        for <rsw@jfet.org>; Fri, 19 Sep 2014 04:44:23 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-original-authentication-results:delivered-to:message-id:date
         :user-agent:mime-version:to:subject:references:in-reply-to
         :content-type:precedence:list-id:list-unsubscribe:list-archive
         :list-post:list-help:list-subscribe:errors-to:sender:from;
        bh=gH1BRPwrKy94zN52SMAXRiLgJxryo10nnmYnpHEKR1k=;
        b=XWaCIiD5F4bPY6SyzuIiALPik7TD6PRhALTUzrLkV6kBQXj1ntbREQb2960NfUXrpa
         egXwODOvTCEqZTRi90mbZx0cgOP7ShLA+eu++7RcoKhLdhxlsY4eKqdcePZUZLfUBeKb
         tADrgMaTO/0mgeb3qDTGIJxDuvjvNPpk/+FXLilpvuHy4PqQ+tc/IFhxWr6jAC/c2dhw
         u3wGODDoskhViNUGIHBZ6feyS721TtWvoPqNDohNhd4vTl0C4cFYokNBiBPK1i2OX9c5
         FUWDbsE4M3/h5seqPqPZYiMRjJrzXOcC8xwLKVS1vE6BndzF8abGpqW0qTL/2I0kkzLW
         L/aA==
X-Original-Authentication-Results: mx.google.com;       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net
X-Received: by 10.70.48.227 with SMTP id p3mr511468pdn.40.1411127062935;
        Fri, 19 Sep 2014 04:44:22 -0700 (PDT)
X-Forwarded-To: rsw@jfet.org
X-Forwarded-For: rswatjfet.org@gmail.com rsw@jfet.org
Delivered-To: rswatjfet.org@gmail.com
Received: by 10.70.92.9 with SMTP id ci9csp240716pdb;
        Fri, 19 Sep 2014 04:44:21 -0700 (PDT)
X-Received: by 10.70.118.9 with SMTP id ki9mr400009pdb.104.1411127061458;
        Fri, 19 Sep 2014 04:44:21 -0700 (PDT)
Received: from localhost (antiproton.jfet.org. [209.141.47.85])
        by mx.google.com with ESMTPS id kc4si2622748pbc.47.2014.09.19.04.44.21
        for <rswATjfet.org@gmail.com>
        (version=TLSv1.2 cipher=RC4-SHA bits=128/128);
        Fri, 19 Sep 2014 04:44:21 -0700 (PDT)
Received-SPF: neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) client-ip=209.141.47.85;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s8JBlAnF009435;
	Fri, 19 Sep 2014 07:47:10 -0400
Received: from mail-02.1984.is (mail-02.1984.is [93.95.224.7])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s8JBl6CY009430
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Fri, 19 Sep 2014 07:47:08 -0400
Received: from [78.158.110.194] (helo=[192.168.1.150])
 by mail-02.1984.is with esmtpsa (TLSv1:DHE-RSA-AES128-SHA:128)
 (Exim 4.80) (envelope-from <cathalgarvey@cathalgarvey.me>)
 id 1XUwbC-000194-OC
 for cypherpunks@cpunks.org; Fri, 19 Sep 2014 11:43:38 +0000
Message-ID: <541C16E5.4080502@cathalgarvey.me>
Date: Fri, 19 Sep 2014 12:43:33 +0100
User-Agent: Mozilla/5.0 (X11; Linux i686;
 rv:24.0) Gecko/20100101 Thunderbird/24.6.0
MIME-Version: 1.0
To: cypherpunks@cpunks.org
Subject: Re: Email encryption for the wider public
References: <CABU-GB37qpwUuTtK15VmykzuR4_-AVQvSFUYXO=W8VC3J2hEFA@mail.gmail.com>
 <CAD2Ti29NreOO75KPNE3a5P6Fg-A7+O1H4NLRRQM4t7_QAwebaA@mail.gmail.com>
 <CAAMy4US_+776z-S-f9MMKnRC4BcP1pwV_DoPueDzpks0R3hfjw@mail.gmail.com>
 <CABU-GB1p8dPE0Pq1cCGixantmHvvVqgg6igWxnM9sUiqx4LC9Q@mail.gmail.com>
In-Reply-To: <CABU-GB1p8dPE0Pq1cCGixantmHvvVqgg6igWxnM9sUiqx4LC9Q@mail.gmail.com>
Content-Type: multipart/signed; micalg=pgp-sha512;
 protocol="application/pgp-signature";
 boundary="H7dUQH4XNQpJ4mgqBn3paFtrPuoqXdTNH"
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
From: Cathal Garvey <cathalgarvey@cathalgarvey.me>
X-Gspam-Loop: antiproton.jfet.org
Status: O
Content-Length: 13574
Lines: 255

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--H7dUQH4XNQpJ4mgqBn3paFtrPuoqXdTNH
Content-Type: multipart/mixed;
 boundary="------------090802040500040401010709"

This is a multi-part message in MIME format.
--------------090802040500040401010709
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

> Regarding the memorability issue, all I can say is that end-to-end
> encryption really does require sharing 100+ bit keys - it's essential!
> You may be able to memorise your email address at the moment, but
> that's only half the story, since you can't memorise your public key!

But you can memorise a passphrase and email address, and generate your
public key on the fly using key generation algorithms like the one used
in miniLock/deadLock. This deterministic key approach has its
disadvantages, but it addresses two key issues with PGP:

1) Your key doesn't exist when you're not "logged in" to a program
implementing the standard, so it can't be scooped and
brute-force-decrypted by an evil maid or the later installation of a
rootkit.

2) When out with friends, if you discover a friend who likes crypto or
convince someone else to try it, you can generate your pubkey on the fly
by "logging in", either on your own computer or theirs. Yes, this
transiently generates your private key on potentially untrusted
hardware, so it's a risk that must be carefully measured.

I think the "mail encryption for all" problem is entirely crackable. I
feel this would be trivial if we'd accept encryption tied to particular
devices, because that would hand off entirely the key management issue.
But, we don't want to be tied to particular devices, so we end up with
stupid problems like OTR keys that are different between phone and
laptop, or PGP keys not trusted on a phone, so can't decrypt. Key
generation on the fly helps to some extent, but it's hard to patch into
an existing system.

It would be nice if some future "email" was an entirely on-the-fly
affair; "logging in" deterministically generates a keypair *and* the
address in a DHT to visit to collect your most recent mail. Same process
on any device, uses proven primitives. With some UX to forbid weak keys
(like the key strength checker in miniLock) and a well designed, costly
key derivation function, you're pretty secure, and your mail can be
stored in plaintext or kept encrypted locally at the option of the
implementor or user.

On 19/09/14 10:33, Henry Augustus Chamberlain wrote:
> Hi all,
>=20
> Some very interesting points so far. To avoid making this email too
> long, I'm going to reply without quoting - I hope this doesn't
> inconvenience anyone.
>=20
> Regarding the memorability issue, all I can say is that end-to-end
> encryption really does require sharing 100+ bit keys - it's essential!
> You may be able to memorise your email address at the moment, but
> that's only half the story, since you can't memorise your public key!
> I can't solve every problem with PGP, but I still think this proposal
> solves a fair few of them. In some cases it improves on PGP, and in
> the other case it's at least no worse: you can still use online
> institutional directories etc if you want.
>=20
> Don't forget all the advantages this scheme could bring! Simplicity
> and transparency for the end user is really important! They're more
> likely to understand the significance of a public key if it forms part
> of the address (despite not understanding why it has to be this way).
>=20
> Perhaps it doesn't help Derek's mum - nor my mum, for that matter -
> but there are plenty of people for whom PGP is to complex whereas this
> scheme would be manageable. If you wish, you can send some emails
> encrypted and others unencrypted, just like you can with PGP - in this
> case, you'd just need two addresses (which is surely no worse than
> PGP, where you have an address and a key).
>=20
> Regarding telephone conversations: if it's with a mobile phone,
> perhaps a text message would work; if it's a landline, you probably
> have internet access, so an initial unencrypted email would work if
> you're not worried about man-in-the-middle attacks. (If you are
> worried about such attacks, then a bit of effort might be required,
> beyond just rattling off a short email address over the phone.)
>=20
> By the way, I'm suggesting printable characters to encode the key, not
> arbitrary bytes. An alphanumeric character stores nearly 6 bits (or 5
> if it isn't case-sensitive), so 256-bit keys would require around 50
> characters. Email standards allow 64 characters for the local part of
> the address, so there's room for error-correction too.
>=20
> Regarding the point about forged email addresses: for cryptography to
> work, you need to identify people using their keys, not their
> addresses. With PGP, you could send an email to my mum, using my email
> address but the wrong signature; if my mum is just relying on the
> email address, then that defeats the purpose of PGP. Of course, most
> PGP systems compare the key with that stored in the address book; a
> similar system can be used for my proposal, but with the advantage
> that forged emails don't give rise to the situation where the address
> is known but the key is unknown, which might lead a naive user to
> assume something's broken with the crypto software.
>=20
> Regarding webmail... I still haven't solved that one. Maybe there's an
> inherent contradiction in trying to include webmail in an end-to-end
> encryption system.
>=20
> I like the idea of using the "address+key@gmail.com" technique,
> although it does contradict the idea of "identify people using the
> key, not the address". Also, in my original proposal, I suggested
> using the private key (instead of a password) to login to the email
> server. I reckon Gmail is unlikely to allow that in the near future :)
>=20
> Best wishes,
>=20
> Henry
>=20

--=20
Twitter: @onetruecathal, @formabiolabs
Phone: +353876363185
Blog: http://indiebiotech.com
miniLock.io: JjmYYngs7akLZUjkvFkuYdsZ3PyPHSZRBKNm6qTYKZfAM

--------------090802040500040401010709
Content-Type: application/pgp-keys;
 name="0x988B9099.asc"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
 filename="0x988B9099.asc"

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.12 (GNU/Linux)

mQINBFES3ZMBEADjIBApyo6hm1jU2fdyCYm99nSnutjaVfwQ8egnLa6FLSyJyl96
2lGfdwb9e5isH/Tujt7VFhmU7carTVz7rtJbaCqGcgLY6IUEy4VGakZCjw6vsPUQ
NJZN7vS9wG9gUsTrw0QhtC8IQ+TAvrIERi32zab5amdw/znpa8p/tiLjEFapd0wE
Lyr9txlpPl3T+64eZ35SfneHF0OYPS79qpK3KJt3TDCYFrM41EevLVzQRosTnygk
8lMvQfqtNkdRJpmNHsjG1kFOzoEINVTyY4PeO6rRaeDp6H2KD5tu9SXsi8uF1Ayt
F0fB+1c/WHTEvtvNneGonOkWWJokzayfMRvoDhxGsrFsASvoLZ21m7U9Fdyid4Cw
iU8pAgRCq53CV+YGLv6qioPDpuba0S4cO/eUPR6APcKHcE0xU5A5yIKiCPVQQKG3
85P4BRC+GwZ2ni2/cz/jwzFi/j9CuSoU3L1fLGN5wHmmMvNOSyIgtCWx7tnxvmGE
eGbLtwfgv8pXFF9WoH1d2nvZNdgWNaGrp1zxssho62pnO9FTe6FgvIyLD4v7OyIP
kPoTjWaaZh/U0hXeQyQOXKeTFEAMblMmpDHeCYLwjtWZLo4Z8+0Ez5sk3B0OETH4
B0K7hwIhIBqp9Gcgq4haSpo+vfxRJH3ouRGfbNMCcras1s+yBmUbvR3mBQARAQAB
tI9DYXRoYWwgR2FydmV5IChPdGhlciBhY2NzOiBvbmV0cnVlY2F0aGFsQHR3aXR0
ZXIsIGNhdGhhbGdhcnZleUBnaXRodWIsIGNhdGhhbGdhcnZleUBnaXRvcmlvdXMs
IGluZGllYmlvdGVjaC5jb20pIDxjYXRoYWxnYXJ2ZXlAY2F0aGFsZ2FydmV5Lm1l
PokCSwQTAQgANQIbAwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgBAYMTI3LjAuMC4x
Ojk5OTk5BQJSeChBAhkBAAoJEL0iNgSYi5CZ3CwQAN3974eow6SnmAHdQY+Pq2La
l5YDRIqcrVO3ybDrZ0gscS9K3rqNN4VRY45RIeMaq+CVjIJYqLCOIkzFCxNCxiyp
ZjzRBOcEsH9j8sxRkUKLRSlTlb+u6SrQll16L5JLQY2tFl5dgpWgakQD7xD0iUQ4
qX/HEakQhGiCUypYKqrT5GgrIFVsf22OMxFbwflNO/QNwzZVBDxf2yqi/c40q/rZ
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
ohzRIlrk1LdGFiPy
=3DwOG4
-----END PGP PUBLIC KEY BLOCK-----

--------------090802040500040401010709--

--H7dUQH4XNQpJ4mgqBn3paFtrPuoqXdTNH
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQIcBAEBCgAGBQJUHBblAAoJEL0iNgSYi5CZ3b0P/jLDDmIdkzV8TPBOMjSoaCpw
XU6FfVWX/ujPFRE4bqHbQCR183go478VPsBum7hKGCTESVwJGS7gQlc5dxMnLLpp
toqWDWo6zwpHfdm710XM1uBp7WouSKrFcGqlXrJdNFI24nKZ6JtPWqZ/osd1NL6l
uh0K2xWZmXYLaGaYVEqwIAHKzdJzMfli3JJoD45Zf56pr37suSs9017eemqHtrcv
TRBdnfZfZxBnYXwHioB5ZHxyhuqow1MsqJN+H9ynAOIV95b2nHfyrPVvNOONvhDd
L181z7qsA+yOQmCmwf8zm3z8kYjR3/zGPG63Xz+D3Vlozh7WjFiDxTHg6V/gF7tC
Ckmx+m+hYrKF/MEcj4yfQJVkyZeBUjxPAfKQRNngHfLk8K2afvmZ3upaah0QiAs2
HA9uJq1BRdZvQiYLBpxu2Avg9y2L4G3Pw1tx4j7XFe94I2Tb7ccEBr8SZyDM317p
DkoavfmzWtkr1A2/QxTeiYeTulsXXWnXNfC5mpV9QEhinD49P2SyZFS+oE++tOkY
p7zhLyTG47lsAJZ3N+07fBSBPzigGZbBNLkajVvUeLJozCIKmQZJaO37Ts7Fy59Q
6OXfpd/RkCSiD48+uB1wtd4NjNQPbf52Tk5n5zCLMYgFix+8ePwp+z58Ks7XGmRR
tKQdmmhZY5qzOuVrW9R+
=POEL
-----END PGP SIGNATURE-----

--H7dUQH4XNQpJ4mgqBn3paFtrPuoqXdTNH--

