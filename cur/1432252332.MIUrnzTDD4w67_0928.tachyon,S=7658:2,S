From cypherpunks-bounces@cpunks.org  Tue Nov 12 16:17:27 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rACLHEL2001335;
	Tue, 12 Nov 2013 16:17:16 -0500
Received: from mail-02.1984.is (mail-02.1984.is [93.95.224.7])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rACLHAZu001331
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Tue, 12 Nov 2013 16:17:13 -0500
Received: from [79.97.71.97] (helo=Neptune)
 by mail-02.1984.is with esmtpsa (TLSv1.2:DHE-RSA-AES128-SHA:128)
 (Exim 4.80) (envelope-from <cathalgarvey@cathalgarvey.me>)
 id 1VgLKZ-0000i5-1o
 for cypherpunks@cpunks.org; Tue, 12 Nov 2013 21:17:03 +0000
Date: Tue, 12 Nov 2013 21:16:51 +0000
From: Cathal Garvey <cathalgarvey@cathalgarvey.me>
To: cypherpunks@cpunks.org
Subject: Re: [SOT] {FWD} [Dailydave] Don't use vowels in passwords! (fwd)
Message-ID: <20131112211651.3aa0545c@Neptune>
In-Reply-To: <CAFVRnyo_RGqT1rQwrm-wbzkaY7kCNwyVQ4GPyXj8Kjed_AVfDg@mail.gmail.com>
References: <Pine.LNX.4.64.1311110628320.3437@mx1.mfn.org>
 <CAFVRnypYYJuwmrJWnP5AnRLC4-j8fZz84NwJECevg6oZhMSRTA@mail.gmail.com>
 <52813E19.3060404@kjro.se> <1448719.1bQligVbQN@lap>
 <CAFVRnyo_RGqT1rQwrm-wbzkaY7kCNwyVQ4GPyXj8Kjed_AVfDg@mail.gmail.com>
X-Mailer: Claws Mail 3.8.1 (GTK+ 2.24.10; i486-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=PGP-SHA512;
 boundary="Sig_/13ClvUdjMZVET.kU6dxhbIj"; protocol="application/pgp-signature"
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 5354
Lines: 124

--Sig_/13ClvUdjMZVET.kU6dxhbIj
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

> The xkcd comic doesn't really apply anymore. Dictionary attacks have
> gotten to the point where they can crack 'momof3g8kids' and
> 'Coneyisland9/,'

Your examples suggest you're referring to that article that alleged
dictionary attacks can crack 90% of hashed database passwords offline in
4 hours, right? Can't remember the site. They neglected to say they
were dealing with unsalted md5 hashes.

A password of good length, stored using a *password hash*, is pretty
secure against attack. 'Good length' here is 20 characters or more, if
you ask me..but the "true" entropy of a passphrase is not merely the
length or character value, but number of words. So a 4-word
20-character passphrase is probably slightly weaker than a 5-word one,
because pattern-based or markov-based brute-forcers may have an easier
time working through 4-character passphrases.

All speculation, but still. A password hash that is uniquely salted
forces an attacker to brute force every possible password again for
each attacked password. A password hashed with a scheme like scrypt or
pbkdf2 can require a second or more per password hashing attempt. The
entropy of a password becomes infinitely less limiting to security when
each hashing attempt takes longer than iterating over a dictionary!

For extra points, you could probably hack up something to dissociate a
password hash from the account on the server database side, so an
attacker getting the database can't even specifically target a
particular high-value user.

There are JS libs out there for PBKDF2 and SCRYPT, and salts can be
uniquely assigned trivially. Site owners can check passwords at
sign-up time against a list of known passwords in bruteforce
dictionaries. There are probably libraries to check and enforce decent
passwords (as in, length and proportionate variability of character use,
not stupid overcomplexity), and if not then they'd be fairly easy to
hack up.

All of which means this: the problem we have today isn't that passwords
suck (although there is a minimum practical length you should enforce).
It's that the people providing the password have no control over the
security policy of the site owners, and site owners think password
security is something you enforce on users (no vowels! Pray to Slaanesh
whilst entering your passwords or face account deletion!) and that you
can store plains or unsalted md5s on your syndicated hipster blogging
platform and sleep untroubled.

On Tue, 12 Nov 2013 11:00:01 -0500
David Vorick <david.vorick@gmail.com> wrote:

> https://www.schneier.com/blog/archives/2013/06/a_really_good_a.html
>=20
> The xkcd comic doesn't really apply anymore. Dictionary attacks have
> gotten to the point where they can crack 'momof3g8kids' and
> 'Coneyisland9/,'
>=20
> and apparently have dictionaries breaking 100 million words. As
> password attacks get better and better at predicting human patterns
> (and hardware gets faster), you are going to need to completely
> generate your passwords at random in order to defend against
> dictionary attacks.
>=20
> Which means the current password model is broken, as we all know it
> has been for a while. Why isn't there a stronger effort to replace it
> with something like a universal public key system?
>=20
>=20
> On Tue, Nov 12, 2013 at 4:01 AM, rysiek <rysiek@hackerspace.pl> wrote:
>=20
> > Dnia poniedzia=C5=82ek, 11 listopada 2013 15:29:13 Kelly John Rose pisz=
e:
> > > The most useful strategy I've seen is to use multiple
> > > authentication methods or the "a few really hard passwords +
> > > random statement for each site."
> > >
> > > Ie. you can probably memorize something like
> > >
> > > lMB^9Pl!
> > >
> > > so use that for the sites and then tack on something like
> > >
> > > lMB^9Pl!Ilikeshopping123
> > >
> > > Then the probability of actually cracking that password is low,
> > > and unless you are being specifically targeted, even if they got
> > > that password they wouldn't immediately be able to use it on
> > > other websites. It's easy to remember because that 8 digit code
> > > you'll type everywhere, and the ending is always something
> > > cognitively easy.
> >
> > Oblig. XKCD:
> > http://xkcd.com/936/
> >
> > --
> > Pozdr
> > rysiek


--Sig_/13ClvUdjMZVET.kU6dxhbIj
Content-Type: application/pgp-signature; name=signature.asc
Content-Disposition: attachment; filename=signature.asc

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQIcBAEBCgAGBQJSgprDAAoJEL0iNgSYi5CZfssQANnKRBNdoARHEWmX3r1NvBmB
7ZLXcuWP+aKOgPiw/rin6wid0JCvAxyFtMBEULoXExtpnIKrEJcdNZcigKtKxGGW
8GJAComdjrd39oQgVBgv+LhnXb+Mj0GmhWyJhNwC7VE1uzhArj8bagg6uvDqahtH
duYfPsl6xJckpDG56AoC5MJQCHNeXzOfG5qDbUNINPOIkK/KEqwvNdjoEm7SVpNB
AIYhKZhedB6qicsEBUTUDp5qJGCf2kqum43ziuU5964k1nPlBGkddUbfUmE2SFyX
lwu5BhKbEP7bGBW/X9uxZyA6EqJh2SqRbO7jXURlTUnmaN6f+i088hVCkoteeYyX
Xp350qqaOHASTlOLyO8fTRB3IndZ/5XRcLbjOKE4PH/n2UpANnIU+rEXdQ0hx16W
EMJCq/6aJZzlLFqChDxKAOwIve4OqfY+/3ZAwUR5I4p1646CUGQeaSfC9fv4Ivy4
KQw7onlTyk6BCReM/enKMB0ZPXgwJT67yDaw3sF+4X8tkfGz5rHdnVkX7+dw2Fx/
ieGR7JGtTL/kIqXujMJAEIsmpzZNX2iHteJ6BE4KFCogV0NUQhE1qt7+Tc+SVjaP
9khdEadirAjMfJnbdh1zd+/iHGk4ae//EHIPOMrC5kLLiDtluRjboLb3sULWNUYa
icqND1SV5r2pv9ZNO1ZI
=zi5d
-----END PGP SIGNATURE-----

--Sig_/13ClvUdjMZVET.kU6dxhbIj--

