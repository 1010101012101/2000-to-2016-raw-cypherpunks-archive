From owner-cypherpunks@jfet.org  Wed Jun  1 18:11:14 2005
Return-Path: <owner-cypherpunks@jfet.org>
Received: from proton.jfet.org (majordomo@localhost [127.0.0.1])
	by proton.jfet.org (8.13.4/8.13.4/Debian-1) with ESMTP id j51M9iBl032129
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Wed, 1 Jun 2005 18:09:44 -0400
Received: (from majordomo@localhost)
	by proton.jfet.org (8.13.4/8.13.4/Submit) id j51M9iko032128
	for cypherpunks-outgoing; Wed, 1 Jun 2005 18:09:44 -0400
Date: Wed, 1 Jun 2005 18:09:29 -0400
From: Adam Back <adam@cypherspace.org>
To: DiSToAGe <distoage@sbbi.net>
Cc: cypherpunks@jfet.org, Adam Back <adam@cypherspace.org>
Subject: Re: /. [Intel Adds DRM to New Chips]
Message-ID: <20050601220929.GA1869@bitchcake.off.net>
References: <20050528195352.GE3361@leitl.org>
  <1117644476.6910.181.camel@station>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
In-Reply-To: <1117644476.6910.181.camel@station>
User-Agent: Mutt/1.4.1i
X-Hashcash: 1:20:050601:distoage@sbbi.net::1tRitfBHH2SeBs1M:64n2
X-Hashcash: 1:20:050601:cypherpunks@jfet.org::0aIqxzqdrzOJbFtX:3nYv
X-Hashcash: 1:20:050601:adam@cypherspace.org::Aat37WlgDi0WrX1h:2W15
Sender: owner-cypherpunks@jfet.org
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 2182
Lines: 46

[could you use CPU emulator to bypass these motherboard and CPU based
DRM systems].

Answer: no.  They have but private keys inside the DRM hardware, and
signed the corresponding public key with a CA that they control.  That
plus some hashing/bootstrapping etc of the startup and some other code
allows them to ensure that an emulated version of the same software
could not provide a valid signature + cert that a DRM content provider
would accept.

They also have models where the video card and/or monitor are in the
trust model -- and there are secured high bandwidth channels between
DRM provider and CPU, and CPU and graphics card/decoder.

There is also a model for software called "Trusted Agents" that
actually run on your CPU but are in a ring -1 (below ring 0) that you
can not debug.

Another possibility is read the stuff out of RAM or video RAM.
Midterm they can fix that also with on the fly RAM encrypt/decrypt.

But I still say it's futile and stupid, because people will hack the
digital display, tap into the graphics card, hack video card drivers
etc and re-encode.  (Rip-once copy anywhere).  Worst case people will
A2D from the display "telesync" style.

Adam

On Wed, Jun 01, 2005 at 06:47:56PM +0200, DiSToAGe wrote:
> it seem more compagny are going to put protection and drm in hardware,
> to avoid bypassing or cracking it. I ask myself from times about such
> systems bypassing with emulators use. The role of an emulator is to work
> "as" a real cpu. What would be the usability of such an emulator with
> cpu-drm enabled emulation ? The emulator work with real instructions of
> drm-cpu, the os belive as a real one. But the emulation software can
> give access of such drm datas to softwares running in the host os to
> access or modify them. What people here that certainly have better
> experiences than me in crypto think about such system ? Is it a possible
> flow in new drm protected systems ?
> 
> 
> -- 
> "Perhaps one day "computer science" will, like Yugoslavia, get broken up
> into its component parts. That might be a good thing. Especially if it
> meant independence for my native land, hacking."
> (hackers and Painters) [ Paul Graham ]

