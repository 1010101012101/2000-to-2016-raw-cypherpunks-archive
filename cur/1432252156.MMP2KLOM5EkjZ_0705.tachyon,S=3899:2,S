From owner-cypherpunks@al-qaeda.net  Fri Jul  9 01:58:50 2004
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (localhost [127.0.0.1])
	by positron.jfet.org (8.12.11/8.12.11/Debian-3) with ESMTP id i696wXjL013051
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Fri, 9 Jul 2004 01:58:33 -0500
Received: (from majordomo@localhost)
	by positron.jfet.org (8.12.11/8.12.11/Debian-3) id i696wXUl013050
	for cypherpunks-outgoing; Fri, 9 Jul 2004 01:58:33 -0500
Date: Fri, 9 Jul 2004 06:52:50 +0000
From: Justin <justin-cypherpunks@soze.net>
To: cypherpunks <cypherpunks@al-qaeda.net>
Subject: Re: Querying SSL/TLS capabilities of SMTP servers
Message-ID: <20040709065250.GA21105@arion.soze.net>
References: <0407081735340.-1275484700@somehost.domainz.com>
  <20040708215044.GA20069@arion.soze.net>
  <0407090137550.0@somehost.domainz.com>
  <20040709010334.GA20612@arion.soze.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
In-Reply-To: <20040709010334.GA20612@arion.soze.net>
X-PGP-Fingerprint: 9AE2 9FC3 D98B 9AE2 EE83  15CC 9C7D 1925 4568 5243
X-Hashcash: 0:040709:cypherpunks@al-qaeda.net:522128e3723769f2e68bcddd
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 2551
Lines: 111

This one should work better.  The last one had string comparison
problems.


#!/usr/bin/perl

use IO::Select;
use IO::Socket;
use Net::DNS;

$ehloname = "mail.senate.gov";
$timeout = 15;
$dlevel = 0;

sub debug {
    (my $str, my $mlevel) = @_;
    if ($mlevel <= $dlevel) { print "DEBUG $str"; }
}

sub checkmailtls {
    my ($domain, $mpri, $mrelay) = @_;
    my $proto = "smtp";
    my $hastls = "no-tls";
    my @flags;

    my $mhost = IO::Socket::INET->new (
 	    Proto => "tcp", PeerAddr => $mrelay,
	    PeerPort => "25", Timeout => "10"
    );
    if (! defined $mhost) {
	print "$domain $mpri $mrelay noconnect\n";
	return;
    }

    debug("opened connection to $mrelay\n", 1);

    $sel = IO::Select->new($mhost);
    @readable = $sel->can_read($timeout);   # magic number
    if ($#readable == -1) {
	print "$domain $mpri $mrelay timeout-a\n";
	goto OUT;
    }
    $greeting .= <$mhost>; # there's only one handle; we know which it is.

    debug("greeting: $greeting", 2);
    if ($greeting =~ /[\\*]{8}/) {
	$proto = "smtp";
	push (@flags, "filtered");
    }
    if ($greeting =~ /\b(esmtp|postfix|exim|sendmail)\b/i) {
        debug("setting esmtp (greet)!\n", 1);
	$proto = "esmtp";
    	debug("found esmtp-indicator in greeting\n", 1);
    }

    print $mhost "EHLO $ehloname\r\n";
    print $mhost "QUIT\r\n";

    if (! (@readable = $sel->can_read($timeout))) {
	print "$domain $mpri $mrelay timeout-b\n";
	goto OUT;
    }
    while (<$mhost>) { #$sel->can_read(0)) {
	chomp;
	debug("loop-recv: $_\n", 2);
	if (/^5[0-9]{2}/) {
	    if ($proto =~ /^esmtp/) {
		push(@flags, "lies");
	    	$proto = "smtp";
	    }
	    $hastls = "no-tls";
	    last;
	}
	if (/STARTTLS/) {
	    if ($proto =~ /^smtp/) {
		debug("setting esmtp (stls)!\n", 1);
		$proto = "esmtp";
		push(@flags, "nobproto");
	    }
	    $hastls = "adv-tls";
	    last;
	}
    }
    print "$domain $mpri $mrelay $proto $hastls @flags\n";

    # try again just in case the remote host didn't notice the first one
    print $mhost "QUIT\r\n";
OUT:
    close $mhost;
    debug("closed connection to $mrelay\n", 1);
}

### begin ####
if ($#ARGV >= 0) {
    for ($i = 0; $i <= $#ARGV; $i++) { push (@hostfifo, $ARGV[$i]); }
} else {
    while (<>) { chomp; push (@hostfifo, $_); }
}

while ($domain = shift(@hostfifo)) {
    my @mx = mx($domain);
    if ($#mx == -1) {
	checkmailtls($domain, "A", $domain);
    } else {
	foreach $record (@mx) {
	    my $mrelay = $record->exchange;
	    my $mpri = $record->preference;
	    checkmailtls($domain, $mpri, $mrelay);
	}
    }
}

