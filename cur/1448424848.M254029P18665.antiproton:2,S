Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id tAP4DbV0018649;
	Tue, 24 Nov 2015 23:13:39 -0500
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=P3rY2no8;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: from mail-ig0-f170.google.com (mail-ig0-f170.google.com
 [209.85.213.170])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id tAP4DYIS018645
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Tue, 24 Nov 2015 23:13:36 -0500
Received: by igcto18 with SMTP id to18so29380676igc.0
 for <cypherpunks@cpunks.org>; Tue, 24 Nov 2015 20:13:28 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:from:date:message-id:subject:to
 :content-type:content-transfer-encoding;
 bh=7uP0aO4t4kFc6n/IMoOzuO++ZF35Aki1+bGQL1gaU+Q=;
 b=P3rY2no8jhjefB/phaHDjIhv58BsPdHfmlyYb9UTWG10+7wZiEFzYrzuVyOA7XpDUI
 rliQeaBA1y2Fc9KiTvQcmkHy6c0LC9Wf5gvetc4HZm4RN9Zq/6ZwpirUNiQgJ9h3VEjq
 FH9MoSk7VCuXM7wS6S3v6ilqNFQVpfrR2im1dVCV5v5L7qtjS2su2wxBp6CRbBXxvGdW
 lrawPoNOETVDGN5D04PQ9WGehZ3m4g1riYLnK7ZM3kRSeGw3eaw+ZbDV8RkiyZekr0V3
 vPjgx2zdp5yMVhosFV8SnLiCiIQuWYaNJQA9kR9VLSxx9f45j2MKIEzfKK1jvQ184YcN
 CNHw==
X-Received: by 10.50.150.100 with SMTP id uh4mr1961817igb.23.1448424808452;
 Tue, 24 Nov 2015 20:13:28 -0800 (PST)
MIME-Version: 1.0
Received: by 10.36.137.197 with HTTP; Tue, 24 Nov 2015 20:12:49 -0800 (PST)
In-Reply-To: <E1a1FcF-0002Qr-Hi@elasmtp-kukur.atl.sa.earthlink.net>
References: <E1a1FcF-0002Qr-Hi@elasmtp-kukur.atl.sa.earthlink.net>
From: grarpamp <grarpamp@gmail.com>
Date: Tue, 24 Nov 2015 23:12:49 -0500
Message-ID: <CAD2Ti2_RCn9cOGggAJRnjHuqP5Ty8+ivCQmFaOyRDdd=r707Rg@mail.gmail.com>
Subject: Fwd: [Cryptography] A Paris Cryptographer On Encryption and Terrorists
To: cypherpunks@cpunks.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by antiproton.jfet.org id
 tAP4DYIS018645
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 163

---------- Forwarded message ----------
From: Henry Baker <hbaker1@pipeline.com>
Date: Tue, Nov 24, 2015 at 10:34 AM
Subject: [Cryptography] A Paris Cryptographer On Encryption and Terrorists
To: cryptography@metzdowd.com


FYI --

https://nadim.computer/2015/11/23/on-encryption-and-terrorists.html

Nadim Kobeissi
On Encryption and Terrorists

Nov 23, 2015

In light of the recent terrorist attacks, things are getting heated
for the regular security and encryption software developer.  Being one
myself, I’ve been on the receiving end of a small avalanche of
requests from journalists, political pundits and even law enforcement.
I’m also someone who was born and raised in Beirut and who recently
immigrated to Paris, both of which were the sites of twin attacks, one
day apart from each other.

It seems necessary to share some perspective on what’s going on with
encryption software, the terrorists supposedly using it, and what this
means for the rights and the security of our global communities.

The encryption software community writes a large variety of software,
from secure instant messaging to flight tower communication management
to satellite collision prevention.  We do this for a number of
reasons, but there’s always an underlying shared understanding: that
we’re using mathematics and engineering to contribute towards a
society that’s safer, more capable and able to communicate with a
sense of privacy and dignity inherent to all modern societies.  The
premise driving the people writing encryption software is not exactly
that we’re giving people new rights or taking some away: it’s the hope
that we can enforce existing rights using algorithms that guarantee
your ability to free speech, to a reasonable expectation of privacy in
your daily life.  When you make a credit card payment or log into
Facebook, you’re using the same fundamental encryption that, in
another continent, an activist could be using to organize a protest
against a failed regime.

In a way, we’re implementing a fundamental technological advancement
not dissimilar from the invention of cars or airplanes.  Ford and
Toyota build automobiles so that the entire world can have access to
faster transportation and a better quality of life.  If a terrorist is
suspected of using a Toyota as a car bomb, it’s not reasonable to
expect Toyota to start screening who it sells cars to, or to stop
selling cars altogether.

And yet, this is the line of questioning that has besieged the
cryptography community immediately after the Paris attacks.  A simple
mention of my encryption software in an Arabic-speaking forum is
enough to put me on the receiving end of press inquiries such as “are
you aware of any terrorists using your software?  Do you feel it’s
your responsibility to monitor terrorist activity?”  Or, more bluntly,
do I feel like I’m complicit in aiding terrorists, by the simple fact
that I write cryptography software or currently do PhD research in
applied cryptography?

The brouhaha that has ensued from the press has been extreme.  I’ve
received calls that bluntly want to interview me regarding “technology
used by terrorists, such as yours.”  A Wired article, like many
alongside it, finds an Arabic PDF guide on encryption and immediately
attributes it as an “ISIS encryption training manual” even though it
was written years ago by Gaza activists with no affiliation to any
jihadist group.

In this rush to blame a field that is largely unknowable to the public
and therefore at once alluring and terrifying, little attention has
been paid to facts: The Paris terrorists did not use encryption, but
coordinated over SMS, one of the easiest to monitor methods of digital
communication.  They were still not caught, indicating a failure in
human intelligence and not in a capacity for digital surveillance.

But even in light of all the evidence pointing towards a human
intelligence failure, cryptography, being to the outsider a scary and
mysterious usage of secret codes and complicated algorithms, remains
an easy target.  The press again drives the discussion, each time with
a lessened priority for measured questioning and proper investigation.
Why haven’t you inserted back doors into your software?  Do you want
terrorists to use your tools?

The call for backdoors is nothing new.  During my career in the
private sector, I’ve seen requests to backdoor encryption software so
as to please potential investors, and have seen people in the field
who appeared to stand for secure software balk under the excuse of “if
that’s what the customer wants,” even if it results in irreparable
security weaknesses.  I’ve had well-intentioned intelligence officers
ask me informally, out of honest curiosity, why it is that I would
refuse to insert backdoors.  The issue is that cryptography depends on
a set of mathematical relationships that cannot be subverted
selectively.  They either hold completely or not at all.  It’s not
something that we’re not smart enough to do; it’s something that’s
mathematically impossible to do.  I cannot backdoor software
specifically to spy on jihadists without this backdoor applying to
every single member of society relying on my software.

And I’ve seen what guarantees secure communication can give a society.
I’ve seen my software used in Hong Kong to organize protests against a
government otherwise unwilling to give people their rights.  I’ve seen
my colleagues produce software used by Egyptians rallying for
democracy.  I’ve had childhood friends call me from Beirut, desperate
to know of a way to organize protests against a government that would
lock them up were they to use public phone lines.  I’ve set up
communication lines for LGBTQ organizations so that they can give
counsel without fearing ostracization or reprisal.  And in the comfort
of my new life in France, I’ve also relied on encryption so that I
know I’m obtaining my simple right to privacy when discussing my daily
life with my friends or with my partner.

I’ve come to see encryption as the natural extension a computer
scientist can give a democracy.  A permeation of the simple assurance
that you can carry out your life freely and privately, as enshrined in
the constitutions and charters of France, Lebanon as well as the
United States.  To take away these guarantees doesn’t work.  It
doesn’t produce better intelligence.  It’s not why our intelligence
isn’t competing in the first place.  But it does help terrorist groups
destroy the moral character of our politics from within, when out of
fear, we forsake our principles.

If we take every car off the street, every iPhone out of people’s
pockets and every single plane out of the sky, it wouldn’t do anything
to stop terrorism.  Terrorism isn’t about means, but about ends.  It’s
not about the technology but about the anger, the ignorance that holds
a firm grip over the actor’s mind.

I grew up and spent a decade of my childhood in south Beirut and was
literally neighbors with the security sector of Hezbollah, a guerilla
organization that fights frequent wars with Israel.  During the 2006
war, an Israeli fighter jet carpet-bombed the entire neighborhood,
razing my home and that of many others to the ground.  While walking
through a field of rubble and unexploded cluster bombs to try and find
my house, I distantly saw a friend of mine, far away on the other side
of whatever it was that I was staring across.  We locked eyes.  Then,
we burst out laughing.  We laughed for a long time.

In 2008, I got the opportunity to move away from Lebanon and to get an
education abroad.  This opportunity was rare and unusual.  Making
encryption software is hard, too: for many of my first years abroad,
much of my software was riddled with bugs, and it took practice and
feedback in order to start getting things right ­ namely, what my
education abroad of Lebanon really was about.

Visiting south Beirut a few years later, I found that I had changed
but that no one else there had.  The rubble was mostly but not
completely gone.  I also found that people were angry, and that
Hezbollah had pledged to rebuild their homes.  Left without any hope
for a good education, for a happy life, with much of their families
missing, with their friends dead, many pledged themselves in return.

That’s what’s causing terrorism, not encryption software.

nadim@nadim.computer

_______________________________________________
The cryptography mailing list
cryptography@metzdowd.com
http://www.metzdowd.com/mailman/listinfo/cryptography

