From cypherpunks-bounces@cpunks.org  Tue Oct 15 08:16:54 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r9FCGkL2022274;
	Tue, 15 Oct 2013 08:16:48 -0400
Received: from mail-02.1984.is (mail-02.1984.is [93.95.224.7])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r9FCGgVN022270
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Tue, 15 Oct 2013 08:16:45 -0400
Received: from [109.106.100.197] (helo=Neptune)
 by mail-02.1984.is with esmtpsa (TLSv1.2:DHE-RSA-AES128-SHA:128)
 (Exim 4.80) (envelope-from <cathalgarvey@cathalgarvey.me>)
 id 1VW3YC-00044c-6y
 for cypherpunks@cpunks.org; Tue, 15 Oct 2013 12:16:36 +0000
Date: Tue, 15 Oct 2013 13:16:21 +0100
From: Cathal Garvey <cathalgarvey@cathalgarvey.me>
To: cypherpunks@cpunks.org
Subject: Re: [linux-elitists] Browser fingerprinting
Message-ID: <20131015131621.005755a8@Neptune>
In-Reply-To: <525D2C52.1020801@echeque.com>
References: <20131014173022.GA32033@netbook.cypherspace.org>
 <1381804027490.ae5de89b@Nodemailer>
 <20131015105404.097eac36@Neptune> <525D2C52.1020801@echeque.com>
X-Mailer: Claws Mail 3.8.1 (GTK+ 2.24.10; i486-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=PGP-SHA512;
 boundary="Sig_/PO5PNsap5w270EoR5nNd3b="; protocol="application/pgp-signature"
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 3773
Lines: 80

--Sig_/PO5PNsap5w270EoR5nNd3b=
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: quoted-printable

> Javascript can be controlled by being recompiled into the Caja subset
> of javascript.
I've been thinking along these lines, all right.
So what functions of Javascript are nonessential to the concept of a
"rich webapp" but useful for abuse and fingerprinting? If you could
strip JS down to a set of awesome functions that reduce the abuse
potential, what stuff would you strip out?

A lot of the nasty stuff isn't even JS engine stuff, it's DOM stuff
from the browser being made available to JS, so it's not entirely
linguistic. A lot of it's bad API, probably much harder to fix.

Still, reduced-set JS, with an in-browser standard for verifying signed
JS code, would be great. I'm often boggled when I think this over that
RMS forgot to include code signing in his suggestion for how to markup
non-trivial JS with source code and license text; I figured "code
verification" would be a crucial part of the Free Software philosophy
when it comes to drive-by code.

Another crucial change I'd like to see: immutable javascript. When
including a script with the <script> tag, there should be an attribute
"immutable=3Dtrue" and another saying "opaque=3Dtrue" that prevents *code
in the page* from reading or modifying that script, while not
preventing the user from reading or auditing the code. Ability of
dynamically included/injected JS to fuck up or spy on other JS on the
page is the principal reason that you can't trust JS-crypto even if you
trust the host.

On Tue, 15 Oct 2013 21:51:46 +1000
"James A. Donald" <jamesd@echeque.com> wrote:

> On 2013-10-15 19:54, Cathal Garvey wrote:
> >> with folks that refuse to run JavaScript
> > Not "JavaScript"; "Unverified, potentially malicious code with a
> > rich history of exploits inside a frame I use to navigate the online
> > world". It wouldn't matter if the code was LISP or Python; the
> > problem isn't the language, it's the context.
> >
> > That said, I do run Javascript, albiet through NoScript. I just wish
> > there were more fine-grained policy restrictions I could place on
> > it, such as "No XmlHttpRequest/Websocket" or "No browser
> > introspection (fonts, boundaries, etc.)", and let webapps that are
> > trying to fingerprint me without my permission just crash and burn.
>=20
> Javascript can be controlled by being recompiled into the Caja subset
> of javascript.
>=20
> In practice, however, this is only done when a server controlled by
> one organization is generating a web page containing javascript
> controlled by another organization - Caja is used to protect one
> website against another, but not used to protect the client against
> the website.

--Sig_/PO5PNsap5w270EoR5nNd3b=
Content-Type: application/pgp-signature; name=signature.asc
Content-Disposition: attachment; filename=signature.asc

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQIcBAEBCgAGBQJSXTIVAAoJEL0iNgSYi5CZv3gQAJ7b+h3Vx1f0b2+Z9kdJCsPo
YbmTmmbh2YgxhnoL9CnyVO23WwzvR5+PlAXOaELZLwJQTr/E9J6MfQmXyMlX74xp
OJK7uxJ2K5bRjneshqdcyipUpOLWHdvENni0ZWEN6yT0extzWocl7r2X4wOdGHQa
0VVlnypyrOZ7AcN3xCpv95az3sbMwLQ8QA0yHgko+qftEun3/63YaQh4HKg0yExC
DRauZr4bA4jzK4yXwgjQAQb/BbRT0/ZSzlCO0wUbLUhqRnofF9ZoR9qvoN0wyrdK
7U65037Kb6XBblbxFOpH8uTzyppyy5kIPR0OKAAPkoB23hcoe/inYyiqyNiwGbvc
aXyV6LlKWo95cvUWhPpTPVDVG3Bz/pAe1bycG8hxgsfHhE39quYW8HXwNZjwntDz
7rmKGdSSJmUBZN+9qlhZnN2jB2A6UiWKLbF3EjEtSS2vY2Z1l5GbsT2k9jANnYxe
sEyoVS5Hxm7ESXYhQ8O+BME7FjfOghLSuC4tH5EbOMT6UHeQKbP5xiq0/EednRmQ
S2DRtUGJwMwlEFEIlK8RaD+rCUyF84RwYt111c4ebMMGVrmC2Gwl/bqs2gCJQGvr
rlvp4UXaAZZWcn9xVWP1F/itr2nEH4qnqkphcc3cHIDxExL0HrsL19MopT/ebTSj
n3UlgExSXxdH+qACvX+f
=KXLv
-----END PGP SIGNATURE-----

--Sig_/PO5PNsap5w270EoR5nNd3b=--

