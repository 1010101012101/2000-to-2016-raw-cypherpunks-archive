From owner-cypherpunks@Algebra.COM  Thu Dec 28 18:29:46 2000
Received: from MIT.EDU (SOUTH-STATION-ANNEX.MIT.EDU [18.72.1.2])
	by positron.mit.edu (8.9.3/8.9.3) with SMTP id SAA28804
	for <kwantam@positron.mit.edu>; Thu, 28 Dec 2000 18:29:46 -0500
Received: from ak47.algebra.com by MIT.EDU with SMTP
	id AA11005; Thu, 28 Dec 00 18:28:42 EST
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id eBSN3JW09462
	for cypherpunks-outgoing; Thu, 28 Dec 2000 17:03:19 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id eBSN3CB09447
	for <cypherpunks@algebra.com>; Thu, 28 Dec 2000 17:03:12 -0600
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id PAA12000; Thu, 28 Dec 2000 15:03:11 -0800 (PST)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id PAA11996 for <cpunks@sirius.infonex.com>; Thu, 28 Dec 2000 15:03:08 -0800 (PST)
Received: from marine.sonic.net (marine.sonic.net [208.201.224.37]) by cyberpass.net (8.8.8/8.7.3) with SMTP id PAA27591 for <cypherpunks@cyberpass.net>; Thu, 28 Dec 2000 15:05:41 -0800 (PST)
Received: (qmail 11631 invoked from network); 28 Dec 2000 22:03:04 -0000
Received: from sub.sonic.net (208.201.224.8)
  by marine.sonic.net with SMTP; 28 Dec 2000 22:03:04 -0000
Received: from sonic.net (bolt [208.201.224.36])
	by sub.sonic.net (8.11.0/8.8.5) with ESMTP id eBSM34712881;
	Thu, 28 Dec 2000 14:03:04 -0800
X-Envelope-Info: <bear@bolt.sonic.net>
Received: from localhost (bear@localhost) by sonic.net (8.11.0/8.7.3) with ESMTP id eBSM2s330387; Thu, 28 Dec 2000 14:02:54 -0800
Date: Thu, 28 Dec 2000 14:02:54 -0800 (PST)
From: Ray Dillinger <bear@sonic.net>
To: Tim May <tcmay@got.net>
Cc: cypherpunks@cyberpass.net
Old-Subject: Re: That 70's Crypto Show (Remailers, science and engineering)
In-Reply-To: <a05010400b67119e40919@[207.111.241.124]>
Message-Id: <Pine.LNX.4.21.0012281322040.27986-100000@bolt.sonic.net>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Subject:  Re: That 70's Crypto Show (Remailers, science and engineering)
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1884
Lines: 50




On Thu, 28 Dec 2000, Tim May wrote:

>At 3:56 AM -0500 12/28/00, dmolnar wrote:
>>
>>I'm in the midddle of composing a reply to Tim's message (which is getting
>>bigger every time I sit down to finish it, ominously enough).
>
>Sounds good to me!
>
>>One of the
>>points that has popped into my mind so far is that while we've had
>>academic crypto research since the 80s, thanks to Rivest, Shamir, Aldeman,
>>Diffie, Hellman, and others willing to defy the NSA, we have _not_ had a
>>similar tradition of commercial cryptography - or at least, not a
>>tradition of companies obtaining money for cryptographic *protocols* as
>>opposed to ciphers.

Not enough energy by half has been focused on protocols. 
I think there's probably a good set of programs to be 
written here.  

Basically, I'm thinking in terms of the old unix philosophy -- 
"A good program does exactly one thing, and does it well.". 
If somebody designs a good set of command-line programs, which 
produce output usable by each other so that they can be piped 
together in useful ways on a unix command line, then protocols 
should be easy to implement as shell scripts.  But a proper 
building block would have to be scriptable from the word "go." 
You'd have to fix it so that anything it could do, at all, it 
could do "in a straight run".  A command line, a command file, 
whatever. 

And you'd have to do it so your keys didn't wind up in 
unencrypted batch files.  Maybe a reference to keys' locations 
in an encrypted file system would be what went on the command 
line. 

Such energy as has been focused on protocols has been at the 
level of applications -- basically fixing them in source code 
so the users can't as easily pick them apart and stick them 
back together again different.  

Hmmm.  More later.  Some ideas are percolating through my 
head but they're not very well developed. 

				Bear


