From owner-cypherpunks@Algebra.COM  Tue Feb 20 17:58:42 2001
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id RAA15951
	for <kwantam@positron.mit.edu>; Tue, 20 Feb 2001 17:58:42 -0500
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id RAA23513
	for <rsw@mit.edu>; Tue, 20 Feb 2001 17:58:42 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f1KMVfr20926
	for cypherpunks-outgoing; Tue, 20 Feb 2001 16:31:41 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f1KMVYs20858
	for <cypherpunks@algebra.com>; Tue, 20 Feb 2001 16:31:34 -0600
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id OAA21534; Tue, 20 Feb 2001 14:31:30 -0800 (PST)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id OAA21530 for <cpunks@sirius.infonex.com>; Tue, 20 Feb 2001 14:31:25 -0800 (PST)
Received: from marine.sonic.net (marine.sonic.net [208.201.224.37]) by cyberpass.net (8.8.8/8.7.3) with SMTP id OAA05975 for <cypherpunks@cyberpass.net>; Tue, 20 Feb 2001 14:34:08 -0800 (PST)
Received: (qmail 15379 invoked from network); 20 Feb 2001 22:31:09 -0000
Received: from buzz.sonic.net (208.201.224.78)
  by marine.sonic.net with SMTP; 20 Feb 2001 22:31:09 -0000
Received: from sonic.net (bolt [208.201.224.36])
	by buzz.sonic.net (8.11.2/8.8.5) with ESMTP id f1KMVB227372;
	Tue, 20 Feb 2001 14:31:11 -0800
X-envelope-info: <bear@sonic.net>
Received: from localhost (bear@localhost) by sonic.net (8.11.0/8.7.3) with ESMTP id f1KMV5Y25872; Tue, 20 Feb 2001 14:31:05 -0800
Date: Tue, 20 Feb 2001 14:31:05 -0800 (PST)
From: Ray Dillinger <bear@sonic.net>
cc: cypherpunks@cyberpass.net
Old-Subject: Re: The Key Vanishes: Scientist Outlines Unbreakable Code
In-Reply-To: <3A924E5B.F5EA8CCA@ricardo.de>
Message-ID: <Pine.LNX.4.21.0102201350001.24080-100000@bolt.sonic.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Subject:  Re: The Key Vanishes: Scientist Outlines Unbreakable Code
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 2550
Lines: 62




On Tue, 20 Feb 2001, Tom wrote:

>essentially, a one-time-pad with a central source of randomness, the key
>being the point in the random-number-stream that you start with.

Not quite.  The point which you start with in the random number 
stream is one of the keys, but the system he describes also includes 
another, which is used to encrypt the random number stream prior 
to the OTP's XOR operation. 

The rest of your post, I agree with. 

First, your orbital 
random number server can only be put there by someone with 
enough bucks to launch a rocket -- whom you have to trust 
implicitly. None of the twenty or thirty people whom I 
trust implicitly has that much money.  Heck, I don't even 
think I personally *know* anyone who has that much money.

What if it was just a few dozen Blum-Blum-Shub generators 
up there spewing all those bits?  We'd never see the 
difference, but a data thief who was "in the know" about 
how they were keyed could recreate any sequence at any time.  

The basic problem is the problem you always get with systems 
that have a "trusted server" sitting in the middle -- can you 
really trust that server?  Can you inspect it, and inspect 
the code it's running, personally?  Can you verify that the 
thing you were allowed to inspect is the same as the thing 
that you're trusting?

I don't see any government, or for that matter any criminal 
organization, with a significant investment in SigInt allowing 
such a launch to go up untampered if they could possibly 
prevent it. 

And we already have systems with barriers of ridiculous levels 
of computer hardware - proofs of the security of a cipher which 
rest on the assumption that the opponent has storage capacity 
limited to less than some finite value are no more nor less 
valid than proofs of the security of a cipher which rest on 
the assumption that the opponent has CPU capacity limited to 
less than some finite value.  The only value of this system, 
assuming you get random numbers you can trust, is that the 
opponent has to have the large storage capacity NOW - when we 
know how hard it would be to have it - rather than at some 
vague point in the future, where moore's law has had time to 
work its wonders. 

Finally, this system doesn't protect storage.  It protects 
communications, and communications only.  Think about it.  If 
you protect storage, you have to have the bits from the OTP 
around somewhere to decrypt it.  If you have the bits from the 
OTP around somewhere, you no longer have an unbreakable cipher.

				Bear




