From owner-cypherpunks@Algebra.COM  Tue Jan 16 11:23:54 2001
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id LAA15326
	for <kwantam@positron.mit.edu>; Tue, 16 Jan 2001 11:23:54 -0500
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id LAA02348
	for <rsw@mit.edu>; Tue, 16 Jan 2001 11:23:54 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f0GGGrJ22435
	for cypherpunks-outgoing; Tue, 16 Jan 2001 10:16:53 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@einstein.ssz.com [204.96.2.99])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f0GGGqm22421
	for <cypherpunks@algebra.com>; Tue, 16 Jan 2001 10:16:52 -0600
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id KAA13742
	for cypherpunks@algebra.com; Tue, 16 Jan 2001 10:24:15 -0600
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id KAA13733
	for cypherpunks-outgoing; Tue, 16 Jan 2001 10:24:12 -0600
Received: from Mailserver-4.ricardo.de (root@henry.ricardo.de [62.197.4.171])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id KAA13729
	for <cypherpunks@einstein.ssz.com>; Tue, 16 Jan 2001 10:24:09 -0600
Received: from exchange.office.ricardo.de (stargate.ricardo.de [62.197.4.1]) 
          by Mailserver-4.ricardo.de (8.8.8/HENRY-frank-1.4) with ESMTP 
          id RAA08610 for <cypherpunks@einstein.ssz.com>; Tue, 16 Jan 2001 17:16:40 +0100
Received: from ricardo.de (www.lemuria.org [62.197.4.112]) by exchange.office.ricardo.de with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2650.21)
	id C7D96K8F; Tue, 16 Jan 2001 17:16:37 +0100
Message-ID: <3A647348.412E9533@ricardo.de>
Date: Tue, 16 Jan 2001 17:14:00 +0100
From: Tom <tom@ricardo.de>
X-Mailer: Mozilla 4.61 [en] (X11; I; Linux 2.2.16 i686)
X-Accept-Language: en
MIME-Version: 1.0
CC: cypherpunks@einstein.ssz.com
Old-Subject: Re: CDR: Re: authenticating Real Life(tm)
References: <Pine.LNX.3.96.1010116075229.11798N-100000@einstein.ssz.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Language: English, Russian, German
Subject:  Re: Re: authenticating Real Life(tm)
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 4111
Lines: 90


Jim Choate wrote:
> > so you trust the proof. great. if you trust the proof, and the protocol
> > has just been proven, then your trust extends to the protocol. and so
> > on. web-of-trust.
> >
> > please don't say you don't. because if a protocol that was just proven
> > by a prove you trust has not earned your trust by that procedure, then
> > obviously you lied when you said you'd trust the prove.
> 
> The 'proof' IS the 'protocol'. You act as if 'proof' and 'trust' are
> equivalent. They're not. I 'trust' because I know the protocol won't
> 'lie'. That is the 'trust' and the heart of the 'proof'.

I don't say trust and proof are identical. what I do say is that proof
extends trust. if you trust the proof, then you can trust whatever it
proves.
i.e. if you trust that you do have some method to determine the truth
value of anything I say, then that means if your method says "he says
the truth" you can trust in what I have said. not because I said it or
because you trust me, but because you trust the method which says I'm
saying the truth.
on a crypto level: if you have a protocol that can verify whether or
not, say, a given coin of a given cyber-money is "ok" (not already
spent, of the value it claims to be, etc.) then you can accept said coin
from me. even if you do not trust me in any other thing, you just
created a trust in that single coin. your trust in the protocol just
extended to a trust in the coin, by application of the protocol. you
didn't trust the coin before, you trust it afterwards. proof was just
the method. there's a lot of trust that exists without proof (some of
which you mentioned in your last mail).



> For your assertion to be so you still need to prove:
> 
> A trust B, B trusts C, therefore A trusts C.

while I did say that, I also wrote a lengthy clarification about it.
please refer to the full claim, not a single, selective quote which has
a significantly different meaning.

the full claim was:

===quote start===
if A==B and B==C then A==C

if replace == with "trust". if A trusts B and B trusts C then A can
trust C. that's a gross oversimplification, so please don't start any
nitpicking. I said a couple of words about trust not being binary in the
last mail. in essence, the == should read "total, complete, absolute
trust in everything", something that I doubt you'd see anywhere in real
life. the more precise formula would be:

A trusts B (minus margin of mistrust) 
and B trusts C (minus margin of mistrust)
therefore A trusts C (minus (margin of mistrust AB * margin of mistrust
BC) )
===quote end===

now that's a slightly different thing, don't you think? the mistrust in
the AC case can be quite large, not zero as your selective quote makes
believe.


> After all, simply because you and I trust the protocol still doesn't mean
> I trust you. It only means I believe you haven't lied in this particular
> case.

that is exactly what I mean by "margin of mistrust" above. you may trust
me with taking care of your dog for a week while you don't trust me
taking care of your wife for an afternoon - that is EXACTLY what I mean
when I say that "trust in real life is not binary".


> I use the protocol not to decide my trust but to give me a reason to opt
> out of the process. Fundamentally if you have to apply any of these sorts
> of protocols to an exchange a reasonable person won't want to be involved
> in the first place. There is a fundamental lack of trust already extant.

bullshit. the protocol just needs to be simple enough. returning to my
cyber-money example above, we DO have a protocol of verification of
physical money in real life. it's not perfect, but it works reasonably
well. it works by having specific coins or bills for money so that by
visual identification and verification you can accept money from a total
stranger in good faith.
yes, forgery does exist. as I've said a couple dozen times so far: there
are no perfect protocols and no absolute trust in real life. but guess
what, civilization works more or less ok without, unless you are jim and
apply the maximum threat model to every step of your life.

