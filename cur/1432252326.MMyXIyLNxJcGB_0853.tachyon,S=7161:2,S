From cypherpunks-bounces@cpunks.org  Mon Nov 18 08:46:51 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAIDkmQH027362;
	Mon, 18 Nov 2013 08:46:48 -0500
Received: from mail-02.1984.is (mail-02.1984.is [93.95.224.7])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAIDkjRV027358
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Mon, 18 Nov 2013 08:46:48 -0500
Received: from 87-198-224-142.static.ptr.magnet.ie ([87.198.224.142]
 helo=Neptune)
 by mail-02.1984.is with esmtpsa (TLSv1.2:DHE-RSA-AES128-SHA:128)
 (Exim 4.80) (envelope-from <cathalgarvey@cathalgarvey.me>)
 id 1ViP9y-0006dP-2A; Mon, 18 Nov 2013 13:46:38 +0000
Date: Mon, 18 Nov 2013 13:46:18 +0000
From: Cathal Garvey <cathalgarvey@cathalgarvey.me>
To: Lodewijk =?UTF-8?B?YW5kcsOp?= de la porte <l@odewijk.nl>
Subject: Re: RetroShare
Message-ID: <20131118134618.73f0092d@Neptune>
In-Reply-To: <CAHWD2rKGfKRyUCqZiZgyU693Y727Q5dfa3cEWiBCmsnLP9imdg@mail.gmail.com>
References: <2273118.NEfOTMQzUT@lap> <11446519.UaTmSoLtO9@lap>
 <CAHWD2rJTEjRmVDW1wJ+d3ZLJo10bm0GajTW2-Ofxu0xZ1fdmMw@mail.gmail.com>
 <1892324.eEEYb6oia5@lap> <20131117234414.0e52405e@Neptune>
 <CAHWD2rKGfKRyUCqZiZgyU693Y727Q5dfa3cEWiBCmsnLP9imdg@mail.gmail.com>
X-Mailer: Claws Mail 3.8.1 (GTK+ 2.24.10; i486-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=PGP-SHA512;
 boundary="Sig_/8Ph00u41G92ZlM2W8IFi.Yj"; protocol="application/pgp-signature"
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 4796
Lines: 103

--Sig_/8Ph00u41G92ZlM2W8IFi.Yj
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

> Why does the DHT require a cryptographic quality hash? I agree that
> SHA1 is too weak to be cryptographic, but a DHT is merely finding
> chains of other nodes. Worst that can happen is the adversary
> manipulating you into connecting to them with higher chance. Given
> the whole friend-to-friend mechanisms I don't see much harm in that.
> Depends on the plugin that runs above it.

Well, the DHT is (if I recall correctly!) used not only for locating
peers for but locating files. So, for example imagine the case where an
update to Retroshare is offered from within the network: the retroshare
devs themselves estimated that to forge a malicious hash would take
weeks on consumer end hardware, and therefore that it was an
impractical attack not worthy of threat modelling.

Leaving aside the fact that your real adversary does *not have to
constrain itself to consumer end hardware*, it's the first time I've
encountered a "serious" crypto project that considers *weeks* to be
"computationally infeasible".

This is all ignoring the fact that SHA1 was built by the NSA.
Specifically (correct me if I'm mistaken): SHA0 was based on MD5, and
SHA1 was then proposed soon after as its replacement by the NSA after
some alterations to correct *undisclosed vulnerabilities*. Ahem.

So, AFAIK RS is using a hash function redesigned (for all intents and
purposes) in secret by *the adversary* which has plenty of publicly
known attacks and may well have a critical in-built attack, and relies
on this hash to route to the correct file or peer.

Once you have a peer's keys, you can keep them and trust-on-first-use,
and RS *probably* (anyone wanna check source?) uses and checks
signatures thereafter, but if the signatures are based on a SHA1 hash
you're back to square one, where a forged hash will fit a valid
signature.

On Mon, 18 Nov 2013 11:07:10 +0100
Lodewijk andr=C3=A9 de la porte <l@odewijk.nl> wrote:

> 2013/11/18 Cathal Garvey <cathalgarvey@cathalgarvey.me>
>=20
> > Retroshare isn't "like tor", it's "the opposite of tor".
> >
> > Tor establishes a network of mutual distrust (kinda; you still trust
> > some aspects of the network such as the directory servers).
> >
>=20
> Yeah, Retroshare is Tor except with a different mechanism for finding
> peers. I don't see how that is the opposite of Tor. The "opposite" of
> Tor probably wouldn't use Onion Routing. BitTorrent might be closest
> to the opposite of Tor.
>=20
>=20
> > Also, I get mixed signals about the developer attitude to some
> > security aspects of the P2P side of things. For example, they use
> > SHA1 for the distributed hash table, whereas in my opinion one
> > should never use an even partially broken hash for a *hash table*;
> > you never know what exploits are known privately that further break
> > the hash, and should generally assume it's fully broken if your
> > threat model includes adversaries like the NSA. If you're willing
> > to compromise on the quality of the hash that underlies the entire
> > P2P end of the system, I'm wary about your attitude to security
> > overall.
> >
>=20
> Why does the DHT require a cryptographic quality hash? I agree that
> SHA1 is too weak to be cryptographic, but a DHT is merely finding
> chains of other nodes. Worst that can happen is the adversary
> manipulating you into connecting to them with higher chance. Given
> the whole friend-to-friend mechanisms I don't see much harm in that.
> Depends on the plugin that runs above it.
>=20
> I must say that this is exactly the sort of thing I think makes
> RetroShare risky. Some choices can be conditionally okay. Building a
> big stack of software lacks overview easily.


--Sig_/8Ph00u41G92ZlM2W8IFi.Yj
Content-Type: application/pgp-signature; name=signature.asc
Content-Disposition: attachment; filename=signature.asc

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iQIcBAEBCgAGBQJSihoqAAoJEL0iNgSYi5CZgxoP/2glBfuUhzk8UXo9CuqZgf3+
4D7p0SaWhiEbSKjORVQs3XTP1vB+s6IP6alx4RMgD+ty0rHPereQZxltDAbrM/Fn
nt7QxEAFQs7Dtar66T1lm0cMN+dWx/uVKdhjemBNhmTXoibLU5CVsPjunHOOSjyw
c3Jr1+294Z7t3qCurjKqggXRNtoPHET04/gxjJZMGlJwrGwNhP3FFxy39cEtXaJA
/FKEA5MLBmwJg6fRMAIhn2mGcqnSnhfrcknnAx7Yq2ltDicwcBObbul+cVkE/9gz
OeFpQSpCI0FjbzfmGouDzslopyBM/Ct9RepQKRXRM1GamNuLV9DnPwGmqXL2r3pJ
1aJYih1QCMZ13Lls+labt6ZzaXdZrQlcHCRGmXnGz49kP8CbdCzx2CeZ9rl5KkE/
4FqIaqqtQPT49XH+6JsJtelWlJBrKN/VNA+BkUBzPyJvm4OZtlIAUFDu37OLQqqD
FNd/nXJEzkAS0NvpywHB4EyJjhdkrqwJfon5oqAH8IaFZSVKVpRCQI7V6h7jim7r
D8H1dvIDIXI+BEdCg4HSY6FjsqT5FqhsiqZakt7EihL3ENoLBNUenfmRt1F5z2Vy
qIEoIJLVZit0LmNE/TUU1IeUJLjw9P8irx8JAPvHJByn3a4MJjKVmyZtSlhQ80jt
XPacJ5BvUOxnEg3wW+nI
=blDY
-----END PGP SIGNATURE-----

--Sig_/8Ph00u41G92ZlM2W8IFi.Yj--

