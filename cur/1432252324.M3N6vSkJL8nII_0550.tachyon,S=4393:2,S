From owner-cypherpunks@Algebra.COM  Thu Feb 22 15:47:25 2001
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id PAA26044
	for <kwantam@positron.mit.edu>; Thu, 22 Feb 2001 15:47:24 -0500
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id PAA23007
	for <rsw@mit.edu>; Thu, 22 Feb 2001 15:47:19 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f1MJEmb11051
	for cypherpunks-outgoing; Thu, 22 Feb 2001 13:14:48 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f1MJEgs11036
	for <cypherpunks@algebra.com>; Thu, 22 Feb 2001 13:14:42 -0600
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id LAA09320; Thu, 22 Feb 2001 11:14:41 -0800 (PST)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id LAA09316 for <cpunks@sirius.infonex.com>; Thu, 22 Feb 2001 11:14:34 -0800 (PST)
Received: from marine.sonic.net (marine.sonic.net [208.201.224.37]) by cyberpass.net (8.8.8/8.7.3) with SMTP id LAA14076 for <cypherpunks@cyberpass.net>; Thu, 22 Feb 2001 11:17:20 -0800 (PST)
Received: (qmail 32051 invoked from network); 22 Feb 2001 19:14:31 -0000
Received: from prop.sonic.net (208.201.224.193)
  by marine.sonic.net with SMTP; 22 Feb 2001 19:14:31 -0000
Received: from sonic.net (bolt [208.201.224.36])
	by prop.sonic.net (8.11.2/8.8.5) with ESMTP id f1MJEUO30411;
	Thu, 22 Feb 2001 11:14:31 -0800
X-envelope-info: <bear@sonic.net>
Received: from localhost (bear@localhost) by sonic.net (8.11.0/8.7.3) with ESMTP id f1MJEPE19933; Thu, 22 Feb 2001 11:14:26 -0800
Date: Thu, 22 Feb 2001 11:14:25 -0800 (PST)
From: Ray Dillinger <bear@sonic.net>
To: Sampo Syreeni <decoy@iki.fi>
cc: cypherpunks@cyberpass.net
Old-Subject: Re: Secure Erasing is actually harder than that...
In-Reply-To: <Pine.SOL.4.30.0102221502020.26202-100000@kruuna.Helsinki.FI>
Message-ID: <Pine.LNX.4.21.0102221027540.17464-100000@bolt.sonic.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Subject:  Re: Secure Erasing is actually harder than that...
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1749
Lines: 43




On Thu, 22 Feb 2001, Sampo Syreeni wrote:

>On Tue, 20 Feb 2001, Ray Dillinger wrote:
>
>>We need editors that don't put cleartext on the disk when you
>>hit the "save" command.
>
>Why not simply use encrypted hard drives? Make the driver forget key
>material in a fixed period of keyboard inactivity? This would be a helluva
>lot easier than making secure versions of every existing application out
>there...

The problem with an encrypted drive is that the applications that 
are able to write it have got to do key management, and all of 
those existing applications were written with the assumption that 
they didn't have to do key management.

There are various workarounds, but that's what they are - workarounds. 
If your application can read and write an encrypted drive without 
specifically providing the keys, then a trojan on your system can 
read and write an encrypted drive without specifically providing 
the keys. 

These workarounds can only work by "hiding" key management from 
the application, and thus from the user - which means key 
management gets done badly if at all.  Good crypto can't be 
tacked on - it has to be designed in.

Another problem with an encrypted drive is that an encrypted drive is 
infrastructure that someone is likely to not have in place when they 
first discover a real need to encrypt.  

Don't get me wrong -- I believe in encrypted drives.  They provide 
a "mix" so you can't tell which bit was written by what application, 
and that's a valuable service.  But there are limits to what they 
can do or should be relied on to do.  Applications that write to 
(and more importantly, which read from) the encrypted drive should 
themselves be crypto-aware and do proper key management. 

			Bear

