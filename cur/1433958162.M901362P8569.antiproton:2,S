Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t5AHg8kJ008537;
	Wed, 10 Jun 2015 13:42:10 -0400
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="2048-bit key; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=atyEYqF0;
	dkim-adsp=pass; dkim-atps=neutral
Received: from mail-la0-f43.google.com (mail-la0-f43.google.com
 [209.85.215.43])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t5AHg3bF008533
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Wed, 10 Jun 2015 13:42:06 -0400
Received: by labko7 with SMTP id ko7so38368077lab.2
 for <cypherpunks@cpunks.org>; Wed, 10 Jun 2015 10:41:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:date:message-id:subject:from:to:content-type;
 bh=Ofx1PM4Eja0X0D0zwrt1ylJ3cBhi30izy44ELeMpyLs=;
 b=atyEYqF0OBIRST9+XaMTf6HpfGIfdoPVbysteWKVPFHnzneCoxiKDsiHeptNn2erK5
 LgAg1nR76BSeeaqX0wCYgvVb4d6wrk/CW3TeT4VkQoPxLdXNatd9H28Fnvdyj2MOeQzc
 s2oE/p7vIe6riD5Rdk0dz+gUhEvlI2hy56CqVWNMc/aNWlyLdvySzbcXdAufqBzqjW2A
 ++riY+1LD7co6EhWVoRPHS90qfFTSuovfAqAiLQbKDTFP6QlmarhplzpYxFzuhoqVr/p
 AGh7txX85nh12BoacAly/aOtTR23WTw6G3ox6SbPeFWKZBoWxP9Dn/I0fZY58sygBA/X
 4Ocg==
MIME-Version: 1.0
X-Received: by 10.112.199.35 with SMTP id jh3mr5300258lbc.23.1433958117932;
 Wed, 10 Jun 2015 10:41:57 -0700 (PDT)
Received: by 10.25.90.65 with HTTP; Wed, 10 Jun 2015 10:41:57 -0700 (PDT)
Date: Wed, 10 Jun 2015 10:41:57 -0700
Message-ID: <CAJVRA1QPPuW4GZ69PZ=k0Zy35o7R8psvCegh-6cNAi3RcYGSgw@mail.gmail.com>
Subject: The_Mystery_of_Duqu_2_0_a_sophisticated_cyberespionage_actor_returns
 [ED: duqu continued; they never left! ]
From: coderman <coderman@gmail.com>
To: cpunks <cypherpunks@cpunks.org>
Content-Type: multipart/mixed; boundary=001a11c34a7a3e02fa05182d64d7
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 1235

--001a11c34a7a3e02fa05182d64d7
Content-Type: text/plain; charset=UTF-8

https://securelist.com/files/2015/06/The_Mystery_of_Duqu_2_0_a_sophisticated_cyberespionage_actor_returns.pdf

--001a11c34a7a3e02fa05182d64d7
Content-Type: text/plain; charset=UTF-8; 
	name="The_Mystery_of_Duqu_2_0_a_sophisticated_cyberespionage_actor_returns.txt"
Content-Disposition: attachment; 
	filename="The_Mystery_of_Duqu_2_0_a_sophisticated_cyberespionage_actor_returns.txt"
Content-Transfer-Encoding: base64
X-Attachment-Id: file0

VGhlCmR1cXUgMi4wClRlY2huaWNhbCBEZXRhaWxzClZlcnNpb246IDIuMCAoOSBKdW5lIDIwMTUp
Cgp3d3cua2FzcGVyc2t5LmNvbQoKDDIKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoK
Q29udGVudHMKRXhlY3V0aXZlIHN1bW1hcnkICgozCgppbml0aWFsIGF0dGFjawgKCjQKCkxhdGVy
YWwgbW92ZW1lbnQICgo0CgpBbmFseXNpcyBvZiBhIER1cXUgMi4wIE1TSSBwYWNrYWdlCAoKNwoK
RmlsZSBwcm9wZXJ0aWVzCCA3CkZpcnN0IExheWVyOiBBY3Rpb25ETEwgKG1zaS5kbGwpCCAxMApT
ZWNvbmQgTGF5ZXI6IEFjdGlvbkRhdGEwCCAxMApUaGlyZCBMYXllcjoga2xpZi5kbGwIIDExCkF0
dGFja2luZyBBVlAuRVhFCCAxMgpDVHdvUEVOQy5kbGwgemVyby1kYXkgYW5kIEtNQVJULmRsbAgg
MTQKClBheWxvYWQgQ29udGFpbmVycyBhbmQgTWlncmF0aW9uCAoKMTUKClBheWxvYWQgdHlwZSDi
gJxM4oCdCCAxNQpQYXlsb2FkIHJ1biB0eXBlIOKAnEfigJ0IIDE2ClBheWxvYWQgcnVuIHR5cGUg
4oCcSeKAnQggMTYKUGF5bG9hZCBydW4gdHlwZSDigJxL4oCdCCAxNwpQYXlsb2FkIHJ1biB0eXBl
IOKAnFHigJ0IIDE3CgpQbGF0Zm9ybSBwbHVnZ2luYWJsZSBtb2R1bGVzCAoKMTcKClBlcnNpc3Rl
bmNlIG1lY2hhbmlzbQgKCjMzCgpDb21tYW5kIGFuZCBjb250cm9sIG1lY2hhbmlzbXMICgozMwoK
VGhlIOKAnHBvcnRzZXJ2LnN5c+KAnSBkcml2ZXIgYW5hbHlzaXMIIDM1CgpTaW1pbGFyaXRpZXMg
YmV0d2VlbiBEdXF1IGFuZCBEdXF1IDIuMAgKCjM3CgpWaWN0aW1zIG9mIER1cXUgMi4wCAoKNDIK
CkF0dHJpYnV0aW9uCAoKNDMKCkNvbmNsdXNpb25zCAoKNDQKClJlZmVyZW5jZXMICgo0NQoKRm9y
IGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29t
CgoMMwoKVGhlIER1cXUgMi4wClRlY2huaWNhbCBEZXRhaWxzCgpFeGVjdXRpdmUgc3VtbWFyeQpF
YXJsaWVyIHRoaXMgeWVhciwgZHVyaW5nIGEgc2VjdXJpdHkgc3dlZXAsIEthc3BlcnNreSBMYWIg
ZGV0ZWN0ZWQgYSBjeWJlciBpbnRydXNpb24KYWZmZWN0aW5nIHNldmVyYWwgb2YgaXRzIGludGVy
bmFsIHN5c3RlbXMuCkZvbGxvd2luZyB0aGlzIGZpbmRpbmcsIHdlIGxhdW5jaGVkIGEgbGFyZ2Ut
c2NhbGUgaW52ZXN0aWdhdGlvbiwgd2hpY2ggbGVkIHRvIHRoZQpkaXNjb3Zlcnkgb2YgYSBuZXcg
bWFsd2FyZSBwbGF0Zm9ybSBmcm9tIG9uZSBvZiB0aGUgbW9zdCBza2lsbGVkLCBteXN0ZXJpb3Vz
IGFuZApwb3dlcmZ1bCBncm91cHMgaW4gdGhlIEFQVCB3b3JsZCDigJMgRHVxdS4gVGhlIER1cXUg
dGhyZWF0IGFjdG9yIHdlbnQgZGFyayBpbiAyMDEyIGFuZAp3YXMgYmVsaWV2ZWQgdG8gaGF2ZSBz
dG9wcGVkIHdvcmtpbmcgb24gdGhpcyBwcm9qZWN0IC0gdW50aWwgbm93LiBPdXIgdGVjaG5pY2Fs
IGFuYWx5c2lzCmluZGljYXRlcyB0aGUgbmV3IHJvdW5kIG9mIGF0dGFja3MgaW5jbHVkZSBhbiB1
cGRhdGVkIHZlcnNpb24gb2YgdGhlIGluZmFtb3VzIDEyMDExCkR1cXUgbWFsd2FyZSwgc29tZXRp
bWVzIHJlZmVycmVkIHRvIGFzIHRoZSBzdGVwLWJyb3RoZXIgb2YgMlN0dXhuZXQuIFdlIG5hbWVk
IHRoaXMKbmV3IG1hbHdhcmUgYW5kIGl0cyBhc3NvY2lhdGVkIHBsYXRmb3JtIOKAnER1cXUgMi4w
4oCdLgpWaWN0aW1zIG9mIER1cXUgMi4wIGhhdmUgYmVlbiBmb3VuZCBpbiBzZXZlcmFsIHBsYWNl
cywgaW5jbHVkaW5nIHdlc3Rlcm4gY291bnRyaWVzLCB0aGUKTWlkZGxlIEVhc3QgYW5kIEFzaWEu
IFRoZSBhY3RvciBhcHBlYXJzIHRvIGNvbXByb21pc2UgYm90aCBmaW5hbCBhbmQgdXRpbGl0YXJp
YW4gdGFyZ2V0cywKd2hpY2ggYWxsb3cgdGhlbSB0byBpbXByb3ZlIHRoZWlyIGN5YmVyIGNhcGFi
aWxpdGllcy4KTW9zdCBub3RhYmx5LCBzb21lIG9mIHRoZSBuZXcgMjAxNC0yMDE1IGluZmVjdGlv
bnMgYXJlIGxpbmtlZCB0byB0aGUgUDUrMSBldmVudHMgYW5kCnZlbnVlcyByZWxhdGVkIHRvIHRo
ZSBuZWdvdGlhdGlvbnMgd2l0aCBJcmFuIGFib3V0IGEgbnVjbGVhciBkZWFsLiBUaGUgdGhyZWF0
IGFjdG9yIGJlaGluZApEdXF1IGFwcGVhcnMgdG8gaGF2ZSBsYXVuY2hlZCBhdHRhY2tzIGF0IHRo
ZSB2ZW51ZXMgZm9yIHNvbWUgb2YgdGhlc2UgaGlnaCBsZXZlbCB0YWxrcy4KSW4gYWRkaXRpb24g
dG8gdGhlIFA1KzEgZXZlbnRzLCB0aGUgRHVxdSAyLjAgZ3JvdXAgaGFzIGxhdW5jaGVkIGEgc2lt
aWxhciBhdHRhY2sgaW4KcmVsYXRpb24gdG8gdGhlIDM3MHRoIGFubml2ZXJzYXJ5IGV2ZW50IG9m
IHRoZSBsaWJlcmF0aW9uIG9mIEF1c2Nod2l0ei1CaXJrZW5hdS4KSW4gdGhlIGNhc2Ugb2YgS2Fz
cGVyc2t5IExhYiwgdGhlIGF0dGFjayB0b29rIGFkdmFudGFnZSBvZiBhIHplcm8tZGF5IChDVkUt
MjAxNS0yMzYwKQppbiB0aGUgV2luZG93c0tlcm5lbCwgcGF0Y2hlZCBieSBNaWNyb3NvZnQgb24g
SnVuZSA5IDIwMTUgYW5kIHBvc3NpYmx5IHVwIHRvIHR3bwpvdGhlciwgY3VycmVudGx5IHBhdGNo
ZWQgdnVsbmVyYWJpbGl0aWVzLCB3aGljaCB3ZXJlIHplcm9kYXkgYXQgdGhhdCB0aW1lLgoKMQkK
Cmh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0R1cXUKCjIJCgpodHRwOi8vd3d3Lmthc3Bl
cnNreS5jb20vYWJvdXQvbmV3cy92aXJ1cy8yMDExL0R1cXVfVGhlX1N0ZXBfQnJvdGhlcl9vZl9T
dHV4bmV0CgozCQoKaHR0cDovLzcwLmF1c2Nod2l0ei5vcmcvaW5kZXgucGhwP2xhbmc9ZW4KCkZv
ciBhbnkgaW5xdWlyaWVzLCBwbGVhc2UgY29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNv
bQoKDDQKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoKaW5pdGlhbCBhdHRhY2sKVGhl
IGluaXRpYWwgYXR0YWNrIGFnYWluc3QgS2FzcGVyc2t5IExhYiBiZWdhbiB3aXRoIHRoZSB0YXJn
ZXRpbmcgb2YgYW4gZW1wbG95ZWUgaW4Kb25lIG9mIG91ciBzbWFsbGVyIEFQQUMgb2ZmaWNlcy4g
VGhlIG9yaWdpbmFsIGluZmVjdGlvbiB2ZWN0b3IgZm9yIER1cXUgMi4wIGlzIGN1cnJlbnRseQp1
bmtub3duLCBhbHRob3VnaCB3ZSBzdXNwZWN0IHNwZWFyLXBoaXNoaW5nIGUtbWFpbHMgcGxheWVk
IGFuIGltcG9ydGFudCByb2xlLiBUaGlzIGlzCmJlY2F1c2UgZm9yIG9uZSBvZiB0aGUgcGF0aWVu
dHMgemVybyB3ZSBpZGVudGlmaWVkIGhhZCB0aGVpciBtYWlsYm94IGFuZCB3ZWIgYnJvd3Nlcgpo
aXN0b3J5IHdpcGVkIHRvIGhpZGUgdHJhY2VzIG9mIHRoZSBhdHRhY2suIFNpbmNlIHRoZSByZXNw
ZWN0aXZlIG1hY2hpbmVzIHdlcmUgZnVsbHkKcGF0Y2hlZCwgd2UgYmVsaWV2ZSBhIHplcm8tZGF5
IGV4cGxvaXQgd2FzIHVzZWQuCkluIDIwMTEsIHdlIHdlcmUgYWJsZSB0byBpZGVudGlmeSBEdXF1
IGF0dGFja3MgdGhhdCB1c2VkIFdvcmQgRG9jdW1lbnRzIGNvbnRhaW5pbmcgYW4KZXhwbG9pdCBm
b3IgYSB6ZXJvLWRheSB2dWxuZXJhYmlsaXR5IChDVkUtMjAxMS0zNDAyKSB0aGF0IHJlbGllZCBv
biBhIG1hbGljaW91cyBlbWJlZGRlZApUVEYgKFRydWUgVHlwZSBGb250IEZpbGUpLiBUaGlzIGV4
cGxvaXQgYWxsb3dlZCB0aGUgYXR0YWNrZXJzIHRvIGp1bXAgZGlyZWN0bHkgaW50byBLZXJuZWwK
bW9kZSBmcm9tIGEgV29yZCBEb2N1bWVudCwgYSB2ZXJ5IHBvd2VyZnVsLCBleHRyZW1lbHkgcmFy
ZSwgdGVjaG5pcXVlLiBBIHNpbWlsYXIKdGVjaG5pcXVlIGFuZCB6ZXJvLWRheSBleHBsb2l0ICgg
NENWRS0yMDE0LTQxNDgpIGFwcGVhcmVkIGFnYWluIGluIEp1bmUgMjAxNCwgYXMgcGFydApvZiBh
biBhdHRhY2sgYWdhaW5zdCBhIHByb21pbmVudCBpbnRlcm5hdGlvbmFsIG9yZ2FuaXphdGlvbi4g
VGhlIEMmQyBzZXJ2ZXIgdXNlZCBpbiB0aGlzCjIwMTQgYXR0YWNrIGFzIHdlbGwgYXMgb3RoZXIg
ZmFjdG9ycyBoYXZlIGNlcnRhaW4gc2ltaWxhcml0aWVzIHdpdGggRHVxdSwgaG93ZXZlciwgdGhl
Cm1hbHdhcmUgaXMgZGlmZmVyZW50IGZyb20gYm90aCBEdXF1IGFuZCBEdXF1IDIuMC4gSXQgaXMg
cG9zc2libGUgdGhhdCB0aGlzIGlzIGEgcGFyYWxsZWwKcHJvamVjdCBmcm9tIHRoZSBEdXF1IGdy
b3VwIGFuZCB0aGUgc2FtZSB6ZXJvLWRheSAoQ1ZFLTIwMTQtNDE0OCkgbWlnaHQgaGF2ZSBiZWVu
CnVzZWQgdG8gaW5zdGFsbCBEdXF1IDIuMC4KT25jZSB0aGUgYXR0YWNrZXJzIHN1Y2Nlc3NmdWxs
eSBpbmZlY3RlZCBvbmUgbWFjaGluZSwgdGhleSBtb3ZlZCBvbiB0byB0aGUgbmV4dCBzdGFnZS4K
CkxhdGVyYWwgbW92ZW1lbnQKSW4gZ2VuZXJhbCwgb25jZSB0aGUgYXR0YWNrZXJzIGdhaW4gYWNj
ZXNzIGludG8gYSBuZXR3b3JrLCB0d28gcGhhc2VzIGZvbGxvdzoK4oCiCQrigKIJCgpSZWNvbm5h
aXNzYW5jZSBhbmQgaWRlbnRpZmljYXRpb24gb2YgbmV0d29yayB0b3BvbG9neQpMYXRlcmFsIG1v
dmVtZW50CgpJbiB0aGUgY2FzZSBvZiBEdXF1IDIuMCwgdGhlIGxhdGVyYWwgbW92ZW1lbnQgdGVj
aG5pcXVlIGFwcGVhcnMgdG8gaGF2ZSB0YWtlbgphZHZhbnRhZ2Ugb2YgYW5vdGhlciB6ZXJvLWRh
eSwgKENWRS0yMDE0LTYzMjQpIHdoaWNoIHdhcyBwYXRjaGVkIGluIE5vdmVtYmVyIDIwMTQKd2l0
aCA1TVMxNC0wNjggLiBUaGlzIGV4cGxvaXQgYWxsb3dzIGFuIHVucHJpdmlsZWdlZCBkb21haW4g
dXNlciB0byBlbGV2YXRlIGNyZWRlbnRpYWxzCnRvIGEgZG9tYWluIGFkbWluaXN0cmF0b3IgYWNj
b3VudC4gQWx0aG91Z2ggd2UgY291bGRu4oCZdCByZXRyaWV2ZSBhIGNvcHkgb2YgdGhpcyBleHBs
b2l0LAp0aGUgbG9nZ2VkIGV2ZW50cyBtYXRjaCB0aGUgTWljcm9zb2Z0IGRldGVjdGlvbiBndWlk
YW5jZSBmb3IgdGhpcyBhdHRhY2suIE1hbGljaW91cwptb2R1bGVzIHdlcmUgYWxzbyBvYnNlcnZl
ZCBwZXJmb3JtaW5nIGEg4oCccGFzcyB0aGUgaGFzaOKAnSBhdHRhY2sgaW5zaWRlIHRoZSBsb2Nh
bApuZXR3b3JrLCBlZmZlY3RpdmVseSBnaXZpbmcgdGhlIGF0dGFja2VycyBtYW55IGRpZmZlcmVu
dCB3YXlzIHRvIGRvIGxhdGVyYWwgbW92ZW1lbnQuCk9uY2UgdGhlIGF0dGFja2VycyBnYWluZWQg
ZG9tYWluIGFkbWluaXN0cmF0b3IgcHJpdmlsZWdlcywgdGhleSBjYW4gdXNlIHRoZXNlCnBlcm1p
c3Npb25zIHRvIGluZmVjdCBvdGhlciBjb21wdXRlcnMgaW4gdGhlIGRvbWFpbi4KVG8gaW5mZWN0
IG90aGVyIGNvbXB1dGVycyBpbiB0aGUgZG9tYWluLCB0aGUgYXR0YWNrZXJzIHVzZSBmZXcgZGlm
ZmVyZW50IHN0cmF0ZWdpZXMuIEluCm1vc3Qgb2YgdGhlIGF0dGFja3Mgd2UgbW9uaXRvcmVkLCB0
aGV5IHByZXBhcmUgTWljcm9zb2Z0IFdpbmRvd3MgSW5zdGFsbGVyIFBhY2thZ2VzCihNU0kpIGFu
ZCB0aGVuIGRlcGxveSB0aGVtIHJlbW90ZWx5IHRvIG90aGVyIG1hY2hpbmVzLiBUbyBsYXVuY2gg
dGhlbSwgdGhlIGF0dGFja2VycwpjcmVhdGUgYSBzZXJ2aWNlIG9uIHRoZSB0YXJnZXQgbWFjaGlu
ZSB3aXRoIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBsaW5lOgptc2lleGVjLmV4ZSAvaSDigJxDOlxc
W+KApl1cdG1wODU4NWUzZDYudG1w4oCdIC9xIFBST1A9OWMzYzcwNzYtZDc5Zi00Ywo0CQoKaHR0
cHM6Ly93d3cuZmlyZWV5ZS5jb20vYmxvZy90aHJlYXQtcmVzZWFyY2gvMjAxNC8xMC90d28tdGFy
Z2V0ZWQtYXR0YWNrcy10d28tbmV3LXplcm8tZGF5cy5odG1sCgo1CQoKaHR0cHM6Ly90ZWNobmV0
Lm1pY3Jvc29mdC5jb20vbGlicmFyeS9zZWN1cml0eS9NUzE0LTA2OAoKRm9yIGFueSBpbnF1aXJp
ZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMNQoKVGhlIER1
cXUgMi4wClRlY2huaWNhbCBEZXRhaWxzCgpUaGUgUFJPUCB2YWx1ZSBhYm92ZSBpcyBzZXQgdG8g
YSByYW5kb20gNTYtYml0IGVuY3J5cHRpb24ga2V5IHRoYXQgaXMgcmVxdWlyZWQgdG8KZGVjcnlw
dCB0aGUgbWFpbiBwYXlsb2FkIGZyb20gdGhlIHBhY2thZ2UuIE90aGVyIGtub3duIG5hbWVzIGZv
ciB0aGlzIHBhcmFtZXRlcgpvYnNlcnZlZCBpbiB0aGUgYXR0YWNrcyBhcmUg4oCcSEFTSFZB4oCd
IGFuZCDigJxDS0VZ4oCdLiBUaGUgZm9sZGVyIHdoZXJlIHRoZSBwYWNrYWdlIGlzCmRlcGxveWVk
IGNhbiBiZSBkaWZmZXJlbnQgZnJvbSBjYXNlIHRvIGNhc2UsIGRlcGVuZGluZyBvbiB3aGF0IHRo
ZSBhdHRhY2tlcnMgY2FuCmFjY2VzcyBvbiB0aGUgcmVtb3RlIG1hY2hpbmUuCkluIGFkZGl0aW9u
IHRvIGNyZWF0aW5nIHNlcnZpY2VzIHRvIGluZmVjdCBvdGhlciBjb21wdXRlcnMgaW4gdGhlIExB
TiwgYXR0YWNrZXJzIGNhbiBhbHNvCnVzZSB0aGUgVGFzayBTY2hlZHVsZXIgdG8gc3RhcnQg4oCc
bXNpZXhlYy5leGXigJ0gcmVtb3RlbHkuIFRoZSB1c2FnZSBvZiBUYXNrIFNjaGVkdWxlcgpkdXJp
bmcgRHVxdSBpbmZlY3Rpb25zIGZvciBsYXRlcmFsIG1vdmVtZW50IHdhcyBhbHNvIG9ic2VydmVk
IHdpdGggdGhlIDIwMTEgdmVyc2lvbgphbmQgd2FzIGRlc2NyaWJlZCBieSA2U3ltYW50ZWMgaW4g
dGhlaXIgdGVjaG5pY2FsIGFuYWx5c2lzLgoK4oCcbXNpZXhlYy5leGXigJ0gLSBUYXNrIFNjaGVk
dWxlciB0cmFjZSBpbiB0aGUgbG9ncwoKVGhlIE1TSSBmaWxlcyB1c2VkIGluIHRoZSBhdHRhY2tz
IGNvbnRhaW4gYSBtYWxpY2lvdXMgc3R1YiBpbnNpZGUgd2hpY2ggc2VydmVzIGFzIGEgbG9hZGVy
LgpUaGUgc3R1YiBsb2FkcyB0aGUgb3RoZXIgbWFsd2FyZSByZXNvdXJjZXMgcmlnaHQgZnJvbSB0
aGUgTVNJIGZpbGUgYW5kIGRlY3J5cHRzIHRoZW0sCmJlZm9yZSBwYXNzaW5nIGV4ZWN1dGlvbiB0
byB0aGUgZGVjcnlwdGVkIGNvZGUgaW4gbWVtb3J5LgoKTWFsaWNpb3VzIHN0dWIgd2l0aCBxdWVy
eSB0byBsb2FkIHRoZSBvdGhlciByZXNvdXJjZXMgZnJvbSB0aGUgTVNJIGZpbGUgaGlnaGxpZ2h0
ZWQuCgpUaGUgZW5jcnlwdGlvbiBhbGdvcml0aG1zIHVzZWQgZm9yIHRoZXNlIHBhY2thZ2VzIGRp
ZmZlciBmcm9tIGNhc2UgdG8gY2FzZS4gSXTigJlzCmltcG9ydGFudCB0byBwb2ludCBvdXQgdGhh
dCB0aGUgYXR0YWNrZXJzIHdlcmUgY2FyZWZ1bCBlbm91Z2ggdG8gaW1wbGVtZW50IHVuaXF1ZQpt
ZXRob2RzLCBlbmNyeXB0aW9uIGFsZ29yaXRobXMgYW5kIG5hbWVzIChzdWNoIGFzIGZpbGUgbmFt
ZXMpIGZvciBlYWNoIGF0dGFjaywgYXMgYQptZXRob2QgdG8gZXNjYXBlIGRldGVjdGlvbiBmcm9t
IHNlY3VyaXR5IHByb2R1Y3RzIGFuZCBsaW1pdCB0aGUgYWJpbGl0eSBvZiBhbiBhbnRpdmlydXMK
Y29tcGFueSB0byBmaW5kIG90aGVyIGluZmVjdGlvbnMgb25jZSBvbmUgb2YgdGhlbSBoYXMgYmVl
biBpZGVudGlmaWVkLgpTbyBmYXIsIHdl4oCZdmUgc2VlbiB0aGUgZm9sbG93aW5nIGVuY3J5cHRp
b24gYWxnb3JpdGhtcyB1c2VkIGJ5IHRoZSBhdHRhY2tlcnM6CuKAogkK4oCiCQo2CQoKQ2FtZWxs
aWEKQUVTCmh0dHA6Ly93d3cuc3ltYW50ZWMuY29tL2NvbnRlbnQvZW4vdXMvZW50ZXJwcmlzZS9t
ZWRpYS9zZWN1cml0eV9yZXNwb25zZS93aGl0ZXBhcGVycy93MzJfZHVxdV90aGVfcHJlY3Vyc29y
X3RvXwp0aGVfbmV4dF9zdHV4bmV0LnBkZgoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250
YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMNgoKVGhlIER1cXUgMi4wClRlY2huaWNh
bCBEZXRhaWxzCgrigKIJCuKAogkK4oCiCQoKWFRFQQpSQzQKRGlmZmVyZW50IG11bHRpYnl0ZSBY
T1ItYmFzZWQgZW5jcnlwdGlvbgoKRm9yIGNvbXByZXNzaW9uIGFsZ29yaXRobXMsIHdl4oCZdmUg
c2VlbiB0aGUgZm9sbG93aW5nOgrigKIJCuKAogkK4oCiCQrigKIJCgpMWkpCCkxaRgpGYXN0TFoK
TFpPCgpJbiBlc3NlbmNlLCBlYWNoIGNvbXBpbGVkIGF0dGFjayBwbGF0Zm9ybSB1c2VzIGEgdW5p
cXVlIGNvbWJpbmF0aW9uIG9mIGFsZ29yaXRobXMgdGhhdAptYWtlIGl0IHZlcnkgZGlmZmljdWx0
IHRvIGRldGVjdC4KVGhlIGF0dGFja2VycyBjYW4gZGVwbG95IHR3byB0eXBlcyBvZiBwYWNrYWdl
cyB0byB0aGVpciB2aWN0aW1zOgrigKIJCuKAogkKCuKAnEJhc2lj4oCdLCBpbi1tZW1vcnkgcmVt
b3RlIGJhY2tkb29yICh+NTAwSykKRnVsbHkgZmVhdHVyZWQsIEMmQy1jYXBhYmxlLCBpbi1tZW1v
cnkgZXNwaW9uYWdlIHBsYXRmb3JtICgxOE1CKQoKVGhlc2UgaGF2ZSBzaW1pbGFyIHN0cnVjdHVy
ZXMgYW5kIGxvb2sgbGlrZSB0aGUgZm9sbG93aW5nOgoKTWFsaWNpb3VzIER1cXUgMi4wIE1TSSBw
YWNrYWdlLgoKSW4gdGhlIHNjcmVlbnNob3QgYWJvdmUsIG9uZSBjYW4gc2VlIHRoZSBsb2FkZXIg
KEFjdGlvbkRsbDogMTcsOTIwIGJ5dGVzKSBhbmQgdGhlIG1haW4KcGF5bG9hZCAoQWN0aW9uRGF0
YTA6IDQ3Niw3MzYgYnl0ZXMpLiBVcG9uIGV4ZWN1dGlvbiwgQWN0aW9uRGxsIGlzIGxvYWRlZCBh
bmQgY29udHJvbCBpcwpwYXNzZWQgdG8gaXRzIG9ubHkgZXhwb3J0LCBTdGFydEFjdGlvbi4KVGhl
IOKAnGJhc2lj4oCdIGluLW1lbW9yeSByZW1vdGUgYmFja2Rvb3IgaXMgcHVzaGVkIHRvIGNvbXB1
dGVycyBpbnNpZGUgdGhlIGRvbWFpbgpieSB0aGUgRG9tYWluIENvbnRyb2xsZXIgb24gYSByZWd1
bGFyIGJhc2lzIOKAkyBhbG1vc3QgbGlrZSBhIHdvcm0gaW5mZWN0aW9uLiBUaGlzIGdpdmVzCnRo
ZSBhdHRhY2tlcnMgYW4gZW50cnkgaW50byBtb3N0IG9mIHRoZSBtYWNoaW5lcyBmcm9tIHRoZSBk
b21haW4gYW5kIGlmIGZ1cnRoZXIgYWNjZXNzCmlzIG5lZWRlZCwgdGhleSBjYW4gdXBsb2FkIGEg
bW9yZSBzb3BoaXN0aWNhdGVkIE1TSSBmaWxlIHRoYXQgZGVwbG95cyB0ZW5zIG9mIGRpZmZlcmVu
dApwbHVnaW5zIHRvIGhhcnZlc3QgaW5mb3JtYXRpb24uCkZvciBhbnkgaW5xdWlyaWVzLCBwbGVh
c2UgY29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoKDDcKClRoZSBEdXF1IDIuMApU
ZWNobmljYWwgRGV0YWlscwoKQSB0aG9yb3VnaCBkZXNjcmlwdGlvbiBvZiB0aGUgbWFsd2FyZSBs
b2FkaW5nIG1lY2hhbmlzbSBmcm9tIHRoZSDigJxiYXNpY+KAnSByZW1vdmUKYmFja2Rvb3IgTVNJ
IGNhbiBiZSBmb3VuZCBiZWxvdy4KCkFuYWx5c2lzIG9mIGEgRHVxdSAyLjAgTVNJIHBhY2thZ2UK
RmlsZW5hbWU6IHJhbmRvbSAvIHZhcmllcyBmcm9tIGNhc2UgdG8gY2FzZQpNRDUgKGV4YW1wbGUs
IGNhbiB2YXJ5KTogMTQ3MTIxMDNkZGY5ZjZlNzdmYTVjOWEzMjg4YmQ1ZWUKU2l6ZTogNTAzLDI5
NiBieXRlcwoKRmlsZSBwcm9wZXJ0aWVzClRoZSBNU0kgZmlsZSBoYXMgdGhlIGZvbGxvd2luZyBn
ZW5lcmFsIHByb3BlcnRpZXM6CuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCi
CQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkKCkNvbXBvc2l0ZSBEb2N1
bWVudCBGaWxlIFYyIERvY3VtZW50CkxpdHRsZSBFbmRpYW4KT1M6IFdpbmRvd3MsIFZlcnNpb24g
Ni4xCkNvZGUgcGFnZTogMTI1MgpUaXRsZTogezcwODBBMzA0LTY3RjktNDM2My1CQkVCLTRDRDdE
QjQzRTE5RH0gKHJhbmRvbWx5IGdlbmVyYXRlZCBHVUlEcykKU3ViamVjdDogezcwODBBMzA0LTY3
RjktNDM2My1CQkVCLTRDRDdEQjQzRTE5RH0KQXV0aG9yOiB7NzA4MEEzMDQtNjdGOS00MzYzLUJC
RUItNENEN0RCNDNFMTlEfQpLZXl3b3JkczogezcwODBBMzA0LTY3RjktNDM2My1CQkVCLTRDRDdE
QjQzRTE5RH0KQ29tbWVudHM6IHs3MDgwQTMwNC02N0Y5LTQzNjMtQkJFQi00Q0Q3REI0M0UxOUR9
ClRlbXBsYXRlOiBJbnRlbDsxMDMzCkxhc3QgU2F2ZWQgQnk6IHs3MDgwQTMwNC02N0Y5LTQzNjMt
QkJFQi00Q0Q3REI0M0UxOUR9ClJldmlzaW9uIE51bWJlcjogezRBREE0MjA1LTJFNUItNDVCOC1B
QUMyLUQxMUNGRDFCNzI2Nn0KTnVtYmVyIG9mIFBhZ2VzOiAxMDAKTnVtYmVyIG9mIFdvcmRzOiA4
Ck5hbWUgb2YgQ3JlYXRpbmcgQXBwbGljYXRpb246IFdpbmRvd3MgSW5zdGFsbGVyIFhNTCAoMy4w
LjU0MTkuMCkKU2VjdXJpdHk6IDQKCkl0IHNob3VsZCBiZSBub3RlZCB0aGF0IE1TSSBmaWxlcyB1
c2VkIGluIG90aGVyIGF0dGFja3MgY2FuIGhhdmUgZGlmZmVyZW50IG90aGVyIHByb3BlcnRpZXMu
CkZvciBleGFtcGxlLCB3ZSBvYnNlcnZlZCBzZXZlcmFsIG90aGVyIGZpZWxkczoK4oCiCQrigKIJ
CgpWZW5kb3I6IE1pY3Jvc29mdCBvciBJbnN0YWxsU2hpZWxkClZlcnNpb246IDEuMC4wLjAgb3Ig
MS4xLjIuMCBvciAyLjAuMC4wCgpGb3IgYW55IGlucXVpcmllcywgcGxlYXNlIGNvbnRhY3QgaW50
ZWxyZXBvcnRzQGthc3BlcnNreS5jb20KCgw4CgpUaGUgRHVxdSAyLjAKVGVjaG5pY2FsIERldGFp
bHMKClNvbWUgb2YgdGhlc2UgYXJlIHZpc2libGUgdmlhIHRoZSBXaW5kb3dzIEV4cGxvcmVyIGZp
bGUgcHJvcGVydGllcyBkaWFsb2cgYm94OgoKVGhlcmUgYXJlIHR3byBiaW5hcnkgYmxvY2tzIGlu
c2lkZSB0aGlzIE1TSSBwYWNrYWdlOgoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0
IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMOQoKVGhlIER1cXUgMi4wClRlY2huaWNhbCBE
ZXRhaWxzCgpUaGUgZmlyc3QgYmluYXJ5LCBjYWxsZWQgQWN0aW9uRGxsLCBpcyBpbiBmYWN0IGEg
V2luZG93cyBQRSBETEwgZmlsZSwgd2hpbGUgdGhlIG90aGVyIG9uZQppcyBhIENhbWVsbGlhLWVu
Y3J5cHRlZCBhbmQgTFpKQi1jb21wcmVzc2VkIGRhdGEgcGF5bG9hZCAodGhlIGVuY3J5cHRpb24g
YW5kCmNvbXByZXNzaW9uIGFsZ29yaXRobSB2YXJ5IGZyb20gY2FzZSB0byBjYXNlKS4gSW4gZmFj
dCwgdGhlcmUgYXJlIHNldmVyYWwgbGF5ZXJzIG9mCmV4ZWN1dGFibGUgY29kZSBlbWJlZGRlZCBv
bmUgaW50byBhbm90aGVyIGFzIGNvbXByZXNzZWQgb3IgZW5jcnlwdGVkIGJpbmFyeSBibG9ja3Mu
CkhlcmXigJlzIGEgbG9vayBhdCBhIER1cXUgMi4wIE1TSSBwYWNrYWdlLCB3aXRoIGFsbCBpdHMg
aW50ZXJuYWwgcGF5bG9hZHM6CgpXZSBkZXNjcmliZSB0aGVzZSBjb21wb25lbnRzIGluIG1vcmUg
ZGV0YWlsIGJlbG93LgoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVw
b3J0c0BrYXNwZXJza3kuY29tCgoMMTAKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoK
Rmlyc3QgTGF5ZXI6IEFjdGlvbkRMTCAobXNpLmRsbCkKT3JpZ2luYWwgZmlsZW5hbWU6IG1zaS5k
bGwKTUQ1OiBlOGVhZWMxZjAyMWE1NjRiODJiODI0YWYxZGJlNmM0ZApTaXplOiAxN+KAmTkyMCBi
eXRlcwpMaW5rIHRpbWU6IDIwMDQuMDIuMTIgMDI6MDQ6NTAgKEdNVCkKVHlwZTogNjQtYml0IFBF
MzIrIGV4ZWN1dGFibGUgRExMIGZvciBNUyBXaW5kb3dzClRoaXMgRExMIGhhcyBvbmx5IG9uZSBl
eHBvcnQgbmFtZSBjYWxsZWQgU3RhcnRBY3Rpb24sIHdoaWNoIGlzIGNhbGxlZCBpbiB0aGUgY29u
dGV4dCBvZgptc2lleGVjLmV4ZSBwcm9jZXNzLiBXaGVuIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVk
LCBpdCByZXRyaWV2ZXMgYW4gTVNJIHByb3BlcnR5IGNhbGxlZApQUk9QIGFuZCB1c2VzIGl0IGFz
IGEgZGVjcnlwdGlvbiBrZXkgZm9yIHRoZSBidW5kbGVkIEFjdGlvbkRhdGEwIHBhY2thZ2U6Ck5l
eHQsIHRoZSBjb2RlIGl0ZXJhdGVzIG92ZXIgMTIgcG9zc2libGUKcGF5bG9hZHMgdGhhdCBoYXZl
IHRvIGJlIGRlY3J5cHRlZCBhbmQKc3RhcnRlZC4gVGhlIHBheWxvYWRzIGFyZSBwYXJ0IG9mIHRo
ZQpNU0kgYW5kIG1heSBoYXZlIHRoZSBmb2xsb3dpbmcgbmFtZXM6CkFjdGlvbkRhdGEwLCBBY3Rp
b25EYXRhMSwgQWN0aW9uRGF0YTIsCmV0Yy4KVGhlIHBhY2thZ2UgZGVzY3JpYmVkIGhlcmUgY29u
dGFpbnMKb25seSBvbmUgcGF5bG9hZCBuYW1lZCDigJxBY3Rpb25EYXRhMOKAnS4KClNlY29uZCBM
YXllcjogQWN0aW9uRGF0YTAKVGhpcyBiaW5hcnkgY2h1bmsgY29udGFpbnMgdGhlIG1haW4gY29k
ZSwgaW4KY29tcHJlc3NlZCBhbmQgZW5jcnlwdGVkIGZvcm1hdC4gSXQgcmVwcmVzZW50cyBhCmNv
bXBvc2l0aW9uIG9mIGV4ZWN1dGFibGUsIHBvc2l0aW9uLWluZGVwZW5kZW50IGNvZGUKYmxvY2tz
IG1peGVkIHdpdGggZW1iZWRkZWQgZGF0YSBvYmplY3RzLiBUaGUgY29kZQpzZWVtcyB0byBiZSBi
YXNlZCBvbiBhIGZyYW1ld29yayBhbmQgaGVhdmlseSB1c2VzCmhlbHBlciBzdHJ1Y3R1cmVzIHRo
YXQgY29udGFpbiBwb2ludGVycyB0byBhIHNldCBvZiBzeXN0ZW0KQVBJcyBhbmQgb2Zmc2V0cyB0
byBpbnRlcm5hbCBkYXRhIGJsb2Nrcy4gU3VjaCBzdHJ1Y3R1cmVzCmFyZSBkZWZpbml0ZWx5IGEg
dHJhZGVtYXJrIG9mIHRoZSBkZXZlbG9wZXIuIFdoZW4gdGhleQphcmUgaW5pdGlhbGl6ZWQsIG9u
ZSBmaWVsZCAodXN1YWxseSB0aGUgZmlyc3QgNCBieXRlcykgY29udGFpbnMKYSBtYWdpYyB2YWx1
ZSB0aGF0IGlkZW50aWZpZXMgdGhlIHN0YXRlIGFuZCB0eXBlIG9mIHRoZQpzdHJ1Y3R1cmUuCkFu
b3RoZXIgdHJhZGVtYXJrIG9mIHRoZSBjb2RlciBpcyB0aGUgd2F5IHRvIGltcG9ydApzeXN0ZW0g
QVBJIGJ5IG1vZHVsZSBhbmQgZXhwb3J0IG5hbWUgaGFzaGVzLiBUaGUKaGFzaGluZyBhbGdvcml0
aG0gd2FzIGZvdW5kIGFsbCBvdmVyIHRoaXMgYW5kIG90aGVyCmxheWVycyBvZiBleGVjdXRhYmxl
IGNvZGUuIEl04oCZcyBlYXNpbHkgcmVjb2duaXphYmxlIGJ5IHR3bwpEV09SRCBjb25zdGFudHM6
IDB4OEEyMEMyNyBhbmQgMHg2N0Y4NEZDNi4KQmFzaWNhbGx5LCB0aGUgY29kZSBpbiBBY3Rpb25E
YXRhMCBwYXNzZXMgZXhlY3V0aW9uCnRvIGFuIGVtYmVkZGVkIGV4ZWN1dGFibGUsIHdoaWNoIHdl
IHdpbGwgcmVmZXIgYnkgaXRzCmludGVybmFsIG5hbWU6IOKAnGtsaWYuZGxs4oCdLiBUaGUgZXhl
Y3V0aW9uIGlzIHBhc3NlZCB0byB0aGUKc2Vjb25kIGV4cG9ydGVkIGZ1bmN0aW9uIGluIHRhYmxl
IG9mIGV4cG9ydHMgb2YgdGhpcyBETEwKZmlsZS4gVGhpcyBkaXNyZWdhcmRzIHRoZSBleHBvcnQg
bmFtZSBhbmQgcmVsaWVzIG9ubHkgb24KdGhlIG9yZGVyIG9mIGZ1bmN0aW9ucyBpbiB0aGUgdGFi
bGUgb2YgUEUgZXhwb3J0IG9yZGluYWxzLgpXaGVuIHRoaXMgZXhwb3J0IGZ1bmN0aW9uIGlzIGNh
bGxlZCwgYSBuZXh0IHN0YWdlIGhlbHBlciBzdHJ1Y3R1cmUgcG9pbnRlciBpcyBwYXNzZWQgdG8g
aXQsCnNvIHRoYXQgaXQgY2FuIHVzZSBzb21lIG9mIHRoZSB2YWx1ZXMgc2V0IG9uIHRoZSB1cHBl
ciBsYXllci4KRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0Br
YXNwZXJza3kuY29tCgoMMTEKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoKSG93ZXZl
ciwgYmVmb3JlIHBhc3NpbmcgZXhlY3V0aW9uIHRvIGtsaWYuZGxsLCB0aGUgY29kZSBhdHRlbXB0
cyBhbHRlcm5hdGl2ZSByb3V0ZXMuCkZpcnN0LCBpdCBhdHRlbXB0cyB0byBmaW5kIHRoZSBuYW1l
IG9mIHRoZSBmb2xsb3dpbmcgZm9ybWF0IOKAnGFwaS1tcy13aW4tc2hlbGwtWFhYWC4KZGxs4oCd
LCB3aGVyZSDigJxY4oCdIGNhbiBiZSBhbnkgZGVjaW1hbCBudW1iZXIuIFRoZSBuYW1lIGlzIHZh
bGlkIGlmIHRoZXJlIGlzIG5vIG1vZHVsZSB3aXRoCnN1Y2ggZmlsZW5hbWUgbG9hZGVkIGludG8g
Y3VycmVudCBwcm9jZXNzLiBUaGUgY29kZSBhdHRlbXB0cyB0byBpdGVyYXRpdmVseSBmaW5kIHN1
Y2gKbmFtZSBzdGFydGluZyBmcm9tIGFwaS1tcy13aW4tc2hlbGwtMDAwMC5kbGwsIGFwaS1tcy13
aW4tc2hlbGwtMDAwMS5kbGwsIGFwaS1tcy13aW5zaGVsbC0wMDAyLmRsbCBhbmQgc28gb24uIFRo
aXMgbWF5IGJlIGEgZGVwZW5kZW5jeSB0byB0aGUgRHVxdSBwbGF0Zm9ybSBjb21wb25lbnQKdGhh
dCBpcyB5ZXQgdG8gYmUgZGlzY292ZXJlZC4KUmlnaHQgYWZ0ZXIgdGhpcywgaWYgdGhlIG5hbWUg
d2FzIGZvdW5kLCB0aGUgY29kZSBhdHRlbXB0cyB0byBtYXAgYSBzZWN0aW9uIGtlcm5lbCBvYmpl
Y3QKYnkgbmFtZSwgd2hpY2ggaXMgZ2VuZXJhdGVkIHVzaW5nIGEgUFJORy1iYXNlZCBhbGdvcml0
aG0uIFRoZSBuYW1lIG9mIHRoZSBzZWN0aW9uCmhhcyB0aGUgZm9sbG93aW5nIHRlbXBsYXRlOiDi
gJxcQmFzZU5hbWVkT2JqZWN0c1x7WFhYWFhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWH3igJ0s
IHdoZXJlIOKAnFjigJ0gaXMgYW55IGhleGFkZWNpbWFsIGRpZ2l0IHRoYXQgaXMgZ2VuZXJhdGVk
IGJhc2VkIG9uIGN1cnJlbnQKc3lzdGVtIGJvb3QgdGltZS4gU28gZmFyLCB0aGUgbmFtZSBvZiB0
aGUgc2VjdGlvbiBpcyDigJxtYWNoaW5lL2Jvb3QgdGltZeKAnSBkZXBlbmRlbnQsCndoaWNoIG1h
a2VzIGl0IHVuaXF1ZSBidXQgYWxsb3dzIG90aGVyIHByb2Nlc3NlcyBvZiBtb2R1bGVzIHRvIGxv
Y2F0ZSBzdWNoIHNlY3Rpb24gaWYKdGhleSB1c2UgdGhlIHNhbWUgbmFtZSBnZW5lcmF0aW9uIGFs
Z29yaXRobS4gVGhpcyBzZWN0aW9uIGlzIGFjY2Vzc2VkIGluIGRpZmZlcmVudCBvdGhlcgpwYXJ0
cyBvZiB0aGUgY29kZSBhbmQgbW9kdWxlcy4gTGV0cyByZWZlciB0byB0aGlzIHNlY3Rpb24gYXMg
T1NCb290LXNlY3Rpb24gZnJvbSBub3cuCk9uY2UgdGhlIHNlY3Rpb24gbmFtZSBpcyBnZW5lcmF0
ZWQgdGhlIGNvZGUgdHJpZXMgdG8gb3BlbiBzdWNoIHNlY3Rpb24gYW5kLCBpZiBpdCBpcwpmb3Vu
ZCwgaXQgdGFrZXMgc29tZSB2YWx1ZXMgZnJvbSBpdCBhbmQgYXR0ZW1wdHMgdG8gb3BlbiBhIHNw
ZWNpZmljIGRldmljZSBhbmQgaXNzdWUgYQpudW1iZXIgb2YgSU9DVEwgY29kZXMgdG8gdGhlIGRy
aXZlci4gVGhlIG5hbWUgb2YgdGhlIGRyaXZlciBkZXZpY2UgYXMgd2VsbCBhcyBJT0NUTApjb2Rl
cyBhcmUgbG9jYXRlZCBpbnNpZGUgYSBzZWN0aW9uIG9mIHRoZSBrZXJuZWwgbW9kZSBkcml2ZXIg
S01BUlQuZGxsIHRoYXQgaXMgZGVzY3JpYmVkCmJlbG93LgpUaGUgY29kZSBkZXZlbG9wZXIgaGFz
IGEgcHJlZmVyZW5jZSBmb3IgdXNpbmcgc2VjdGlvbnMgdG8gYW55IG90aGVyIHdheXMgdG8gYWNj
ZXNzCmRhdGEuIEFub3RoZXIgdXNlIG9mIHNlY3Rpb25zIGFwcGVhcnMgdG8gYmUgaW4gbWFwcGlu
ZyB0aGUgcGFydCBvZiBjb2RlL2RhdGEgd2hlcmUKa2xpZi5kbGwgaXMgZW1iZWRkZWQgYW5kIHRo
ZW4gZmluZGluZyB0aGF0IHNlY3Rpb24gdXNpbmcgYSBoYXJkY29kZWQgbWFnaWMgUVdPUkQKbnVt
YmVyOiAweEExQjVGOEZDMEMyRTEwNjQuIE9uY2UgdGhlIHNlY3Rpb24gaXMgZm91bmQgaW4gYWRk
cmVzcyBzcGFjZSBvZiBjdXJyZW50CnByb2Nlc3MgdGhlIGNvZGUgYXR0ZW1wdHMgdG8gcGFzcyBl
eGVjdXRpb24gdG8gaXQuIFRoaXMgYWx0ZXJuYXRpdmUgZXhlY3V0aW9uIHJvdXRlIGlzCm5vdCBh
cHBsaWNhYmxlIHRvIGN1cnJlbnQgTVNJIGZpbGUgcGFja2FnZSBidXQgc2ltcGx5IGV4aXN0cyBp
biB0aGUgY29kZSBwcm9iYWJseSBkdWUKdG8gY29tbW9uIGNvZGUgdGVtcGxhdGUgdXNlZCBmb3Ig
YnVpbGRpbmcgY3VycmVudCBNU0kgcGFja2FnZS4gSXQgbWF5IGFsc28gYmUgYW4KaW5kaWNhdG9y
IG9mIGFub3RoZXIgRHVxdSBwbGF0Zm9ybSBjb21wb25lbnQgdGhhdCB3YXNu4oCZdCB1c2VkIGlu
IHRoZSBhdHRhY2tzIHRoYXQgd2UKb2JzZXJ2ZWQuCgpUaGlyZCBMYXllcjoga2xpZi5kbGwKT3Jp
Z2luYWwgZmlsZW5hbWU6IGtsaWYuZGxsCk1ENTogM2ZkZTFiYmYzMzMwZTBiZDA5NTIwNzdhMzkw
Y2VmNzIKU2l6ZTogMTk24oCZMDk2IGJ5dGVzCkxpbmsgdGltZTogMjAxNC4wNy4wNiAwODozNjo1
MCAoR01UKQpUeXBlOiA2NC1iaXQgUEUzMisgZXhlY3V0YWJsZSBETEwgZm9yIE1TIFdpbmRvd3MK
QXBwYXJlbnRseSwgdGhpcyBmaWxlIGF0dGVtcHRzIHRvIG1pbWljIHNvbWUgb2YgbGVnaXRpbWF0
ZSBuYW1lcyBvZiBLYXNwZXJza3kgTGFiCnByb2R1Y3QgY29tcG9uZW50czog4oCca2xpZi5zeXPi
gJ0uIEFsdGhvdWdoIHRoZXJlIGlzIG5laXRoZXIgc2ltaWxhcml0eSBpbiBjb2RlIG5vciBpbiBm
aWxlCmluZm9ybWF0aW9uLCB0aGUgbW9kdWxlIHVzZXMgS2FzcGVyc2t5IExhYiBhY3JvbnltIGlu
IGl04oCZcyBleHBvcnQgbmFtZXM6IEtMSW5pdCBhbmQKS0xEb25lLgoKRm9yIGFueSBpbnF1aXJp
ZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMMTIKClRoZSBE
dXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoKV2hlbiB0aGlzIERMTCBpcyBsb2FkZWQgaW50byBh
IG5ldyBwcm9jZXNzLCBpdCBzaW1wbHkgaW5pdGlhbGl6ZXMgaW50ZXJuYWwgc3RydWN0dXJlcywg
c3VjaAphcyB0aG9zZSBwcm92aWRpbmcgcG9pbnRlcnMgdG8gdGhlIHJlcXVpcmVkIHN5c3RlbSBB
UEkuClRoZSByZWFsIHBheWxvYWQgb2YgdGhpcyBtb2R1bGUgaXMgbG9jYXRlZCBpbiB0aGUgS0xE
b25lIGV4cG9ydCBmdW5jdGlvbiwgd2hpY2ggaXMKc2Vjb25kIGluIHRoZSBsaXN0IG9mIHRoZSBl
eHBvcnQgdGFibGUuIFRoaXMgZXhwb3J0IGZ1bmN0aW9uIGlzIGNhbGxlZCBmcm9tIHRoZSBwcmV2
aW91cwpjb2RlIGxheWVyLgpGaXJzdCwgaXQgbWFrZXMgc3VyZSB0aGF0IGdsb2JhbCBhcHBsaWNh
dGlvbiBzdHJ1Y3R1cmUgaXMgaW5pdGlhbGl6ZWQgd2l0aCBlc3NlbnRpYWwgZnVuY3Rpb25zCmZy
b20gbnRkbGwuZGxsLCBrZXJuZWwzMi5kbGwgYW5kIHVzZXIzMi5kbGwuIFN5c3RlbSBBUEkgZnVu
Y3Rpb25zIGFyZSBpbXBvcnRlZCB1c2luZyBoYXNoZXMKb2YgZXhwb3J0IG5hbWVzLiBUaGUgaGFz
aGluZyBhbGdvcml0aG0gaXMgaWRlbnRpY2FsIHRvIHRoZSBvbmUgZGVzY3JpYmVkIG9uZSBsYXll
ciBhYm92ZQphbmQgdXNlcyB0aGUgc2FtZSBtYWdpYyBjb25zdGFudHM6IDB4OEEyMEMyNyBhbmQg
MHg2N0Y4NEZDNi4KTmV4dCB0aGUgY29kZSBpdGVyYXRlcyB0aHJvdWdoIHRoZSBsaXN0IG9mIHJ1
bm5pbmcgcHJvY2Vzc2VzIGFuZCBoYXNoZXMgbG93ZXJjYXNlIG5hbWUKb2YgZWFjaCBwcm9jZXNz
LiBUaGUgaGFzaCBpcyBjb21wYXJlZCB0byBhIGhhcmRjb2RlZCB2YWx1ZSBvZiAweDNFMzAyMUNC
LCB3aGljaCBpcyBhCmhhc2ggZm9yIHRoZSDigJxhdnAuZXhl4oCdIHN0cmluZy4KCkF0dGFja2lu
ZyBBVlAuRVhFCklmIHRoZSDigJxhdnAuZXhl4oCdIHByb2Nlc3MgaXMgcnVubmluZywgdGhlIG1v
ZHVsZSBhdHRlbXB0cyB0byBvcGVuIHRoZSBPU0Jvb3Qtc2VjdGlvbiBhcwpkZXNjcmliZWQgYmVm
b3JlIGFuZCB0cmllcyB0byBhdHRhY2sgdGhlIGF2cC5leGUgcHJvY2Vzcy4gVGhlIGF0dGFjayBz
dGFydHMgZnJvbQppZGVudGlmeWluZyB0aGUgZXhhY3QgcGF0aCB0byB0aGUgaW5zdGFsbGVkIEth
c3BlcnNreSBMYWIgcHJvZHVjdCBieSBpdGVyYXRpbmcgdGhyb3VnaCBhbgphcnJheSBvZiBoYXJk
Y29kZWQgcmVnaXN0cnkga2V5cyBhbmQgdmFsdWVzIGZvciB0aGUgZm9sbG93aW5nIHByb2R1Y3Rz
OgpLRVMxMgoKQVZQMTUKCkFWUDEwCgpLRVMxMQoKQVZQMTQuMC4wCgpLRVM5CgpLRVMxMAoKQVZQ
MTQKCktFUzgKCkFWUDE2LjAuMAoKQVZQMTMKCkFWUDgwCgpBVlAxNgoKQVZQMTIKCkFWUDkwCgpB
VlAxNS4wLjAKCkFWUDExCgpBVlA5CgpBVlA4CkFWUDcKQVZQNgoKVGhlIHJlZ2lzdHJ5IHZhbHVl
cyBxdWVyaWVkIGJ5IHRoZSBtb2R1bGUgY29udGFpbiBhIGZpbGVzeXN0ZW0gcGF0aCB0byB0aGUg
cm9vdCBkaXJlY3RvcnkKd2hlcmUgdGhlIGNvcnJlc3BvbmRpbmcgcHJvZHVjdCBpcyBpbnN0YWxs
ZWQuIEZvciBleGFtcGxlOiDigJxDOlxQcm9ncmFtIEZpbGVzXEthc3BlcnNreQpMYWJcS2FzcGVy
c2t5IEludGVybmV0IFNlY3VyaXR5IDE1LjAuMFzigJ0KT25jZSB0aGUgcmVnaXN0cnkga2V5IGFu
ZCB2YWx1ZSBpcyBmb3VuZCwgdGhlIG1vZHVsZSBjb25maXJtcyB0aGF0IGF2cC5leGUgZmlsZSBp
cyBsb2NhdGVkCmluIHRoYXQgZGlyZWN0b3J5LiBJdCBkb2VzIHNvbWUgYmFzaWMgZmlsZSBhdmFp
bGFiaWxpdHkgY2hlY2tzIGFzIHdlbGw6IG1ha2VzIHN1cmUgdGhhdAplbnZpcm9ubWVudCB2YXJp
YWJsZXMgYXJlIHJlc29sdmVkIGFuZCB0aGUgZmlsZSBjYW4gYmUgb3BlbmVkIGZvciByZWFkaW5n
IGFuZCBpdCBiZWdpbnMKd2l0aCAweDVBNEQgKG1hZ2ljIOKAnE1a4oCdIHZhbHVlIG9mIFdpbmRv
d3MgZXhlY3V0YWJsZXMpLgpBZnRlciB0aGF0LCB0aGUgbW9kdWxlIGNyZWF0ZXMgYSBuZXcgc2Vj
dGlvbiBhbmQgbWFwcyBhdnAuZXhlIGFzIGEgZmlsZSB2aWV3IHRvIHRoaXMKc2VjdGlvbi4gVG8g
YWxsb3cgY29kZSBleGVjdXRpb24sIHRoZSBhdHRyaWJ1dGVzIG9mIHRoaXMgbWVtb3J5IHJlZ2lv
biBhcmUgYWxzbyBjaGFuZ2VkCmFjY29yZGluZ2x5LiBUaGlzIGFsbG93cyB0aGUgbW9kdWxlIHRv
IGNoYW5nZSBieXRlcyBmcm9tIHRoZSBtYXBwZWQgYXZwLmV4ZSBpbgptZW1vcnkuIFRoZSBtb2R1
bGUgYXBwbGllcyB0d28gcGF0Y2hlcyB0byB0aGUgbWFwcGVkIGF2cC5leGUgaW4gYSBxdWl0ZSB1
bnVzdWFsIHdheQp1c2luZyBTU0UyIENQVSBleHRlbnNpb25zLiBJbiBmYWN0LCBpdCBwYXRjaGVz
IGp1c3QgdGhlIG9sZCBET1MgUEUgaGVhZGVyIChsZXNzIHRoYW4gMTIwCmJ5dGVzKS4gVGhlIHBh
dGNoZXMgYXJlIHNpbXBsZSBjYWxsYmFjayBtZWNoYW5pc21zIHRoYXQgY2FsbCBhcmJpdHJhcnkg
ZnVuY3Rpb24gcGFzc2VkIGFzCmFuIGFyZ3VtZW50LgpSaWdodCBhZnRlciB0aGlzLCB0aGUgbW9k
dWxlIGF0dGVtcHRzIHRvIHN0YXJ0IGEgbmV3IHRocmVhZCB0aGF0IGJlZ2lucyB3aXRoIG9uZSBv
ZiB0aGUKcGF0Y2hlZCBsb2NhdGlvbnMuIFNvIGZhciwgaXQgbG9va3MgbGlrZSB0aGUgbmV3IHRo
cmVhZCBiZWdpbnMgd2l0aCBhIGNhbGwgb3JpZ2luYXRpbmcgZnJvbQphdnAuZXhlIG1vZHVsZSB0
aGF0IGRvZXMgc29tZSBvdGhlciBjYWxscywgaS5lLiBqdW1waW5nIGJhY2sgdG8ga2xpZi5kbGwu
IEFwcGFyZW50bHksIHRoaXMKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVs
cmVwb3J0c0BrYXNwZXJza3kuY29tCgoMMTMKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWls
cwoKYXR0YWNrIHdhcyBpbnRyb2R1Y2VkIHRvIHRyaWNrIHRoZSBhdnAuZXhlIHByb2Nlc3MgaW50
byBiZWxpZXZpbmcgdGhhdCBmdXJ0aGVyIGNhbGxzIHdpbGwKYmUgc2FmZSBhbmQgdHJ1c3RlZCBh
cyB0aGUgcm9vdCBvZiB0aGUgY2FsbCBzdGFjayBpcyBjb21pbmcgZnJvbSB0aGUgbGVnaXRpbWF0
ZSBhdnAuZXhlCm1vZHVsZS4gVGhpcyBpcyB3aGF0IHdlIHNlZSBmdXJ0aGVyIGRvd24gaW4gdGhl
IGNvZGU6IHRoZSBuZXcgdGhyZWFkIGluc3RhbnRseSBqdW1wcwpmcm9tIGF2cC5leGUgYmFjayB0
byBrbGlmLmRsbCBhbmQgdHJpZXMgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgS2FzcGVyc2t5IExh
YiBwcm9kdWN0Cm1pbmlmaWx0ZXIgZHJpdmVyLCBrbm93biBhcyBrbGlmLnN5cy4KSW4gZmFjdCwg
anVzdCBiZWZvcmUgY29tbXVuaWNhdGluZyB3aXRoIGtsaWYuc3lzLCBpdCBvcGVucyBPU0Jvb3Qt
c2VjdGlvbiBhbmQgZ2V0cyBhbgpJT0NUTCBjb2RlIGFzIHdlbGwgYXMgdGhlIGRyaXZlciBkZXZp
Y2UgbmFtZSB0byBzZW5kIHRoaXMgSU9DVEwgY29kZSB0by4gVGhlIHNlY3Rpb24KYW5kIGNvcnJl
c3BvbmRpbmcgZHJpdmVyIChLTUFSVC5kbGwpIHByb3ZpZGUgY2VydGFpbiBzdXBwb3J0IHRvIHRo
ZSBjdXJyZW50IG1vZHVsZS4gVGhlCmNvZGUgaGFzaGVzIGN1cnJlbnQgcHJvY2VzcyBuYW1lIGFu
ZCB2ZXJpZmllcyBpZiBpdCBmYWxscyBkb3duIGludG8gb25lIG9mIHRocmVlIGhhc2hlczoKMHgz
RTMwMjFDQiAoYXZwLmV4ZSksIDB4REU2RDREQTAgKG1zaWV4ZWMuZXhlKSwgMHhCOTE1QjJEOCAo
cnVuZGxsMzIuZXhlKS4KSWYgY3VycmVudCBwcm9jZXNzIG5hbWUgaGFzaCBpcyByZWNvZ25pemVk
LCB0aGUgbW9kdWxlIGNvbW11bmljYXRlcyB3aXRoIGtsaWYuc3lzCmJ5IG9wZW5pbmcgXEtsaWZD
b21tIG1pbmlmaWx0ZXIgY29tbXVuaWNhdGlvbiBwb3J0IGFuZCBzZW5kaW5nIHNlcmllcyBvZiBk
cml2ZXIKY29tbXVuaWNhdGlvbiBtZXNzYWdlcy4gQWNjb3JkaW5nIHRvIGFuYWx5c2lzIG9mIHRo
ZSBtZXNzYWdlcywgdGhpcyB0ZWNobmlxdWUKbWFrZXMgcHJvY2VzcyBvciB0aHJlYWQgb3BlcmF0
aW9ucyDigJxpbnZpc2libGXigJ0gdG8gdGhlIGtsaWYgaW50ZXJjZXB0b3IuIFN1Y2ggcmVnaXN0
ZXJlZAplbnRpdHkgaXMgY29uc2lkZXJlZCB0byBiZSB0cnVzdGVkIGFuZCBpdHMgYWN0aXZpdHkg
aXMgcmVtb3ZlZCBmcm9tIEFWLXNjYW5uaW5nLCBwcm9jZXNzCm1vbml0b3JpbmcsIGZpcmV3YWxs
IGFuZCBvdGhlciBkZWZlbnNlIGVuZ2luZXMgdGhhdCBhcmUgc3Vic2NyaWJlZCB0byBpbnRlcmNl
cHRlZCBldmVudHMuCkluIGFkZGl0aW9uLCB0aGUgbW9kdWxlIHJlcXVlc3RzIHN1cHBvcnQgb2Yg
dGhlIHNlbGYtZGVmZW5zZSBmZWF0dXJlIG9mIEthc3BlcnNreSBMYWIKcHJvZHVjdCwgd2hpY2gg
aXMgbm9ybWFsbHkgdXNlZCB0byBwcm90ZWN0IHRoZSBzb2Z0d2FyZSBmcm9tIGFnZ3Jlc3NpdmUg
bWFsd2FyZSB3aGljaApraWxscyB0aGUgc2VjdXJpdHkgc29mdHdhcmUgcHJvY2Vzc2VzIHVzaW5n
IGEgbnVtYmVyIG9mIHRlY2huaXF1ZXMgYXZhaWxhYmxlIGZyb20gdGhlCk9TLiBUaGlzIG9mIGNv
dXJzZSBndWFyYW50ZWVzIHRoYXQgZXZlbiBhIHVzZXIgd2l0aCBhZG1pbmlzdHJhdGl2ZSBwcml2
aWxlZ2VzIGNhbm5vdCBzdG9wCnN1Y2ggcHJvY2Vzcy4KQ29uc2lkZXJpbmcgdGhhdCB0aGlzIHNl
ZW1lZCB0byBiZSBhbiBhdHRhY2sgYWdhaW5zdCBLYXNwZXJza3kgTGFiIHByb2R1Y3RzLCB3ZSBk
aWQKc29tZSBhZGRpdGlvbmFsIHRlc3RzIG9mIHRoZSBwcm9kdWN0cyBhbmQgZm91bmQgdGhhdCBj
dXJyZW50IHByb2R1Y3RzIHZlcmlmeSB0aGUgY2FsbGVyCnByb2Nlc3MgYnkgY2hlY2tpbmcgaXRz
IGN1c3RvbSBkaWdpdGFsIHNpZ25hdHVyZS4gU28gZmFyLCB3aXRob3V0IGFkZGl0aW9uYWwgZHJp
dmVyIHN1cHBvcnQsCnRoaXMgdGVjaG5pcXVlIHNob3VsZCBmYWlsLiBWZXJpZmljYXRpb24gb2Yg
dGhlIGRpZ2l0YWwgc2lnbmF0dXJlIG9mIHRoZSBwcm9jZXNzIHRoYXQgb3BlbmVkClxLbGlmQ29t
bSBtaW5pZmlsdGVyIGNvbW11bmljYXRpb24gcG9ydCB3YXMgaW1wbGVtZW50ZWQgaW4gYWxsIEth
c3BlcnNreSBMYWIKcHJvZHVjdHMgc2luY2UgMjAxMC4gU28gZmFyLCB0aGlzIGNvdWxkIGFmZmVj
dCBvbmx5Cm9sZGVyIHByb2R1Y3RzIHN1Y2ggYXMgS0lTMjAxMCwgd2hpY2ggd2FzCnJlbGVhc2Vk
IGJ5IEthc3BlcnNreSBMYWIgaW4gMjAwOSDilroKSXQgZG9lc27igJl0IGxvb2sgcmVhbGlzdGlj
IG5vdyB0aGF0IHRoZSBhdHRhY2tlcnMKc3RhcnRlZCBpbXBsZW1lbnRpbmcgdHJpY2tzIGFnYWlu
c3QgS2FzcGVyc2t5CkxhYiBwcm9kdWN0cyBpbiAyMDA5IG9yIGVhcmxpZXIuIFNvIHdlIGxvb2tl
ZCBmb3IKYW5vdGhlciByYXRpb25hbCBleHBsYW5hdGlvbiBhbmQgc2VlbSB0byBoYXZlCmZvdW5k
IGl0LgpTdWNoIGFuIGF0dGFjayBkb2VzbuKAmXQgbm9ybWFsbHkgd29yayBhZ2FpbnN0Cm91ciBw
cm9kdWN0cyBiZWNhdXNlIHRoZXkgdmVyaWZ5IHRoYXQgdGhlIGNhbGxlcgpwcm9jZXNzIGlzIGxl
Z2l0aW1hdGUgYnkgY2hlY2tpbmcgaXRzIGN1c3RvbSBkaWdpdGFsCnNpZ25hdHVyZS4gVG8gYnlw
YXNzIHRoaXMsIHRoZSBEdXF1IDIuMCBjb21wb25lbnQKbmFtZWQg4oCcS01BUlQuZGxs4oCdIHBh
dGNoZXMg4oCca2xpZi5zeXPigJ0gaW4gbWVtb3J5IHRvCmJ5cGFzcyB0aGlzIGNoZWNrLiBUaGUg
YXR0YWNrIHdvcmtzIGJlY2F1c2UgdGhlCmF0dGFja2Vy4oCZcyDigJxLTUFSVC5kbGzigJ0gaXMg
YWxyZWFkeSBydW5uaW5nIGluIGtlcm5lbAptb2RlIGR1ZSB0byBhIHZ1bG5lcmFiaWxpdHkgaW4g
dGhlIFdpbmRvd3Mga2VybmVsLgpBZnRlciBzZW5kaW5nIHRoZSBjb2RlcywgdGhlIG1vZHVsZSBw
cm9jZWVkcyB0byB0aGUgbmV4dCBzdGFnZSwgd2hpY2ggaXMgcHJvY2VzcwptaWdyYXRpb24sIGRl
c2NyaWJlZCBmdXJ0aGVyIGJlbG93LgoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0
IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMMTQKClRoZSBEdXF1IDIuMApUZWNobmljYWwg
RGV0YWlscwoKQ1R3b1BFTkMuZGxsIHplcm8tZGF5IGFuZCBLTUFSVC5kbGwKVGhlIHRoaXJkIGxh
eWVyIGtsaWYuZGxsIHBlcmZvcm1zIGEgbXVsdGl0dWRlIG9mIGZ1bmN0aW9ucyBpbiBvcmRlciB0
byBlbnN1cmUgdGhlIHN1cnZpdmFsIG9mCnRoZSBtYWx3YXJlIGluIG1lbW9yeSBhbmQgYnlwYXNz
IGFudGl2aXJ1cyBkZXRlY3Rpb25zLgpPbmUgaW1wb3J0YW50IHN0ZXAgaXMgdG8gZ2V0IGtlcm5l
bCBsZXZlbCBhY2Nlc3MuIE9uIDY0LWJpdCBzeXN0ZW1zLCBvbmUgY2Fubm90IHNpbXBseQpsb2Fk
IGFuZCBydW4ga2VybmVsIG1vZGUgY29kZSB3aXRob3V0IGEgc2lnbmVkIGRyaXZlci4gV2hpbGUg
b3RoZXIgYXR0YWNrZXJzIHN1Y2gKYXMgRXF1YXRpb24gb3IgVHVybGEgY2hvc2UgdG8gcGlnZ3li
YWNrIG9uIHRoaXJkLXBhcnR5IHNpZ25lZCBkcml2ZXJzLCB0aGUgRHVxdSAyLjAKcGxhdGZvcm0g
cmVsaWVzIG9uIGEgbXVjaCBtb3JlIGN1bm5pbmcgdHJpY2suCk9uZSBvZiB0aGUgcGF5bG9hZHMg
YnVuZGxlZCB0b2dldGhlciB3aXRoIOKAnGtsaWYuZGxs4oCdIGlzIGNhbGxlZCDigJxDVHdvUEVO
Qy5kbGzigJ0uIFRoaXMgaXMKYVdpbmRvd3Mga2VybmVsIG1vZGUgZXhwbG9pdCAoQ1ZFLTIwMTUt
MjM2MCkgdGhhdCBhbGxvd3MgdGhlbSB0byBydW4gY29kZSB3aXRoIHRoZQpoaWdoZXN0IHByaXZp
bGVnZXMgaW4gdGhlIHN5c3RlbSBXZSByZWNvdmVyZWQgc2V2ZXJhbCB2ZXJzaW9ucyBvZiDigJxD
VHdvUEVOQy5kbGzigJ0sIGJvdGgKZm9yIDMyLWJpdCBhbmQgNjQtYml0IHZlcnNpb25zIG9mIFdp
bmRvd3MsIHdpdGggdGhlIGZvbGxvd2luZyBjb21waWxhdGlvbiB0aW1lc3RhbXBzOgrigKIJCuKA
ogkK4oCiCQoKMjAxNC4wOC4yNSAwMToyMDowNCAoR01UKQoyMDE0LjA4LjI1IDAxOjE5OjAzIChH
TVQpCjIwMTQuMDcuMDYgMDk6MTc6MDMgKEdNVCkKClVubGlrZSBvdGhlciBEdXF1IDIuMCBtb2R1
bGVzLCB0aGVzZSB0aW1lc3RhbXBzIGFwcGVhciB0byBiZSBsZWdpdGltYXRlLiBUaGUgcmVhc29u
CmZvciB0aGlzIHJlbWFpbnMgdW5rbm93biDigJMgcGVyaGFwcyB0aGUgRHVxdSBwbGF0Zm9ybSBk
ZXZlbG9wZXJzIGdvdCB0aGlzIG1vZHVsZSBmcm9tCnNvbWVib2R5IGVsc2UgYW5kIGZvcmdvdCB0
byBwYXRjaCBpdHMgY29tcGlsYXRpb24gdGltZXN0YW1wLgrigJxDVHdvUEVOQy5ETEzigJ0gZXhw
bG9pdHMgYSB6ZXJvLWRheSB2dWxuZXJhYmlsaXR5IGluIOKAnHdpbjMyay5zeXPigJ0gdG8gZ2Fp
biBrZXJuZWwgcHJpdmlsZWdlcwp3aGlsZSBiZWluZyBydW4gYXMgYW4gdW5wcml2aWxlZ2VkIHVz
ZXIuIEl0IGNyZWF0ZXMgc2V2ZXJhbCB3aW5kb3dzIHdpdGggY2xhc3NlcyBuYW1lZArigJxDUGVy
4oCdLCDigJxaZXJv4oCdLCDigJxDVHdv4oCdLCDigJxWZXJv4oCdIGluIHNldmVyYWwgdGhyZWFk
cyBhbmQgbWFuaXB1bGF0ZXMgdGhlIGNhbGxiYWNrIHBvaW50ZXJzLgoKUGFydCBvZiB0aGUgZXhw
bG9pdCBjb2RlIHRoYXQgcmVnaXN0ZXJzIHdpbmRvdyBjbGFzc2VzIGFuZCBjcmVhdGVzIG5ldyB3
aW5kb3dzLgoKVGhlIG1haW4gcHVycG9zZSBvZiB0aGUgZXhwbG9pdCBpcyB0byBsb2FkIGEgZHJp
dmVyIG5hbWVkIOKAnEtNQVJULmRsbOKAnS4gSWYgdGhlIGV4cGxvaXQKc3VjY2VlZHMsIGl0IGRl
Y29tcHJlc3NlcyDigJxLTUFSVC5kbGzigJ0gZnJvbSB0aGUgbW9kdWxl4oCZcyBib2R5IGFuZCBw
YXNzZXMgY29udHJvbAoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVw
b3J0c0BrYXNwZXJza3kuY29tCgoMMTUKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoK
dG8gaXQgd2hpbGUgcnVubmluZyBpbiBrZXJuZWwgbW9kZS4gQm90aCAzMi1iaXQgYW5kIDY0LWJp
dCB2ZXJzaW9ucyBvZiB0aGUg4oCcS01BUlQuCkRMTOKAnSBleGlzdC4gVGhpcyBkcml2ZXIgaW1w
bGVtZW50cyBhIGtlcm5lbC1tb2RlIGF0dGFjayBhZ2FpbnN0IHRoZSBLYXNwZXJza3kgTGFiCnBy
b2R1Y3RzIGZpbHRlciDigJxrbGlmLnN5c+KAnS4gSXQgcGF0Y2hlcyB0aGUgaW1wb3J0IHRhYmxl
IGFkZHJlc3NlcyBvZiBzeXN0ZW0gQVBJIGZ1bmN0aW9ucwpQc0dldEN1cnJlbnRQcm9jZXNzSWQs
IFBzTG9va3VwUHJvY2Vzc0J5UHJvY2Vzc0lkIGFuZCBLbEdldFN0cmluZ1JlZiBleHBvcnQgb2YK
S2FzcGVyc2t5IExhYuKAmXMgYW50aS12aXJ1cyBkcml2ZXIga2xmbHQuc3lzLiBUaGUgaW50ZXJj
ZXB0ZWQgZnVuY3Rpb25zIGFyZSBwcmVjZWRlZCBieQptYWxpY2lvdXMgY29kZSB0aGF0IGltcGVy
c29uYXRlcyB0aGUgb3RoZXIgbWFsaWNpb3VzIG1vZHVsZXMgYXMgY29taW5nIGZyb20gdGhlCnBy
b2Nlc3MvZmlsZSDigJxhdnAuZXhl4oCdICh1c2luZyB0aGUgYWN0dWFsIGxvY2F0aW9uIG9mIHRo
ZSBhbnRpLXZpcnVzIGNvbXBvbmVudCksIHRodXMKZXZhZGluZyBtb25pdG9yaW5nIGJ5IHRoZSBh
bnRpLXZpcnVzIHNvZnR3YXJlLgpEdXJpbmcgdGVzdGluZywgdGhlIHplcm8tZGF5IGV4cGxvaXQg
d29ya2VkIG9uIGFsbCBjb250ZW1wb3JhcnkgV2luZG93cyB2ZXJzaW9ucyAoWFAsClZpc3RhLCA3
LCA4LCA4LjEgYm90aCAzMi1iaXQgYW5kIDY0LWJpdCkuIFRoaXMgdnVsbmVyYWJpbGl0eSBoYXMg
YmVlbiBwYXRjaGVkIGJ5IE1pY3Jvc29mdApvbiBKdW5lIDksIDIwMTUu4oCdCgpQYXlsb2FkIENv
bnRhaW5lcnMgYW5kIE1pZ3JhdGlvbgpUaGUgbW9kdWxlIHN1cHBvcnRzIGEgbnVtYmVyIGZvciBk
aWZmZXJlbnQgcGF5bG9hZHMgcHJvdmlkZWQgaW4gdGhlIGZvcm0gb2YgY29udGFpbmVycwpmb2xs
b3dpbmcga2xpZi5kbGwgaW4gbWVtb3J5IChsb2NhdGVkIGluIFBFIG92ZXJsYXkpLgpBIHBheWxv
YWQgY29udGFpbmVyIGNvbnRhaW5zIGEgc2hvcnQgaGVhZGVyIGRlc2NyaWJpbmcgdGFyZ2V0IENQ
VSBhcmNoaXRlY3R1cmUsIHBheWxvYWQKdHlwZSBhbmQgdGFyZ2V0IHByb2Nlc3MgbmFtZSBvciBo
YXNoLiBXaGVuIHRoZSBtb2R1bGUgdXNlcyBzb21lIGVtYmVkZGVkIGNvZGUgb3IKZmlsZSB0aGVy
ZSBpcyBub3JtYWxseSBhdCBsZWFzdCB0d28gdmFyaWFudHMgb2YgY29kZSBidW5kbGVkIGluc2lk
ZTogMzIgYW5kIDY0LWJpdC4KRWFjaCBwYXlsb2FkIHJ1biB0eXBlIGlzIGlkZW50aWZpZWQgYnkg
YSBzaW5nbGUgY2hhcmFjdGVyLiBDdXJyZW50IG1vZHVsZSBzdXBwb3J0cwp0aGUgZm9sbG93aW5n
IDUgcGF5bG9hZCBydW4gdHlwZXM6IGcsIGksIGssIGwsIHEuIFNlZW1zIGxpa2UgdGhlIGRldmVs
b3BlciB1c2VkIG9yZGVyZWQKYWxwaGFiZXQgY2hhcmFjdGVycywgd2hpY2ggbWVhbnMgdGhhdCB0
aGVyZSBjb3VsZCBiZSBvdGhlciBwYXlsb2FkIHJ1biB0eXBlcyB3aGljaAp3ZXJlIHJlbW92ZWQg
ZnJvbSB0aGUgY29kZSBhdCBzb21lIHRpbWUuIEN1cnJlbnRseSB0aGUgY29udGFpbmVyIGxvY2F0
ZWQgaW4gdGhlCm92ZXJsYXkgb2Ygc3ViamVjdCBleGVjdXRhYmxlIGNvbnRhaW5zIGEg4oCcbOKA
nSBjaGFyYWN0ZXIgYXMgYSBwYXlsb2FkIHJ1biB0eXBlLCBzbyBsZXRzCmRlc2NyaWJlIGl0IGZp
cnN0LgoKUGF5bG9hZCB0eXBlIOKAnEzigJ0KRmlyc3QsIHRoZSBjb2RlIGxvb2tzIGZvciBwcml2
aWxlZ2VzIGZyb20gb3RoZXIgcHJvY2Vzc2VzLiBUaGUgcHJvY2VzcyBoYW5kbGUgY2FuIGJlCmhh
cmRjb2RlZCBvciBvYnRhaW5lZCBieSBsb29raW5nIGZvciBjdXJyZW50bHkgcnVubmluZyBwcm9j
ZXNzZXMsIGhhc2hpbmcgdGhlaXIgbmFtZXMKYW5kIGNvbXBhcmluZyB0aGVtIHRvIG9uZSBvZiBr
bm93biBoYXNoZXMuIFRoZSBtb2R1bGUgaW5jbHVkZXMgdGhlIGZvbGxvd2luZwpoYXJkY29kZWQg
cHJvY2VzcyBoYXNoZXM6CjB4MzEyODMzMTQgKHNlcnZpY2VzLmV4ZSksIDB4MTAyNkQxQkEgKGxz
YXNzLmV4ZSksIDB4M0JEMjQ5OEMgKHN2Y2hvc3QuZXhlKS4KSWYgYW55IG9mIHRoZSByZWNvZ25p
emVkIHByb2Nlc3NlcyBhcmUgZm91bmQsIHRoZSBtb2R1bGUgb3BlbnMgcHJvY2VzcyB0b2tlbiBh
bmQKdmVyaWZpZXMgdGhhdCB0aGUgZm9sbG93aW5nIHByaXZpbGVnZXMgYXJlIGF2YWlsYWJsZToK
4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkKClNlRGVidWdQcml2aWxlZ2UKU2VUY2JQcml2
aWxlZ2UKU2VBc3NpZ25QcmltYXJ5VG9rZW5Qcml2aWxlZ2UKU2VJbmNyZWFzZVF1b3RhUHJpdmls
ZWdlClNlSW1wZXJzb25hdGVQcml2aWxlZ2UKU2VSZXN0b3JlUHJpdmlsZWdlCgpJZiB0aGV5IGFy
ZSBhdmFpbGFibGUgdGhlIG1vZHVsZSBkdXBsaWNhdGVzIHByb2Nlc3MgdG9rZW4gYW5kIHNhdmVz
IGl0IGludG8gYW4gaW50ZXJuYWwKc3RydWN0dXJlIGZvciBmdXR1cmUgdXNlLgpGb3IgYW55IGlu
cXVpcmllcywgcGxlYXNlIGNvbnRhY3QgaW50ZWxyZXBvcnRzQGthc3BlcnNreS5jb20KCgwxNgoK
VGhlIER1cXUgMi4wClRlY2huaWNhbCBEZXRhaWxzCgpUaGUgbW9kdWxlIGxvb2tzIGZvciBvbmUg
b2YgdGhlIGF2YWlsYWJsZSBzZWN1cml0eSBzdWl0ZXMgaW5zdGFsbGVkIGluIGN1cnJlbnQgc3lz
dGVtIGFuZApzb21lIGdlbmVyaWMgcHJvY2Vzc2VzIGlmIG5vdGhpbmcgd2FzIGZvdW5kLiBJdCBh
dHRlbXB0cyB0byBmaW5kIGV4ZWN1dGFibGUgZmlsZXMgb2YgdGhlCmZvbGxvd2luZyBzb2Z0d2Fy
ZToK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJ
CuKAogkK4oCiCQoKTW9yZSB0aGFuIDIwIGRpZmZlcmVudCBLYXNwZXJza3kgTGFiIHByb2R1Y3Rz
Ck1jQWZlZSBWU0NvcmUsIFN5c3RlbUNvcmUsIEhJUApTeW1hbnRlYyBJbnRlcm5ldCBTZWN1cml0
eQpCaXRkZWZlbmRlcgpFU0VUCkgrQkVEVgpUcmVuZE1pY3JvIE5ldHdvcmsgU2VjdXJpdHkgQ29t
cG9uZW50ClJpc2luZyBBVgpBdmFzdApBVkcgMjAxMi8yMDEzLzIwMTQvMjAxNQpGLVNlY3VyZQpR
aWhvbyAzNjAgU2VjdXJpdHkKR2VuZXJpYyBXaW5kb3dzIFByb2Nlc3NlczoKb28gJVByb2dyYW1G
aWxlcyh4ODYpJVxXaW5kb3dzIERlZmVuZGVyXE1zTXBFbmcuZXhlCm9vICVTeXN0ZW1Sb290JVxz
eXN3b3c2NFxzdmNob3N0LmV4ZQpvbyAlU3lzdGVtUm9vdCVcc3lzdGVtMzJcbHNhc3MuZXhlCm9v
ICVTeXN0ZW1Sb290JVxzeXN0ZW0zMlxzdmNob3N0LmV4ZQoKV2hlbiBzdWNoIGFuIGV4ZWN1dGFi
bGUgaXMgZm91bmQgYW5kIGV2ZW50dWFsbHkgaXQgc2hvdWxkIChhdCBsZWFzdCBzdmNob3N0IG9y
IGxzYXNzLgpleGUgc2hvdWxkIGJlIHByZXNlbnQpLCBpdCBydW5zIGEgbmV3IHByb2Nlc3MgZnJv
bSBkaXNjb3ZlcmVkIGxvY2F0aW9uIGFuZCByZXBsYWNlcwppdHMgZXhlY3V0YWJsZSBjb2RlIHdp
dGggb3duIGVtYmVkZGVkIGludG8gY3VycmVudCBleGVjdXRhYmxlIGluIGVuY3J5cHRlZCBhbmQK
Y29tcHJlc3NlZCBmb3JtLgpJZiB0aGUgY29kZSBtYW5hZ2VzIHRvIGZpbmQgYSBzZWN1cml0eSB0
b2tlbiBmcm9tIG9uZSBvZiB0aGUgcHJvY2Vzc2VzIHdpdGggcmVxdWlyZWQKc2VjdXJpdHkgcHJp
dmlsZWdlcywgaXQgd2lsbCB0cnkgdG8gdXNlIHRoaXMgdG9rZW4gd2hlbiBjcmVhdGluZyBhIG5l
dyBwcm9jZXNzIHVzaW5nCkNyZWF0ZVByb2Nlc3NBc1VzZXIgQVBJLiBPdGhlcndpc2UgaXQgc2lt
cGx5IHNwYXducyBuZXcgcHJvY2VzcyBpbnN0YW5jZS4KVGhlIG5ldyBwcm9jZXNzIGlzIHN0YXJ0
ZWQgaW4gc3VzcGVuZGVkIGFuZCBkZWJ1Z2dlZCBzdGF0ZS4gSnVzdCBiZWZvcmUgc3RhcnRpbmcg
dGhlCm5ldyBwcm9jZXNzIGl0IGRpc2FibGVzIERFUCBmb3IgdGhlIGNoaWxkIHByb2Nlc3NlcyB0
byBzaW1wbGlmeSBjb2RlIGluamVjdGlvbiBhbmQgZGF0YQptYW5pcHVsYXRpb24uIFNvIGZhciwg
ZnJvbSB0aGUgb3V0c2lkZSwgaXQgbWF5IGxvb2sgbGlrZSBhIHNlY3VyaXR5IHNvZnR3YXJlIHdh
cyBzdGFydGVkLAp3aGlsZSBmcm9tIHRoZSBpbnNpZGUgaXRzIGNvZGUgaXMgY29tcGxldGVseSBk
aWZmZXJlbnQgZnJvbSBsZWdpdGltYXRlIG1vZHVsZS4KClBheWxvYWQgcnVuIHR5cGUg4oCcR+KA
nQpUaGlzIHBheWxvYWQgaXMgYWxtb3N0IGlkZW50aWNhbCB0byBwYXlsb2FkIEwgZGVzY3JpYmVk
IGFib3ZlLCBidXQgdGhlIGxvYWRlciBpcyBzaW1wbGVyCi0gaXQgc2tpcHMgaGlqYWNraW5nIG9m
IHByaXZpbGVnZWQgdG9rZW4uIENvZGUgaW5qZWN0aW9uIHRhcmdldCBpcyBzZWxlY3RlZCBhdXRv
bWF0aWNhbGx5CmRlcGVuZGluZyBvbiB0aGUgYXZhaWxhYmlsaXR5IG9mIGtub3duIHByb2Nlc3Nl
cy4KClBheWxvYWQgcnVuIHR5cGUg4oCcSeKAnQpUaGlzIHBheWxvYWQgaXMgc2ltaWxhciB0byBw
YXlsb2FkIEcsIGJ1dCBtYWtlcyB0aGUgbG9hZGVyIHBhcnNlIHBheWxvYWQgaGVhZGVyIGEgYml0
CmRpZmZlcmVudGx5OiBpbnN0ZWFkIG9mIHByb2Nlc3MgbmFtZSBzdHJpbmcgaXQgdGFrZXMgb25s
eSA0IGJ5dGVzLCB3aGljaCBhcmUgc3VwcG9zZWRseQp1c2VkIGFzIGEgcHJvY2VzcyBoYXNoLiBU
aGlzIHNlZW1zIHRvIGJlIGEgd2F5IHRvIGhpZGUgdGFyZ2V0IHByb2Nlc3MgbmFtZSBhbmQKdXNl
IG9ubHkgaGFzaCwgaG93ZXZlciB0aGlzIGhhc27igJl0IGJlZW4gaW1wbGVtZW50ZWQgY29tcGxl
dGVseSBpbiB0aGUgbW9kdWxlIHdlCmFuYWx5emVkLgpGb3IgYW55IGlucXVpcmllcywgcGxlYXNl
IGNvbnRhY3QgaW50ZWxyZXBvcnRzQGthc3BlcnNreS5jb20KCgwxNwoKVGhlIER1cXUgMi4wClRl
Y2huaWNhbCBEZXRhaWxzCgpQYXlsb2FkIHJ1biB0eXBlIOKAnEvigJ0KVGhpcyBwYXlsb2FkIGlz
IGRlc2lnbmVkIHRvIHJ1biB3aXRoaW4gdGhlIGNvbnRleHQgb2YgdGhlIGN1cnJlbnQgcHJvY2Vz
cy4gVGhlIGNvZGUKc2ltcGx5IGNvcGllcyB0aGUgY29kZSB0byBiZSBleGVjdXRlZCBpbnRvIHNl
cGFyYXRlIG1lbW9yeSBhbmQgcnVucyBpdCBpbiBhIGRlZGljYXRlZAp0aHJlYWQuIEl0IGJsb2Nr
cyB1bnRpbCB0aHJlYWQgZmluaXNoZXMgaXRzIGV4ZWN1dGlvbi4KClBheWxvYWQgcnVuIHR5cGUg
4oCcUeKAnQpUaGlzIHBheWxvYWQgaXMgaWRlbnRpY2FsIHRvIHBheWxvYWQgSyBkZXNjcmliZWQg
YWJvdmUgYnV0IGl0IGRvZXNu4oCZdCBibG9jayBleGVjdXRpb24Kd2hlbiBhIG5ldyB0aHJlYWQg
aXMgc3RhcnRlZC4gU28gZmFyLCB0aGUgbmV3IGNvZGUgcnVucyBhc3luY2hyb25vdXNseS4KQWZ0
ZXIgdGhlIHBheWxvYWQgY29udGFpbmVyIGlzIG9wZW5lZCBhbmQgY29kZSBtaWdyYXRlZCB0byBh
bm90aGVyIHByb2Nlc3MsIHdoaWNoIGNhbgpiZSBlbGV2YXRlZCBhbmQgcHJvdGVjdGVkIGZyb20g
c2VjdXJpdHkgc29mdHdhcmUsIHRoZSByZWFsIG1hbGljaW91cyBjb2RlIGlzIGFjdGl2YXRlZC4K
SW4gbW9zdCBjYXNlcywgaXQgaXMgc2ltcGxlIG5hbWVkIHBpcGUgYmFzZWQgYmFja2Rvb3IgdGhh
dCBsaXN0ZW5zIGZvciBpbmNvbWluZwpjb21tdW5pY2F0aW9ucyBmcm9tIHRoZSBvcmNoZXN0cmF0
b3IuIEluIHJhcmUgY2FzZXMsIG9uIHNlbGVjdGVkIG1hY2hpbmVzLCBpdCBjYW4gYmUKaGVhdnkg
b3JjaGVzdHJhdG9yIG1vZHVsZSB0aGF0IGNvbW11bmljYXRlcyB3aXRoIGNvbW1hbmQgYW5kIGNv
bnRyb2wgc2VydmVyLCB3b3JrcwphcyBhIGJpZGlyZWN0aW9uYWwgcHJveHkgYW5kIGNvbWVzIHdp
dGggYSBsYXJnZSBidW5kbGUgb2Ygc2Vjb25kYXJ5IHBsdWdpbnMuCgpQbGF0Zm9ybSBwbHVnZ2lu
YWJsZSBtb2R1bGVzCkluIGFkZGl0aW9uIHRvIHRoZSBiYXNpYyByZW1vdGUgYmFja2Rvb3IsIHRo
ZSBhdHRhY2tlcnMgZGVwbG95IG1vcmUgc29waGlzdGljYXRlZApwYWNrYWdlcyB0byBkb21haW4g
Y29udHJvbGxlcnMgYW5kIHRvIHRoZSB2aWN0aW1zIG9mIGludGVyZXN0IGluc2lkZSB0aGUgTEFO
LiBUaGVzZSBNU0kKcGFja2FnZXMgY2FuIGNvbnRhaW4gdGVucyBvZiBkaWZmZXJlbnQgbW9kdWxl
cyBkZXNpZ25lZCBmb3IgdmFyaW91cyBjeWJlcmVzcGlvbmFnZQpmdW5jdGlvbnMuClRoZSBmdWxs
eSBmZWF0dXJlZCBwYWNrYWdlcyBhcmUgbXVjaCBsYXJnZXIgdGhhbiB0aGUgYmFzaWMgcmVtb3Rl
IGJhY2tkb29yIOKAkyAxOE1CCnZzIDUwMEtCLiBUaGV5IGZvbGxvdyB0aGUgc2FtZSBzdHJ1Y3R1
cmUsIHdpdGggQWN0aW9uRGxsIGFuZCB0aGUgbG9hZGVyIG1lY2hhbmlzbSwKZXhjZXB0IHRoZXkg
Y29udGFpbiBhIGxvdCBtb3JlIHBsdWdpbnMgdG8gbG9hZCBhbmQgcnVuLgpEdXJpbmcgb3VyIGFu
YWx5c2lzLCB3ZSBpZGVudGlmaWVkIG1vcmUgdGhhbiAxMDAgdmFyaWFudHMgb2Ygc3VjaCBwbHVn
aW5zLgpBIGRlc2NyaXB0aW9uIG9mIHRoZXNlIHBsdWdpbnMgZm9sbG93cy4gVG8gc2VwYXJhdGUg
dGhlbSwgd2UgdXNlZCBhIHZpcnR1YWwgaWRlbnRpZmllcgpiYXNlZCBvbiB0aGUgZmlyc3QgdHdv
IGJ5dGVzIG9mIHRoZWlyIE1ENSBzdW0uCjAzQjcg4oCTIFRoZSBtYWluIG1vZHVsZSBvZiBEdXF1
IDIuMCwgb3JjaGVzdHJhdG9yLgpJbXBsZW1lbnRzIG11bHRpcGxlIHByb3RvY29sIGhhbmRsZXJz
IGZvciBDJkMgY29tbXVuaWNhdGlvbiwgY2FuIHN0YXJ0IGFuCmludGVybWVkaWF0ZSBDJkMgcHJv
eHkgc2VydmVyIHdpdGggYSBzZWxmLXNpZ25lZCBIVFRQUyBjZXJ0aWZpY2F0ZS4gU3RhcnRzIHRo
ZSBwbHVnaW4KZnJhbWV3b3JrLCBsb2FkcyBhbmQgbWFuYWdlcyBhbGwgYWRkaXRpb25hbCBwbHVn
aW5zLgpJdCB3b3JrcyB2aWEgSFRUUCwgSFRUUFMsIFNNQiBuZXR3b3JrIHBpcGVzIG9yIGRpcmVj
dCBUQ1AgY29ubmVjdGlvbiB1c2luZyBhIGN1c3RvbSwKZW5jcnlwdGVkIHByb3RvY29sLiBJbnRl
cmFjdGlvbiB2aWEgSFRUUCBpcyBjb25jZWFsZWQgaW4gSlBFRyBvciBHSUYgZmlsZXMsIHNpbWls
YXIgdG8gdGhlCjIwMTEgdmVyc2lvbiBvZiBEdXF1LiBSZXF1ZXN0IG5hbWVzLCBVUkxzIGFuZCBV
c2VyLUFnZW50IHN0cmluZ3MgbWF5IHZhcnkgYmV0d2VlbgphdHRhY2tzLgpBZGRpdGlvbmFsIGtu
b3duIHZhcmlhbnRzOiAzMDI2LCA0RjExLgowNjgyIOKAkyBDb2xsZWN0cyBiYXNpYyBzeXN0ZW0g
aW5mb3JtYXRpb246CuKAogkK4oCiCQoKTGlzdCBvZiBydW5uaW5nIHByb2Nlc3NlcwpBY3RpdmUg
ZGVza3RvcCBhbmQgdGVybWluYWwgc2Vzc2lvbnMKCkZvciBhbnkgaW5xdWlyaWVzLCBwbGVhc2Ug
Y29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoKDDE4CgpUaGUgRHVxdSAyLjAKVGVj
aG5pY2FsIERldGFpbHMKCkNvbGxlY3RlZCBpbmZvcm1hdGlvbiBpcyB0aGVuIHRyYW5zbWl0dGVk
IHRvIGEgbmFtZWQgcGlwZSBwcm92aWRlZCBieSB0aGUgY2FsbGVyLgpBZGRpdGlvbmFsIGtub3du
IHZhcmlhbnRzOiBDMEI3CjA3M0Mg4oCTIEltcGxlbWVudHMgYSBjb21wbGV0ZSBXaW5kb3dzIHNv
Y2tldC1iYXNlZCB0cmFuc3BvcnQsIGJvdGggY2xpZW50IGFuZApzZXJ2ZXIgc2lkZS4gUHJvdmlk
ZXMgYSBjbGFzcyBmYWN0b3J5IGZvciB0aGUgY2xhc3MgdGhhdCBlbmNhcHN1bGF0ZXMgdmFyaW91
cyBuZXR3b3JraW5nCmZ1bmN0aW9ucy4KMDg3MiDigJMgTVNJIEN1c3RvbUFjdGlvbiBsaWJyYXJ5
IHRoYXQgaXMgYWN0aXZhdGVkIHdoZW4gdGhlIG1hbGljaW91cyBpbnN0YWxsZXIgcGFja2FnZQpp
cyBzdGFydGVkIGJ5IHRoZSBXaW5kb3dzIEluc3RhbGxlci4gTG9hZHMgdGhlIGVuY3J5cHRlZCBi
aW5hcnkgYmxvYiB0aGF0IGNvbnRhaW5zIGFjdHVhbAptYWxpY2lvdXMgcGF5bG9hZCwgZGVjcnlw
dHMgYW5kIHRoZW4gZXhlY3V0ZXMgaXQgaW4gbWVtb3J5LgpUaGUgbmFtZXMgaW4gdmVyc2lvbiBp
bmZvcm1hdGlvbiB2YXJ5OiBzdmNtc2lfMzIuZGxsLCBtc2kzXzMyLmRsbCwgTVNJLmRsbCwgbXNp
NF8zMi5kbGwuCkVuY3J5cHRpb24gYWxnb3JpdGhtcyBhbHNvIHZhcnk6IENhbWVsbGlhIDI1Niwg
QUVTLCBYWFRFQS4KVGhlIGRlY3J5cHRpb24ga2V5IGlzIGV4dHJhY3RlZCBmcm9tIGFuIE1TSSBw
YXJhbWV0ZXIsIHBvc3NpYmxlIG5hbWVzOiBQUk9QLApIQVNIVkEsIENLRVkuClRoZSBlbmNyeXB0
ZWQgYmxvYiBpcyBzZWFyY2hlZCBieSBwcmVmaXhlcyAoY2FuIHZhcnkpOiBBY3Rpb25EYXRhLCBD
cnlwdEhhc2hzLCBDQURhdGEuCkJvdGggMzItYml0IGFuZCA2NC1iaXQgdmVyc2lvbnMgYXJlIGtu
b3duLiBBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiA4RDdDLCAxNkVGLCBFNkU1LAo0MzRDLCA0
NEJELCBGNzA4LgowOUEwIOKAkyA2NC1iaXQsIEV4ZmlsdHJhdGVzIGZpbGUgY29udGVudHMsIHBh
cnRpY3VsYXJseSBzZWFyY2hpbmcgZm9yIGZpbGVzIG1hdGNoaW5nIHRoZXNlCnJ1bGVzOgrigKIJ
CuKAogkK4oCiCQoKKi5pbnVzZSwgKi5obWwKZmlsZW5hbWUgY29udGFpbnMg4oCcZGF0YS5obWni
gJ0gb3Ig4oCcdmFsLmRhdOKAnQpmaWxlcyBmcm9tIHRoZSAvSW50L0hNSS8gb3IgL0xHL0hNLyBm
b2xkZXJzLgoKRmlsZSBhbmQgZGlyZWN0b3J5IG5hbWVzIG9mIGludGVyZXN0IGZvciB0aGUgMDlB
MCBwbHVnaW4uCgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiA4ODU4CjBBQjgg4oCTIFByb3Zp
ZGVzIDI1IGZ1bmN0aW9ucyBmb3IgbWFuaXB1bGF0aW5nIGZpbGVzIGFuZCBkaXJlY3RvcmllczoK
4oCiCQrigKIJCuKAogkKCkxpc3QgZmlsZXMgaW4gZGlyZWN0b3JpZXMKVXBsb2FkIGFuZCBkb3du
bG9hZCBhcmJpdHJhcnkgZmlsZXMKUmVhZC93cml0ZSBmaWxlIGNvbnRlbnRzCgpGb3IgYW55IGlu
cXVpcmllcywgcGxlYXNlIGNvbnRhY3QgaW50ZWxyZXBvcnRzQGthc3BlcnNreS5jb20KCgwxOQoK
VGhlIER1cXUgMi4wClRlY2huaWNhbCBEZXRhaWxzCgpJbiBzZXZlcmFsIGNhc2VzLCB0aGUgbW9k
dWxlcyBhcmUgbG9va2luZyBzcGVjaWZpY2FsbHkgZm9yIGRpcmVjdG9yaWVzIG5hbWVkIOKAnFxp
bnTigJ0sIOKAnFxsZ+KAnSwg4oCcXApvZlxtZOKAnSwg4oCcXHRs4oCdLCDigJxcYWvigJ0gYW5k
IGZpbGVzIHdpdGggZXh0ZW5zaW9ucyDigJwucGFydOKAnSwg4oCcLm1hbnVhbOKAnSwg4oCcLmlu
dXNl4oCdLgoKRmlsZSBhbmQgZGlyZWN0b3J5IG5hbWVzIG9mIGludGVyZXN0IGZvciB0aGUgMEFC
OCBwbHVnaW4uCgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiBBNjlFLgowQjk3IOKAkyBOZXR3
b3JrIHRyYW5zcG9ydC4gSW1wbGVtZW50cyBBUEkgZm9yIGNvbm5lY3Rpbmcgc29ja2V0cyBhbmQg
cGlwZXMgcHJvdmlkZWQKYnkgdGhlIGNhbGxlci4gQWRkaXRpb25hbCB2YXJpYW50OiA1NkEyLgox
NTJCIOKAkyBOZXR3b3JrIGFuZCBkb21haW4gZGlzY292ZXJ5LgrigKIJCuKAogkK4oCiCQoKRW51
bWVyYXRlcyBhbGwgc2VydmVycyBpbiB0aGUgZG9tYWluClRyaWVzIHRvIGNvbm5lY3QgdG8gcmVt
b3RlIHJlZ2lzdHJpZXMgYW5kIGVudW1lcmF0ZSBhbGwgdXNlcnMgaW4g4oCcSEtFWV9VU0VSU+KA
nS4KVXNlcm5hbWVzIGFyZSB0aGVuIGNvbnZlcnRlZCB0byBTSURzCkVudW1lcmF0ZXMgYWxsIHZp
c2libGUgbmV0d29yayBzaGFyZXMKCkFkZGl0aW9uYWwga25vd24gdmFyaWFudHM6IEE5ODcKMUM3
MSDigJMgSW4tbWVtb3J5IHN0b3JhZ2UuIFJlY2VpdmVzIGFuZCBzdG9yZXMgc3RyaW5nIGRhdGEg
aW4gZmlsZSBtYXBwaW5ncy4KMjEyNSDigJMgTmV0d29yayBpbmZlY3Rpb24gbW9kdWxlLiBUcmll
cyB0byBhY3F1aXJlIGFkbWluaXN0cmF0aXZlIGNyZWRlbnRpYWxzIGZyb20gdGhlCnJ1bm5pbmcg
cHJvY2Vzc2VzIGFuZCB0aGVuIGNvbm5lY3QgdG8gYSB0YXJnZXQgbWFjaGluZSB1c2luZyBXaW5k
b3dzIHNoYXJlcy4gVGhlCm1hY2hpbmUgaXMgaW5mZWN0ZWQgd2l0aCBhIG1hbGljaW91cyBETEwg
YmFja2Rvb3IsIHRoZSB0YXJnZXQgZGlyZWN0b3J5IHZhcmllcyBhbmQgbWF5CmJlIGluIFVQRFJP
T1QkLCBBRE1JTiQgb3IgQyQuIFVzZXMgY3VzdG9tIFNNQiBwYWNrZXRzIHRvIGlkZW50aWZ5IHRo
ZSB0YXJnZXQgT1MKdmVyc2lvbi4gVGhlIHRhcmdldCBtYWxpY2lvdXMgRExMIGlzIHRoZW4gc3Rh
cnRlZCB1c2luZyBhIG5ldyBzZXJ2aWNlIGNyZWF0ZWQgd2l0aCBhIG5hbWUK4oCcc3ZjbXNpXzMy
QOKAnS4gVGhlIG1vZHVsZSBjb21tdW5pY2F0ZXMgd2l0aCB0aGUgdGFyZ2V0IGJhY2tkb29yIHZp
YSBXaW5kb3dzIHBpcGVzLgpBZGRpdGlvbmFsIHZhcmlhbnQ6IERCNjUuIEluc3RlYWQgb2YgdGhl
IG1hbGljaW91cyBETEwsIGl0IHVwbG9hZHMgYSBuZXcgTVNJIHBhY2thZ2UgYW5kCnRoZW4gcmVs
aWVzIG9uIE1TSUVYRUMuRVhFIHRvIHN0YXJ0IHRoZSBNU0kgdmlhIGEgbmV3bHkgY3JlYXRlZCBz
ZXJ2aWNlIG5hbWVkCuKAnG1zaXN2Y18zMkDigJ0sIHRoZSB0YXJnZXQgTVNJIG5hbWUgaXMgZ2Vu
ZXJhdGVkIHJhbmRvbWx5IHVzaW5nIGEgdGVtcGxhdGUg4oCcdG1wJXguCnRtcOKAnS4KCkV4YW1w
bGUgb2YgYSBXaW5kb3dzIGV2ZW50IGxvZyAoU3lzdGVtKSBlbnRyeSBjcmVhdGVkCmF0IHRoZSBt
b21lbnQgb2YgaW5mZWN0aW9uLgoKQWRtaW5pc3RyYXRpdmUgY3JlZGVudGlhbHMgYXJlIGFjcXVp
cmVkIGJ5IHN0ZWFsaW5nIGEgdG9rZW4gZnJvbSBhbnkgcnVubmluZyBwcm9jZXNzIHRoYXQKd2Fz
IHN0YXJ0ZWQgYnkgYSBsb2dnZWQgb24gdXNlciBoYXZpbmcgZG9tYWluIGFkbWluaXN0cmF0b3Li
gJlzIHJpZ2h0cy4gRm9yIHRoYXQsIGl0IGZpcnN0CkZvciBhbnkgaW5xdWlyaWVzLCBwbGVhc2Ug
Y29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoKDDIwCgpUaGUgRHVxdSAyLjAKVGVj
aG5pY2FsIERldGFpbHMKCnF1ZXJpZXMgZm9yIHRoZSBmaXJzdCAxMDAgYWRtaW5pc3RyYXRpdmUg
dXNlcm5hbWVzIGluIHRoZSBjdXJyZW50IGRvbWFpbiBkaXJlY3RseSBmcm9tIHRoZQpkb21haW4g
Y29udHJvbGxlci4KClJlbW90ZSBsb2NhdGlvbnMgdXNlZCBieSB0aGUgbmV0d29yayBpbmZlY3Rp
b24gbW9kdWxlLgoKMjRCNyDigJMgUmVtb3RlIGRlc2t0b3AgYWRtaW5pc3RyYXRpb24uIEFjcXVp
cmVzIHRoZSBzY3JlZW5zaG90cyBvZiB0aGUgZGVza3RvcCBidXQKYWxzbyBjYW4gc2VuZCBpbnB1
dCB0byB0aGUgZGVza3RvcCwgbW92ZSB0aGUgbW91c2UgY3Vyc29yLiBCb3RoIDMyLWJpdCBhbmQg
NjQtYml0CnZhcmlhbnRzIGV4aXN0LiBBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiA2NUJFLCA3
Nzk1LCBCREM4LCBERUUyCjI2RDYg4oCTIERldGVjdHMgcnVubmluZyBuZXR3b3JrIHNuaWZmZXJz
ICh3aXJlc2hhcmssIHRjcHZpZXcsIG5ldHN0YXQsIGR1bXBjYXAsCnBlcmZtb24pOyBpbXBsZW1l
bnRzIGEgVENQIHNlcnZlciBhbmQgY29tbXVuaWNhdGVzIHZpYSBuZXR3b3JrIHBpcGVzLiBJbnRl
cm5hbApuYW1lOiDigJxQLmRsbOKAnS4KMjgyOSDigJMgQ29sbGVjdHMgc3lzdGVtIGluZm9ybWF0
aW9uCuKAogkK4oCiCQrigKIJCuKAogkKCk1vbml0b3JzIFVTQiBkZXZpY2UgYXR0YWNobWVudApD
b2xsZWN0cyBVU0IgZHJpdmUgaGlzdG9yeQpFbnVtZXJhdGVzIG5ldHdvcmsgc2hhcmVzLCB3aW5k
b3dzIGNhcHRpb25zLCBzeXN0ZW0gcm91dGluZyB0YWJsZXMKUmVhZHMvd3JpdGVzIGVuY3J5cHRl
ZCBmaWxlcwoKMjkxMyAtIFdNSSBkYXRhIGNvbGxlY3Rpb24K4oCiCQrigKIJCuKAogkK4oCiCQoK
RW51bWVyYXRlIHByb2ZpbGVzIHdpdGggU0lEcwpGb3IgZWFjaCBwcm9maWxlLCBleHRyYWN0cyBp
bmZvcm1hdGlvbiBmcm9tIGxuayBmaWxlcyBpbiB0aGUgcHJvZmlsZSBkaXJlY3RvcnkKRW51bWVy
YXRlIHByb2Nlc3NlcyB2aWEgV01JIChDSU1WMiksIGluY2x1ZGluZyB0ZXJtaW5hdGVkIHByb2Nl
c3NlcwpFeHRyYWN0cyB1c2VyIGluZm9ybWF0aW9uIGZyb20gYXZhaWxhYmxlIHJlbW90ZSByZWdp
c3RyaWVzCgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnQ6IEM3NzYKMjlENCAtIFNlcnZpY2UgbXNp
c3ZjXzMyQDsgRExMIGJhY2tkb29yIHRoYXQgaXMgdXNlZCBmb3IgbmV0d29yayBpbmZlY3Rpb24g
YnkKbW9kdWxlIDIxMjUuIEFjY2VwdHMgY29tbWFuZHMgdmlhIG5hbWVkIHBpcGUg4oCcR2xvYmFs
XHtCNTRFMzI2OC1ERTFFLTRjMWUtQTY2NzI1OTY3NTE0MDNBRH3igJ0uIEJvdGggMzItYml0IGFu
ZCA2NC1iaXQgdmFyaWFudHMgZXhpc3RzLgpGb3IgYW55IGlucXVpcmllcywgcGxlYXNlIGNvbnRh
Y3QgaW50ZWxyZXBvcnRzQGthc3BlcnNreS5jb20KCgwyMQoKVGhlIER1cXUgMi4wClRlY2huaWNh
bCBEZXRhaWxzCgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiA2RjkyLCBBNTA1LCBEMjQyCjJC
NDYg4oCTIEV4dGVuc2l2ZSBjb2xsZWN0aW9uIG9mIHN5c3RlbSBhbmQgdXNlciBpbmZvcm1hdGlv
bgrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK
4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKA
ogkK4oCiCQoKRG9tYWluIGNvbnRyb2xsZXLigJlzIG5hbWUKTGlzdCBvZiB1c2VycyBpbiB0aGUg
ZG9tYWluCkFkbWluaXN0cmF0b3JzIG9mIHRoZSBkb21haW4KRW51bWVyYXRlcyBkb21haW4gdHJ1
c3RzClRDUCB0YWJsZXMKVURQIHRhYmxlcwpTTk1QIGRpc2NvdmVyeSAoT1MsIHBhcnNlIGFsbCBy
ZXBsaWVzKQpVU0IgZHJpdmUgaGlzdG9yeSwgbW91bnRlZCBkZXZpY2VzCkluc3RhbGxlZCBwcm9n
cmFtcwpUaW1lIHpvbmUKT1MgaW5zdGFsbCBkYXRlCk9EQkMuaW5pLCBTUUwgU2VydmVyIGluc3Rh
bmNlIGluZm8sIE9yYWNsZSBBTExfSE9NRVMsIFN5QmFzZSwgREIyLCBNUyBTUUwsCk15U1FMIGxh
c3QgY29ubmVjdGlvbnMKREhDUC9yb3V0aW5nCk5ldHdvcmsgcHJvZmlsZXMKWmVybyBDb25maWcg
cGFyYW1ldGVycwpDb25uZWN0ZWQgcHJpbnRlcnMKTVJVIGxpc3QgZm9yIFdpblJBUiwgV2luWmlw
LCBPZmZpY2UsIElFIHR5cGVkIFVSTHMsIG1hcHBlZCBuZXR3b3JrIGRyaXZlcywgVmlzdWFsClN0
dWRpbyBNUlUKVGVybWluYWwgU2VydmljZSBDbGllbnQgZGVmYXVsdCB1c2VybmFtZSBoaW50ClVz
ZXIgQXNzaXN0IGhpc3RvcnkKUHVUVFkgaG9zdCBrZXlzIGFuZCBzZXNzaW9ucwpMb2dnZWQgb24g
dXNlcnMKTmV0d29yayBhZGFwdGVyIGNvbmZpZ3VyYXRpb24KVk5DIGNsaWVudHMgcGFzc3dvcmRz
ClNjYW4gdGhlIG5ldHdvcmsgYW5kIGlkZW50aWZ5IE9TIHVzaW5nIFNNQiBwYWNrZXQKClNvbWUg
b2YgdGhlIHJlZ2lzdHJ5IGxvY2F0aW9ucyBoYXJ2ZXN0ZWQgYnkgdGhlIG1vZHVsZS4KCkZvciBh
bnkgaW5xdWlyaWVzLCBwbGVhc2UgY29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoK
DDIyCgpUaGUgRHVxdSAyLjAKVGVjaG5pY2FsIERldGFpbHMKCkFkZGl0aW9uYWwga25vd24gdmFy
aWFudHM6IEE3RjgKMkJGNyAtIFV0aWxpdHkgRExMLiBQcm92aWRlcyBiYXNpYyBBUEkgZm9yIGNy
ZWF0aW5nIG5ldyBNU0kgcGFja2FnZXMsIGxvYWRpbmcgYW5kCmluamVjdGluZyBhcmJpdHJhcnkg
UEUgbW9kdWxlcy4gQWxzbyByZXNwb25zaWJsZSBmb3IgbG9hZGluZyB0aGUgZmlyc3QgbGV2ZWwg
b2YgdGhlIFZGUwppbnNpZGUgdGhlIG1hbGljaW91cyBNU0kgZmlsZXMuIEJvdGggMzItYml0IGFu
ZCA2NC1iaXQgdmVyc2lvbnMgZXhpc3QuCktub3duIG5hbWVzOiDigJxudGRsbC5kbGzigJ0sIOKA
nGtsaWYuZGxs4oCdLCDigJxhcGlzZXQuZGxs4oCdLgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRz
OiA2REExLCAzMkRCLCA4MzA0LCA5OTMxLCA5RTYwLCBBMkQ0LCBBQkE5LCBCM0JCLCBEQzVGLApE
RDMyLCBGN0JCCjMzOTUg4oCTIE1TIFNRTCBkaXNjb3ZlcnkgbW9kdWxlLiBNb2R1bGUgY2FuIHNl
bmQgQVJQIHBhY2tldHMgdG8gbmV0d29yayBhbmQKZGlzY292ZXIgTVMgU1FMIFNlcnZlciBwb3J0
cy4gQWRkaXRpb25hbCBmdW5jdGlvbnMgYXJlIHJlc3BvbnNpYmxlIGZvciBjb25uZWN0aW5nIGFu
ZApyZWFkaW5nIG9mIHJlbW90ZSByZWdpc3RyeSBjb250ZW50cy4KMzVFOSDigJMgRmlsZSBzeXN0
ZW0gZGlzY292ZXJ5LgrigKIJCuKAogkK4oCiCQoKRW51bWVyYXRlIG5ldHdvcmsgc2hhcmVzCkVu
dW1lcmF0ZSBsb2NhbCBkaXNrcwpUcmF2ZXJzZSBmaWxlcyBzeXN0ZW0gaGllcmFyY2h5IGFuZCBl
bnVtZXJhdGUgZmlsZXM7IGlkZW50aWZ5IHJlcGFyc2UgcG9pbnRzCgozRjQ1IOKAkyBQaXBlIGJh
Y2tkb29yLiBPcGVucyBhIG5ldyBnbG9iYWxseSB2aXNpYmxlIG5hbWVkIFdpbmRvd3MgcGlwZSwg
cmVjZWl2ZXMgYW5kCmV4ZWN1dGVzIGVuY3J5cHRlZCBjb21tYW5kcy4gVGhlIOKAnG1hZ2lj4oCd
IHN0cmluZyB0aGF0IGlkZW50aWZpZXMgdGhlIGVuY3J5cHRlZCBwcm90b2NvbAppcyDigJx0dHR0
dHR0dOKAnS4K4oCiCQrigKIJCgpFbnVtZXJhdGVzIHJ1bm5pbmcgcHJvY2Vzc2VzCkxvYWRzIGFu
ZCBleGVjdXRlcyBhcmJpdHJhcnkgUEUgZmlsZXMKCkJvdGggMzItYml0IGFuZCA2NC1iaXQgdmVy
c2lvbnMgZXhpc3QuCktub3duIHBpcGUgbmFtZXM6CuKAogkK4oCiCQrigKIJCgpcXC5ccGlwZVx7
QUFGRkM0RjAtRTA0Qi00QzdDLUI0MEEtQjQ1REU5NzFFODFFfSBcXC5ccGlwZVx7QUI2MTcyRUQt
ODEwNTQ5OTYtOUQyQS01OTdCNUY4Mjc1MDF9ClxcLlxwaXBlXHswNzEwODgwRi0zQTU1LTRBMkQt
QUE2Ny0xMTIzMzg0RkQ4NTl9IFxcLlxwaXBlXHs2QzUxQTREQi1FM0RFNEZFQi04NkE0LTMyRjdG
OEU3M0I5OX0KXFwuXHBpcGVcezdGOUJDRkMwLUIzNkItNDVFQy1CMzc3LUQ4ODU5N0JFNUQ3OH0s
IFxcLlxwaXBlXHs1N0QyREU5Mi1DRTE3NEE1Ny1CRkQ3LUNEM0M2RTk2NUM2QX0KCkFkZGl0aW9u
YWwga25vd24gdmFyaWFudHM6IDYzNjQsIDNGOEIsIDU5MjYsIEE5MEEsIERERjAsIEE3MTcsIEEz
NkYsIDg4MTYsIEU4NUUsIEU5MjcKCkZvciBhbnkgaW5xdWlyaWVzLCBwbGVhc2UgY29udGFjdCBp
bnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoKDDIzCgpUaGUgRHVxdSAyLjAKVGVjaG5pY2FsIERl
dGFpbHMKCjQxNjAgLSBQYXNzd29yZCBzdGVhbGVyCuKAogkK4oCiCQoKRXh0cmFjdHMgR29vZ2xl
IENocm9tZSBhbmQgRmlyZWZveCBsb2dpbiBkYXRhCkxTQSBjcmVkZW50aWFscwoKRGF0YSB1c2Vk
IHRvIGxvY2F0ZSBDaHJvbWUgc2F2ZWQgbG9naW5zLgoKQWRkaXRpb25hbCBrbm93biB2YXJpYW50
czogQjY1Ngo0MUUyIOKAkyBQYXNzd29yZCBzdGVhbGVyLiA2NC1iaXQgbW9kdWxlLiBFeHRyYWN0
czoK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkKCklFIEludGVsbGlGb3JtcyBoaXN0b3J5
ClBPUDMvSFRUUC9JTUFQIHBhc3N3b3JkcwpUaWdodFZOQywgUmVhbFZOQywgV2luVk5DMy80IHBh
c3N3b3JkcwpPdXRsb29rIHNldHRpbmdzClNBTSwgTFNBU1MgY2FjaGUKV2luZG93cyBMaXZlLCAu
TmV0IFBhc3Nwb3J0IHBhc3N3b3JkcwoKUmVmZXJlbmNlcyB0byBpbmZvcm1hdGlvbiBjb2xsZWN0
ZWQgYnkgdGhlIG1vZHVsZS4KCkFkZGl0aW9uYWwga25vd24gdmFyaWFudHM6IDk5MkUsIEFGNjgs
IEQ0OUYKNDgyRiDigJMgQ29sbGVjdHMgc3lzdGVtIGluZm9ybWF0aW9uLgrigKIJCuKAogkK4oCi
CQoKRW51bWVyYXRlcyBkaXNrIGRyaXZlcwpHZXRzIGxpc3Qgb2YgcnVubmluZyBwcm9jZXNzZXMK
RXh0ZW5zaXZlIHByb2Nlc3MgaW5mb3JtYXRpb24gaW5jbHVkaW5nIHVwdGltZQoKRm9yIGFueSBp
bnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMMjQK
ClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoK4oCiCQrigKIJCgpNZW1vcnkgaW5mb3Jt
YXRpb24KU0lEIGluZm9ybWF0aW9uCgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiBGM0Y0CjU1
OUIg4oCTIEFjdGl2ZSBEaXJlY3Rvcnkgc3VydmV5LgrigKIJCuKAogkK4oCiCQoKQ29ubmVjdHMg
dG8gdGhlIEFjdGl2ZSBEaXJlY3RvcnkgR2xvYmFsIENhdGFsb2cgKOKAnEdDOuKAnSkgdXNpbmcg
QURTSQpFbnVtZXJhdGVzIGFsbCBvYmplY3RzIGluIEFEClByZXNlbnRzIGV2ZXJ5IGVudHJ5IGlu
IGEgaHVtYW4tcmVhZGFibGUgZm9ybWF0CgpBY3RpdmUgRGlyZWN0b3J5IGVudW1lcmF0aW9uIHJv
dXRpbmUuCgo1ODBDIC0gQ29sbGVjdHMgc3lzdGVtIGFuZCBuZXR3b3JrIGluZm9ybWF0aW9uLgri
gKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCgpSZXRyaWV2ZXMgdGhlIGRvbWFpbiBj
b250cm9sbGVyIG5hbWUKRW51bWVyYXRlcyBhbGwgdXNlcnMgYW5kIGdyb3VwcyBpbiB0aGUgZG9t
YWluCkNvbGxlY3RzIFRhc2sgU2NoZWR1bGVyIGxvZ3MKQ29sbGVjdHMgZGlzayBpbmZvcm1hdGlv
biwgcmVtb3ZhYmxlIGRldmljZSBoaXN0b3J5ClJldHJpZXZlcyBmaXJld2FsbCBwb2xpY2llcwpF
bnVtZXJhdGVzIGFsbCBuYW1lZCBzeXN0ZW0gb2JqZWN0cwpFbnVtZXJhdGVzIGFsbCBzeXN0ZW0g
c2VydmljZXMKCkZvciBhbnkgaW5xdWlyaWVzLCBwbGVhc2UgY29udGFjdCBpbnRlbHJlcG9ydHNA
a2FzcGVyc2t5LmNvbQoKDDI1CgpUaGUgRHVxdSAyLjAKVGVjaG5pY2FsIERldGFpbHMKCjVCNzgg
LSBDb2xsZWN0cyBzeXN0ZW0gaW5mb3JtYXRpb24gYW5kIHV0aWxpdGllcy4gT25lIG9mIHRoZSB0
d28gZXhwb3J0ZWQgZnVuY3Rpb25zIGhhcwphIG5hbWUg4oCcR2V0UmVwb3J04oCdLgrigKIJCuKA
ogkK4oCiCQrigKIJCgpFbnVtZXJhdGUgcnVubmluZyBwcm9jZXNzZXMsIGV4dHJhY3QgdG9rZW5z
IGFuZCBTSURzLCBjb2xsZWN0IHRpbWluZyBpbmZvcm1hdGlvbgpMb2dvbiB1c2VycyB1c2luZyBl
eHBsaWNpdCBjcmVkZW50aWFscwpJbXBlcnNvbmF0ZSB1c2VycyBvZiBydW5uaW5nIHByb2Nlc3Nl
cwpCdWlsZCBuZXcgMzItYml0IGFuZCA2NC1iaXQgc2hlbGxjb2RlIHN0dWJzIHVzaW5nIGEgaGFy
ZGNvZGVkIHRlbXBsYXRlCgpCb3RoIDMyLWJpdCBhbmQgNjQtYml0IHZlcnNpb25zIGV4aXN0LgpB
ZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiBFOEM3LCBFRTZFLgo1QzY2IOKAkyBFbmNyeXB0ZWQg
ZmlsZSBJL08sIHV0aWxpdGllcwrigKIJCuKAogkKCkZpbGUgSS9PIG9wZXJhdGlvbnM6IG9wZW4v
c2Vlay9yZWFkL3dyaXRlCk1hbmFnZXMgY29tcHJlc3NlZCBhbmQgZW5jcnlwdGVkIHRlbXBvcmFy
eSBmaWxlcwoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0Br
YXNwZXJza3kuY29tCgoMMjYKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoKNjIyQiAt
IEdlbmVyYXRlIFhNTCByZXBvcnQgYWJvdXQgc3lzdGVtIHVzaW5nIHVuaXF1ZSBzY2hlbWEK4oCi
CQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQoKQ29tcHV0ZXIgbmFtZQpXaW5kb3dzIGRp
cmVjdG9yeQpFbnVtZXJhdGVzIGFsbCBsb2dpY2FsIGRyaXZlcwpMaXN0cyBhbGwgZmlsZXMKT1Mg
c2VyaWFsIG51bWJlcgpEb21haW4gbmFtZQpOZXR3b3JrIGFkYXB0ZXIgY29uZmlndXJhdGlvbjog
SVAgYWRkcmVzc2VzLCBNQUMsIE1UVSwgYWRhcHRlciBsaXN0CgpYTUwgdGFncyB1c2VkIHRvIGdl
bmVyYXRlIHRoZSBzeXN0ZW0gcmVwb3J0LgoKNjMwMiAtIFV0aWxpdGllcy4gSGFzIGludGVybmFs
IG5hbWUg4oCcZDNkeDlfMjcuZGxs4oCdLiBFeGVjdXRlcyB0aW1lci1iYXNlZCBldmVudHMuCkFk
ZGl0aW9uYWwga25vd24gdmFyaWFudHM6IEZBODQKNjY5RCDigJMgVXRpbGl0aWVzLiBHaXZlbiBh
IGxpc3Qgb2YgZmlsZSBuYW1lcyBhbmQgZGlyZWN0b3JpZXMsIGNoZWNrcyBpZiB0aGV5IGV4aXN0
LgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiA4ODBCCkZvciBhbnkgaW5xdWlyaWVzLCBwbGVh
c2UgY29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoKDDI3CgpUaGUgRHVxdSAyLjAK
VGVjaG5pY2FsIERldGFpbHMKCjY5MTQgLSBTbmlmZmVyLWJhc2VkIG5ldHdvcmsgYXR0YWNrcy4g
VXNlcyBhIGxlZ2l0aW1hdGUgV2luUGNhcCBkcml2ZXIg4oCcbnBmLnN5c+KAnS4gRGV0ZWN0cwpO
Qk5TIChOZXRCSU9TIHByb3RvY29sKSByZXF1ZXN0cyBvZiBpbnRlcmVzdCBhbmQgc2VuZHMgaXRz
IG93biByZXNwb25zZXM6CuKAogkK4oCiCQoKUmVzcG9uZHMgdG8gV1BBRCByZXF1ZXN0cyAo4oCc
RkhGQUVCReKAnSBpbiBOQk5TIHBhY2tldHMpClNlbmRzIHJlc3BvbnNlcyB0byBIVFRQIEdFVCBy
ZXF1ZXN0cwoKVGhlIG5ldHdvcmsgZmlsdGVyIGlzIGJhc2VkIG9uIHRoZSBCUEYgbGlicmFyeS4g
VGhlIHBheWxvYWRzIGZvciB0aGUgSFRUUCBhbmQgV1BBRApyZXNwb25zZXMgYXJlIHByb3ZpZGVk
IGV4dGVybmFsbHkuCgpGYWtlIEhUVFAgcmVzcG9uc2UgYW5kIHJlbGF0ZWQgc3RhdHVzIG1lc3Nh
Z2VzLgoKNkZBQyAtIEZpbGUgQVBJCuKAogkK4oCiCQrigKIJCgpHZXQgZmlsZSBzaXplLCBhdHRy
aWJ1dGVzClNlY3VyZWx5IGRlbGV0ZSBhIGZpbGUKT3Blbi9jbG9zZS9yZWFkL3dyaXRlIGZpbGUg
Y29udGVudHMKCkFkZGl0aW9uYWwga25vd24gdmFyaWFudHM6IEE3RUUKN0JEQSDigJMgQ29sbGVj
dHMgc3lzdGVtIGluZm9ybWF0aW9uCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK
4oCiCQoKQ3VycmVudCBzdGF0ZSBvZiBBViBhbmQgZmlyZXdhbGwgcHJvdGVjdGlvbiB1c2luZyB3
c2NhcGkuZGxsIEFQSQpEZXRlY3QgaWYg4oCcc3Fsc2VydnIuZXhl4oCdIGlzIHJ1bm5pbmcKQ29t
cHV0ZXIgbmFtZQpXb3JrZ3JvdXAgaW5mbwpEb21haW4gY29udHJvbGxlciBuYW1lCk5ldHdvcmsg
YWRhcHRlciBjb25maWd1cmF0aW9uClRpbWUgYW5kIHRpbWUgem9uZSBpbmZvcm1hdGlvbgpDUFUg
ZnJlcXVlbmN5CgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiBFRjJFCkZvciBhbnkgaW5xdWly
aWVzLCBwbGVhc2UgY29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoKDDI4CgpUaGUg
RHVxdSAyLjAKVGVjaG5pY2FsIERldGFpbHMKCjdDMjMg4oCTIEV4dHJhY3RzIG1ldGFkYXRhIGZy
b20gZG9jdW1lbnRzIGFuZCBjb2xsZWN0cyBzeXN0ZW0gaW5mb3JtYXRpb24K4oCiCQrigKIJCuKA
ogkKCkNvbXB1dGVyIG5hbWUKU3lzdGVtIHZvbHVtZSBzZXJpYWwKQ29tcGxldGUgZmlsZSBBUEkg
YXMgaW4gNkZBQwoKU2VhcmNoZXMgZm9yIGRvY3VtZW50cyBhbmQgYXJjaGl2ZXMgYW5kIGltcGxl
bWVudHMgcm91dGluZXMgdG8gZXh0cmFjdCBhbGwgdmFsdWFibGUKaW5mb3JtYXRpb24gZnJvbSB0
aGVtOgrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQoKRS1tYWlsIG1lc3NhZ2VzOiBlbWws
IG1zZwpJbWFnZSBmaWxlczoganBnLCBqcGUsIGpwZWcsIHRpZiwgdGlmZiwgYm1wLCBwbmcKTXVs
dGltZWRpYSBmaWxlczogd212LCBhdmksIG1wZWcsIG1wZywgbTRhLCBtcDQsIG1rdiwgd2F2LCBh
YWMsIGFjMywgZHYsIGZsYWMsCmZsdiwgaDI2NCwgbW92LCAzZ3AsIDNnMiwgbWoyLCBtcDMsIG1w
ZWd0cywgb2dnLCBhc2YuIFRoZXNlIGFyZSByZS1lbmNvZGVkIHdpdGgKbGliZmZtcGVnLgpDb250
ZW50cyBmcm9tIFBERiBkb2N1bWVudHMKTWljcm9zb2Z0IE9mZmljZTogZG9jLCBkb2N4LCB4bHN4
LCBwcHR4LiBEZWRpY2F0ZWQgcm91dGluZXMgYXJlIGNhbGxlZCBhY2NvcmRpbmdseToK4oCcT2Zm
aWNlUmlwRG9j4oCdLCDigJxPZmZpY2VSaXBEb2N44oCdLCDigJxPZmZpY2VSaXBYbHN44oCdLCDi
gJxPZmZpY2VSaXBQcHR44oCdLiBQUFQgc2xpZGVzIGFyZQpleHRyYWN0ZWQgYW5kIGNvbnZlcnRl
ZCB0byBhIEhUTUwgZGlnZXN0IG9mIHRoZSBwcmVzZW50YXRpb24uCkFyY2hpdmVzOiBneiwgZ3pp
cCwgZ3pYMywgemlwLCByYXIKCkNyZWF0ZXMgdGVtcG9yYXJ5IGZpbGVzIHdpdGggZXh0ZW5zaW9u
IOKAnC5mZzTigJ0uCkFkZGl0aW9uYWwga25vd24gdmFyaWFudHM6IEVCMTgsIEMwOTEKClBhcnQg
b2YgdGhlIGxpc3Qgb2YgZmlsZSBleHRlbnNpb25zIG9mIGludGVyZXN0IGFuZCBjb3JyZXNwb25k
aW5nIHN0YXR1cyBtZXNzYWdlcy4KRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGlu
dGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMMjkKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0
YWlscwoKODE3MiAtIFNuaWZmZXItYmFzZWQgbmV0d29yayBhdHRhY2tzLiBQZXJmb3JtcyBOQk5T
IChOZXRCSU9TIHByb3RvY29sKSBuYW1lCnJlc29sdXRpb24gc3Bvb2ZpbmcgZm9yOgrigKIJCuKA
ogkK4oCiCQoKV1BBRCByZXF1ZXN0cwpOYW1lcyBzdGFydGluZyB3aXRoIOKAnFNIUuKAnQpOYW1l
cyBzdGFydGluZyB3aXRoIOKAnDMxNDLigJ0gKGxvZyBvbmx5KQoKU3RhdHVzIG1lc3NhZ2VzIHJl
bGF0ZWQgdG8gdGhlIGF0dGFjay4KCkFkZGl0aW9uYWwgZmVhdHVyZTogdGhlIG1vZHVsZSBjYW4g
YnVpbGQgbmV3IHNoZWxsY29kZSBibG9icyBmcm9tIGhhcmRjb2RlZCB0ZW1wbGF0ZXMuCjgxQjcg
4oCTIERyaXZlciBtYW5hZ2VtZW50CuKAogkK4oCiCQrigKIJCgpXcml0ZSBkcml2ZXIgdG8gZGlz
awpTdGFydC9zdG9wIGRyaXZlcgpTYWZlbHkgcmVtb3ZlIHRoZSBkcml2ZXLigJlzIGZpbGUgZnJv
bSBkaXNrCgpBZGRpdGlvbmFsIGtub3duIHZhcmlhbnRzOiBDMUI5CgpGb3IgYW55IGlucXVpcmll
cywgcGxlYXNlIGNvbnRhY3QgaW50ZWxyZXBvcnRzQGthc3BlcnNreS5jb20KCgwzMAoKVGhlIER1
cXUgMi4wClRlY2huaWNhbCBEZXRhaWxzCgo4NDQ2IC0gT3JhY2xlIERCIGFuZCBBRE9kYiBjbGll
bnQuCuKAogkK4oCiCQrigKIJCgpVc2VzIOKAnG9jaS5kbGzigJ0gQVBJIHRvIGFjY2VzcyBPcmFj
bGUgZGF0YWJhc2VzCkV4dHJhY3RzIGFsbCBhdmFpbGFibGUgaW5mb3JtYXRpb24gZnJvbSB0aGUg
ZGF0YWJhc2UKQWxzbyBjb25uZWN0cyB0byBBRE9kYiBwcm92aWRlcnMKClNRTCBxdWVyaWVzIGFu
ZCByZWxhdGVkIGRhdGEuCgo4OTEyIOKAkyBFbmNyeXB0ZWQgZmlsZSBtYW5pcHVsYXRpb24gYW5k
IGNvbGxlY3RzIHN5c3RlbSBpbmZvcm1hdGlvbgrigKIJCuKAogkK4oCiCQrigKIJCuKAogkK4oCi
CQoKU2hhcmVkIGZpbGUgbWFwcGluZyBjb21tdW5pY2F0aW9uCldyaXRlIGVuY3J5cHRlZCBkYXRh
IHRvIGZpbGVzCkVudW1lcmF0ZSB3aW5kb3dzCkVudW1lcmF0ZSBuZXR3b3JrIHNoYXJlcyBhbmQg
bG9jYWwgZGlza3MKUmV0cmlldmUgVVNCIGRldmljZSBoaXN0b3J5CkNvbGxlY3QgbmV0d29yayBy
b3V0aW5nIHRhYmxlCgpLbm93biBtdXRleCBhbmQgbWFwcGluZyBuYW1lczoK4oCiCQrigKIJCuKA
ogkKCkdsb2JhbFx7REQwRkY1OTktRkExQi00REVELUFDNzAtQzA0NTFGNEI5OEYwfSBHbG9iYWxc
e0IxMkY4N0NBLTFFQkE0MzY1LUI5MEMtRTJBMUQ4OTExQ0E5fSwKR2xvYmFsXHtCMDNBNzlBRC1C
QTNBLTRCRjEtOUE1OS1BOUExQzU3QTMwMzR9IEdsb2JhbFx7NkQyMTA0RTYtNzMxMDRBNjUtOUVE
RC1GMDZFOTE3NDc3OTB9LApHbG9iYWxce0REMEZGNTk5LUZBMUItNERFRC1BQzcwLUMwNDUxRjRC
OThGMH0gR2xvYmFsXHtCMTJGODdDQS0xRUJBNDM2NS1COTBDLUUyQTFEODkxMUNBOX0KCkZvciBh
bnkgaW5xdWlyaWVzLCBwbGVhc2UgY29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoK
DDMxCgpUaGUgRHVxdSAyLjAKVGVjaG5pY2FsIERldGFpbHMKCkFkZGl0aW9uYWwga25vd24gdmFy
aWFudHM6IEQxOUYsIEQyRUUKOTIyNCDigJMgUnVuIGNvbnNvbGUgYXBwbGljYXRpb25zLiBDcmVh
dGVzIHByb2Nlc3NlcyB1c2luZyBkZXNrdG9wIOKAnERlZmF1bHTigJ0sIGF0dGFjaGVzIHRvCml0
cyBjb25zb2xlIGFuZCByZWRpcmVjdHMgaXRzIEkvTyB0byBuYW1lZCBwaXBlcy4KOTJEQiAtIE1v
ZGlmaWVkIGNtZC5leGUgc2hlbGwuCgpTZXZlcmFsIENNRCBjb21tYW5kcyBwcm9jZXNzZWQgYnkg
dGhlIHNoZWxsLgoKOUYwRCAoNjQtYml0KSwgRDFBMygzMi1iaXQpIOKAkyBsZWdpdGltYXRlIHNp
Z25lZCBkcml2ZXIgTlBGLlNZUyAoV2luUGNhcCkgZGlzdHJpYnV0ZWQKaW5zaWRlIHRoZSBWRlMg
YWxvbmcgd2l0aCB0aGUgcGx1Z2lucy4gSXQgaXMgdXNlZCBmb3Igc25pZmZlci1iYXNlZCBuZXR3
b3JrIGF0dGFja3MuCkE0QjAg4oCTIE5ldHdvcmsgc3VydmV5CuKAogkK4oCiCQrigKIJCuKAogkK
4oCiCQrigKIJCgpVc2VzIERIQ1AgU2VydmVyIE1hbmFnZW1lbnQgQVBJIChESENQU0FQSS5ETEwp
IHRvIGVudW1lcmF0ZSBhbGwgREhDUCBzZXJ2ZXLigJlzCmNsaWVudHMKUXVlcmllcyBhbGwga25v
d24gREhDUCBzdWItbmV0d29ya3MKU2VhcmNoZXMgZm9yIG1hY2hpbmVzIHRoYXQgaGF2ZSBwb3J0
cyBVRFAgMTQzNCBvciAxMzcgb3BlbgpFbnVtZXJhdGVzIGFsbCBuZXR3b3JrIHNlcnZlcnMKRW51
bWVyYXRlcyBuZXR3b3JrIHNoYXJlcwpUcmllcyB0byBjb25uZWN0IHRvIHJlbW90ZSByZWdpc3Ry
aWVzIHRvIGVudW1lcmF0ZSBhbGwgdXNlcnMgaW4gSEtFWV9VU0VSUywgY29udmVydHMKdGhlbSB0
byBTSURzCgpCNkMxIC0gV05ldCBBUEkuIFByb3ZpZGVzIHdyYXBwZXJzIGZvciB0aGUgV25ldEFk
ZENvbm5lY3Rpb24yIGFuZCBXTmV0T3BlbkVudW0KZnVuY3Rpb25zLgpBZGRpdGlvbmFsIGtub3du
IHZhcmlhbnRzOiBCQzRBCgpGb3IgYW55IGlucXVpcmllcywgcGxlYXNlIGNvbnRhY3QgaW50ZWxy
ZXBvcnRzQGthc3BlcnNreS5jb20KCgwzMgoKVGhlIER1cXUgMi4wClRlY2huaWNhbCBEZXRhaWxz
CgpDMjVCIOKAkyBTbmlmZmVyIGJhc2VkIG5ldHdvcmsgYXR0YWNrcy4gSW1wbGVtZW50cyBhIGZh
a2UgU01CIHNlcnZlciB0byB0cmljayBvdGhlcgptYWNoaW5lcyB0byBhdXRoZW50aWNhdGUgd2l0
aCBOVExNLgrigKIJCgpJbXBsZW1lbnRzIGJhc2ljIFNNQiB2MSBjb21tYW5kcwoKU01CIGNvbW1h
bmRzIGhhbmRsZWQgYnkgdGhlIG1vZHVsZQoK4oCiCQrigKIJCuKAogkKClByZXRlbmRzIHRvIGhh
dmUgSVBDJCBhbmQgQTogc2hhcmVzCkFjY2VwdHMgdXNlciBhdXRoZW50aWNhdGlvbiByZXF1ZXN0
cwpBbHNvIGhhbmRsZXMgSFRUUCDigJxHRVQgL+KAnSByZXF1ZXN0cwoKTlRMTSBjaGFsbGVuZ2Ug
YW5kIFNNQiBzZXJ2ZXIgZGF0YQoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGlu
dGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMMzMKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0
YWlscwoKRUQ5MiDigJMgRmlsZSBzeXN0ZW0gc3VydmV5CuKAogkK4oCiCQoKRW51bWVyYXRlcyBh
bGwgbG9jYWwgZHJpdmVzIGFuZCBjb25uZWN0ZWQgbmV0d29yayBzaGFyZXMKTGlzdHMgZmlsZXMK
CkVGOTcg4oCTIEZpbGVzeXN0ZW0gdXRpbGl0aWVzCuKAogkK4oCiCQrigKIJCuKAogkK4oCiCQoK
RW51bWVyYXRlIGZpbGVzCkNyZWF0ZSBhbmQgcmVtb3ZlIGRpcmVjdG9yaWVzCkNvcHkvbW92ZS9k
ZWxldGUgZmlsZXMgYW5kIGRpcmVjdG9yaWVzCkV4dHJhY3QgdmVyc2lvbiBpbmZvcm1hdGlvbiBm
cm9tIGZpbGVzCkNhbGN1bGF0ZSBmaWxlIGhhc2hlcwoKQWRkaXRpb25hbCBrbm93biB2YXJpYW50
czogRjcxRQoKUGVyc2lzdGVuY2UgbWVjaGFuaXNtClRoZSBEdXF1IDIuMCBtYWx3YXJlIHBsYXRm
b3JtIHdhcyBkZXNpZ25lZCBpbiBhIHdheSB0aGF0IHN1cnZpdmVzIGFsbW9zdCBleGNsdXNpdmVs
eQppbiBtZW1vcnkgb2YgdGhlIGluZmVjdGVkIHN5c3RlbXMsIHdpdGhvdXQgbmVlZCBmb3IgcGVy
c2lzdGVuY2UuIFRvIGFjaGlldmUgdGhpcywgdGhlCmF0dGFja2VycyBpbmZlY3Qgc2VydmVycyB3
aXRoIGhpZ2ggdXB0aW1lIGFuZCB0aGVuIHJlLWluZmVjdCBhbnkgbWFjaGluZXMgaW4gdGhlIGRv
bWFpbgp0aGF0IGdldCBkaXNpbmZlY3RlZCBieSByZWJvb3RzLiBTdXJ2aXZpbmcgZXhjbHVzaXZl
bHkgaW4gbWVtb3J5IHdoaWxlIHJ1bm5pbmcga2VybmVsCmxldmVsIGNvZGUgdGhyb3VnaCBleHBs
b2l0cyBpcyBhIHRlc3RpbW9ueSB0byB0aGUgdGVjaG5pY2FsIHByb3dlc3Mgb2YgdGhlIGdyb3Vw
LiBJbgplc3NlbmNlLCB0aGUgYXR0YWNrZXJzIHdlcmUgY29uZmlkZW50IGVub3VnaCB0aGV5IGNh
biBzdXJ2aXZlIHdpdGhpbiBhbiBlbnRpcmUgbmV0d29yawpvZiBjb21wcm9taXNlZCBjb21wdXRl
cnMgd2l0aG91dCByZWx5aW5nIG9uIGFueSBwZXJzaXN0ZW5jZSBtZWNoYW5pc20gYXQgYWxsLgpU
aGUgcmVhc29uIHdoeSB0aGVyZSBpcyBubyBwZXJzaXN0ZW5jZSB3aXRoIER1cXUgMi4wIGlzIHBy
b2JhYmx5IGJlY2F1c2UgdGhlIGF0dGFja2Vycwp3YW50ZWQgdG8gc3RheSB1bmRlciB0aGUgcmFk
YXIgYXMgbXVjaCBhcyBwb3NzaWJsZS4gTW9zdCBtb2Rlcm4gYW50aS1BUFQgdGVjaG5vbG9naWVz
CmNhbiBwaW5wb2ludCBhbm9tYWxpZXMgb24gdGhlIGRpc2ssIHN1Y2ggYXMgcmFyZSBkcml2ZXJz
LCB1bnNpZ25lZCBwcm9ncmFtcyBvcgptYWxpY2lvdXNseS1hY3RpbmcgcHJvZ3JhbXMuIEFkZGl0
aW9uYWxseSwgYSBzeXN0ZW0gd2hlcmUgdGhlIG1hbHdhcmUgc3Vydml2ZXMgcmVib290CmNhbiBi
ZSBpbWFnZWQgYW5kIHRoZW4gYW5hbHl6ZWQgdGhvcm91Z2hseSBhdCBhIGxhdGVyIHRpbWUuIFdp
dGggRHVxdSAyLjAsIGZvcmVuc2ljCmFuYWx5c2lzIG9mIGluZmVjdGVkIHN5c3RlbXMgaXMgZXh0
cmVtZWx5IGRpZmZpY3VsdCDigJMgb25lIG5lZWRzIHRvIGdyYWIgbWVtb3J5IHNuYXBzaG90cwpv
ZiBpbmZlY3RlZCBtYWNoaW5lcyBhbmQgdGhlbiBpZGVudGlmeSB0aGUgaW5mZWN0aW9uIGluIG1l
bW9yeS4KSG93ZXZlciwgdGhpcyBtZWNoYW5pc20gaGFzIG9uZSB3ZWFrbmVzczsgaW4gY2FzZSBv
ZiBhIG1hc3NpdmUgcG93ZXIgZmFpbHVyZSwgYWxsCmNvbXB1dGVycyB3aWxsIHJlYm9vdCBhbmQg
dGhlIG1hbHdhcmUgd2lsbCBiZSBlcmFkaWNhdGVkLiBUbyBnZXQgYXJvdW5kIHRoaXMgcHJvYmxl
bSwKdGhlIGF0dGFja2VycyBoYXZlIGFub3RoZXIgc29sdXRpb24g4oCTIHRoZXkgZGVwbG95IGRy
aXZlcnMgdG8gYSBzbWFsbCBudW1iZXIgb2YKY29tcHV0ZXJzLCB3aXRoIGRpcmVjdCBJbnRlcm5l
dCBjb25uZWN0aXZpdHkuIFRoZXNlIGRyaXZlcnMgY2FuIHR1bm5lbCB0cmFmZmljIGZyb20gdGhl
Cm91dHNpZGUgaW50byB0aGUgbmV0d29yaywgYWxsb3dpbmcgdGhlIGF0dGFja2VycyB0byBhY2Nl
c3MgcmVtb3RlIGRlc2t0b3Agc2Vzc2lvbnMgb3IKdG8gY29ubmVjdCB0byBzZXJ2ZXJzIGluc2lk
ZSB0aGUgZG9tYWluIGJ5IHVzaW5nIHByZXZpb3VzbHkgYWNxdWlyZWQgY3JlZGVudGlhbHMuIFVz
aW5nCnRoZXNlIGNyZWRlbnRpYWxzLCB0aGV5IGNhbiByZS1kZXBsb3kgdGhlIGVudGlyZSBwbGF0
Zm9ybSBmb2xsb3dpbmcgYSBtYXNzaXZlIHBvd2VyIGxvc3MuCgpDb21tYW5kIGFuZCBjb250cm9s
IG1lY2hhbmlzbXMKRHVxdSAyLjAgdXNlcyBhIHNvcGhpc3RpY2F0ZWQgYW5kIGhpZ2hseSBmbGV4
aWJsZSBjb21tYW5kLWFuZC1jb250cm9sIG1lY2hhbmlzbSB0aGF0CmJ1aWxkcyBvbiB0b3Agb2Yg
dGhlIDIwMTEgdmFyaWFudCwgd2l0aCBuZXcgZmVhdHVyZXMgdGhhdCBhcHBlYXIgdG8gaGF2ZSBi
ZWVuIGluc3BpcmVkCmJ5IG90aGVyIHRvcCBjbGFzcyBtYWx3YXJlIHN1Y2ggYXMgUmVnaW4uIFRo
aXMgaW5jbHVkZXMgdGhlIHVzYWdlIG9mIG5ldHdvcmsgcGlwZXMgYW5kCm1haWxzbG90cywgcmF3
IGZpbHRlcmluZyBvZiBuZXR3b3JrIHRyYWZmaWMgYW5kIG1hc2tpbmcgQyZDIHRyYWZmaWMgaW5z
aWRlIGltYWdlIGZpbGVzLgpGb3IgYW55IGlucXVpcmllcywgcGxlYXNlIGNvbnRhY3QgaW50ZWxy
ZXBvcnRzQGthc3BlcnNreS5jb20KCgwzNAoKVGhlIER1cXUgMi4wClRlY2huaWNhbCBEZXRhaWxz
CgpJbnNpZGUgYSBXaW5kb3dzIExBTiwgbmV3bHkgaW5mZWN0ZWQgY2xpZW50cyBtYXkgbm90IGhh
dmUgYSBDJkMgaGFyZGNvZGVkIGluIHRoZWlyCmluc3RhbGxhdGlvbiBNU0kgcGFja2FnZXMuIFdp
dGhvdXQgYSBDJkMsIHRoZXkgYXJlIGluIOKAnGRvcm1hbnTigJ0gc3RhdGUgYW5kIGNhbiBiZQph
Y3RpdmF0ZWQgYnkgdGhlIGF0dGFja2VycyBvdmVyIFNNQiBuZXR3b3JrIHBpcGVzIHdpdGggYSBz
cGVjaWFsIFRDUC9JUCBwYWNrZXQgdGhhdApjb250YWlucyB0aGUgbWFnaWMgc3RyaW5nIOKAnHR0
dHR0dHR0dHR0dHR0dHTigJ0uIElmIGEgQyZDIGlzIGluY2x1ZGVkIGluIHRoZSBjb25maWd1cmF0
aW9uIHBhcnQgb2YKdGhlIE1TSSBmaWxlLCB0aGlzIGNhbiBiZSBlaXRoZXIgYSBsb2NhbCBJUCBh
ZGRyZXNzLCB3aGljaCBzZXJ2ZXMgYXMgYSBib3VuY2luZyBwb2ludCBvciBhbgpleHRlcm5hbCBJ
UCBhZGRyZXNzLiBBcyBhIGdlbmVyYWwgc3RyYXRlZ3kgZm9yIGluZmVjdGlvbiwgdGhlIGF0dGFj
a2VycyBpZGVudGlmeSBzZXJ2ZXJzIHdpdGgKaGlnaCB1cHRpbWUgYW5kIHNldCB0aGVtIGFzIGlu
dGVybWVkaWFyeSBDJkMgcG9pbnRzLiBIZW5jZSwgYW4gaW5mZWN0ZWQgbWFjaGluZSBjYW4KanVt
cCBiZXR3ZWVuIHNldmVyYWwgaW50ZXJuYWwgc2VydmVycyBpbiB0aGUgTEFOIGJlZm9yZSByZWFj
aGluZyBvdXQgdG8gdGhlIEludGVybmV0LgpUbyBjb25uZWN0IHRoZSB0aGUgQyZDIHNlcnZlcnMs
IGJvdGggMjAxMSBhbmQgMjAxNC8yMDE1IHZlcnNpb25zIG9mIER1cXUgY2FuIGhpZGUgdGhlCnRy
YWZmaWMgYXMgZW5jcnlwdGVkIGRhdGEgYXBwZW5kZWQgdG8gYSBoYXJtbGVzcyBpbWFnZSBmaWxl
LiBUaGUgMjAxMSB2ZXJzaW9uIHVzZWQgYQpKUEVHIGZpbGUgZm9yIHRoaXM7IHRoZSBuZXcgdmVy
c2lvbiBjYW4gdXNlIGVpdGhlciBhIEdJRiBmaWxlIG9yIGEgSlBFRyBmaWxlLiBIZXJl4oCZcyBo
b3cKdGhlc2UgaW1hZ2UgZmlsZXMgbG9vayBsaWtlOgoKQW5vdGhlciBtb2RpZmljYXRpb24gdG8g
dGhlIDIwMTQvMjAxNSB2YXJpYW50cyBpcyB0aGUgYWRkaXRpb24gb2YgbXVsdGlwbGUgdXNlciBh
Z2VudApzdHJpbmdzIGZvciB0aGUgSFRUUCBjb21tdW5pY2F0aW9uLiBUaGUgMjAxMSB1c2VkIHRo
ZSBmb2xsb3dpbmcgdXNlciBhZ2VudCBzdHJpbmc6CuKAogkKCk1vemlsbGEvNS4wIChXaW5kb3dz
OyBVOyBXaW5kb3dzIE5UIDYuMDsgZW4tVVM7IHJ2OjEuOS4yLjkpIEdlY2tvLzIwMTAwODI0CkZp
cmVmb3gvMy42LjkgKC5ORVQgQ0xSIDMuNS4zMDcyOSkKClRoZSBuZXcgdmFyaWFudHMgd2lsbCBy
YW5kb21seSBzZWxlY3QgYW4gdXNlciBhZ2VudCBzdHJpbmcgZnJvbSBhIHRhYmxlIG9mIDUzIGRp
ZmZlcmVudApwb3NzaWJsZSBvbmVzLgoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0
IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMMzUKClRoZSBEdXF1IDIuMApUZWNobmljYWwg
RGV0YWlscwoKQW5vdGhlciB1bnVzdWFsIEMmQyBtZWNoYW5pc20gcmVsaWVzIG9uIGRyaXZlciBm
aWxlcyB0aGF0IGFyZSB1c2VkIHRvIHR1bm5lbCB0aGUgQyZDCmNvbW11bmljYXRpb25zIGFuZCBh
dHRhY2tlcuKAmXMgUkRQL1NNQiBhY3Rpdml0eSBpbnRvIHRoZSBuZXR3b3JrLiBUaGUgYXR0YWNr
ZXJzIGRlcGxveQpzdWNoIHRyYW5zbGF0aW9uIGRyaXZlcnMgb24gc2VydmVycyB3aXRoIGRpcmVj
dCBJbnRlcm5ldCBjb25uZWN0aXZpdHkuIFRocm91Z2ggYSBrbm9ja2luZwptZWNoYW5pc20sIHRo
ZSBhdHRhY2tlcnMgY2FuIGFjdGl2YXRlIHRoZSB0cmFuc2xhdGlvbiBtZWNoYW5pc20gZm9yIHRo
ZWlyIElQcyBhbmQgdHVubmVsCnRoZWlyIHRyYWZmaWMgZGlyZWN0bHkgaW50byB0aGUgTEFOLiBP
dXRzaWRlIHRoZSBMQU4sIHRoZSB0cmFmZmljIGNhbiBiZSBtYXNrZWQgb3ZlciBwb3J0CjQ0Mzsg
aW5zaWRlIHRoZSBMQU4sIGl0IGNhbiBiZSBlaXRoZXIgZGlyZWN0IFNNQi9SRFAgb3IgaXQgY2Fu
IGJlIGZ1cnRoZXIgdHJhbnNsYXRlZCBvdmVyCmZha2UgVENQL0lQIHBhY2tldHMgdG8gSVAgOC44
LjguOC4KRHVyaW5nIG91ciBpbnZlc3RpZ2F0aW9uLCB3ZSBvYnNlcnZlZCBzZXZlcmFsIHN1Y2gg
ZHJpdmVycy4gQSBkZXNjcmlwdGlvbiBjYW4gYmUgZm91bmQKYmVsb3cuCgpUaGUg4oCccG9ydHNl
cnYuc3lz4oCdIGRyaXZlciBhbmFseXNpcwpNRDU6IDI3NTFlNGI1MGEwOGViMTFhODRkMDNmOGVi
NTgwYTRlCgpTaXplOiAxNDMzNgpDb21waWxlZDogU2F0IEZlYiAxMSAyMTo1NTozMCAyMDA2IChm
YWtlIHRpbWVzdGFtcCkKSW50ZXJuYWwgbmFtZTogdGVybXBvcnQuc3lzClR5cGU6IFdpbjMyIGRl
dmljZSBkcml2ZXIgKGEgNjQgYml0IHZlcnNpb24gaXMga25vd24gYXMgd2VsbCkKRm9yIGFueSBp
bnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMMzYK
ClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoKVGhpcyBpcyBhIG1hbGljaW91cyBORElT
IGZpbHRlciBkcml2ZXIgZGVzaWduZWQgdG8gcGVyZm9ybSBtYW5pcHVsYXRpb24gb2YgVENQL0lQ
IHBhY2tldHMKdG8gYWxsb3cgdGhlIGF0dGFja2VyIHRvIGFjY2VzcyBpbnRlcm5hbCBzZXJ2ZXJz
IGluIHRoZSB2aWN0aW3igJlzIGluZnJhc3RydWN0dXJlLgpVcG9uIHN0YXJ0dXAsIHRoZSBmaWx0
ZXIgZHJpdmVyIGhvb2tzIGludG8gdGhlIE5ESVMgc3RhY2sgYW5kIHN0YXJ0cyBwcm9jZXNzaW5n
IFRDUC9JUApwYWNrZXRzLgpUbyBsZXZlcmFnZSB0aGUgZHJpdmVyLCB0aGUgYXR0YWNrZXIgZmly
c3Qgc2VuZHMgYSBzcGVjaWFsIFRDUC9JUCBwYWNrZXQgd2l0aCB0aGUgc3RyaW5nCuKAnHJvbWFu
aWFuLmFudGloYWNrZXLigJ0gdG8gYW55IG9mIHRoZSBoYXJkY29kZWQgSVBzIGJlbG9uZ2luZyB0
byBpbmZlY3RlZCBzZXJ2ZXIuIEluCmdlbmVyYWwsIHN1Y2ggc2VydmVycyBhcmUgY29tcHV0ZXJz
IHdpdGggZGlyZWN0IEludGVybmV0IGNvbm5lY3Rpdml0eSwgc3VjaCBhcyBhCndlYnNlcnZlciBv
ciBhIHByb3h5LiBUaGUgZHJpdmVyIHNlZXMgdGhlIHBhY2tldCwgcmVjb2duaXplcyB0aGUgbWFn
aWMgc3RyaW5nIOKAnHJvbWFuaWFuLgphbnRpaGFja2Vy4oCdIGFuZCBzYXZlcyB0aGUgYXR0YWNr
ZXLigJlzIElQIGZvciBsYXRlciB1c2UuCgpNYWdpYyBzdHJpbmcgdXNlZCBmb3Iga25vY2tpbmcg
aW5zaWRlIHRoZSBkcml2ZXIuCgpXaGVuIGEgcGFja2V0IGNvbWVzIGZyb20gdGhlIGF0dGFja2Vy
4oCZcyBJUCAoc2F2ZWQgYmVmb3JlKSwgdGhlIGZvbGxvd2luZyBsb2dpYyBhcHBsaWVzOgrigKIJ
CuKAogkK4oCiCQrigKIJCgpQYWNrZXQgdG8gc2VydmVyIDHigJlzIElQIG9uIHBvcnQgNDQzLCBp
cyByZWRpcmVjdGVkIG9uIHBvcnQgNDQ1IChTYW1iYS9XaW5kb3dzIGZpbGUKc3lzdGVtKQpQYWNr
ZXQgZnJvbSBzZXJ2ZXIgMeKAmXMgSVAgZnJvbSBwb3J0IDQ0NSwgaXMgcmVkaXJlY3RlZCB0byBh
dHRhY2tlcuKAmXMgSVAgcG9ydCA0NDMKUGFja2V0IHRvIHNlcnZlciAy4oCZcyBJUCBvbiBwb3J0
IDQ0MyBpcyByZWRpcmVjdGVkIG9uIHBvcnQgMzM4OSAoUmVtb3RlIERlc2t0b3ApClBhY2tldCBm
cm9tIHNlcnZlciAy4oCZcyBJUCBmcm9tIHBvcnQgMzM4OSBpcyByZWRpcmVjdGVkIHRvIGF0dGFj
a2Vy4oCZcyBJUCBwb3J0IDQ0MwoKVGhpcyBlZmZlY3RpdmVseSBhbGxvd3MgdGhlIGF0dGFja2Vy
cyB0byB0dW5uZWwgU01CIChyZW1vdGUgZmlsZSBzeXN0ZW0gYWNjZXNzKSBhbmQKUmVtb3RlIERl
c2t0b3AgaW50byB0aGVzZSB0d28gc2VydmVycyB3aGlsZSBtYWtpbmcgaXQgbG9vayBsaWtlIFNT
TCB0cmFmZmljIChwb3J0IDQ0MykuClRoZXNlIGRyaXZlcnMgYWxsb3cgdGhlIER1cXUgYXR0YWNr
ZXJzIHRvIGVhc2lseSBhY2Nlc3Mgc2VydmVycyBpbnNpZGUgdGhlIExBTiBmcm9tCnJlbW90ZSwg
aW5jbHVkaW5nIHR1bm5lbGluZyBSRFAgc2Vzc2lvbnMgb3ZlciBQb3J0IDQ0MyAobm9ybWFsbHkg
U1NMKS4gSXQgYWxzbyBnaXZlcyB0aGVtCmEgcGVyc2lzdGVuY2UgbWVjaGFuaXNtIHRoYXQgYWxs
b3dzIHRoZW0gdG8gcmV0dXJuIGV2ZW4gaWYgYWxsIHRoZSBpbmZlY3RlZCBtYWNoaW5lcwp3aXRo
IHRoZSBtYWx3YXJlIGluIG1lbW9yeSBhcmUgcmVib290ZWQuIFRoZSBhdHRhY2tlcnMgY2FuIHNp
bXBseSB1c2UgZXhpc3RpbmcKY3JlZGVudGlhbHMgdG8gbG9nIGJhY2sgaW50byBhbnkgb2YgdGhl
IHNlcnZlcnMgdGhhdCB0aGUgZHJpdmVyIGlzIHNlcnZpbmcgYW5kIGNhbiByZWluaXRpYWxpemUg
dGhlIGJhY2tkb29ycyBmcm9tIHRoZXJlLgoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250
YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMVGhlIER1cXUgMi4wClRlY2huaWNhbCBE
ZXRhaWxzCgozNwoKU2ltaWxhcml0aWVzIGJldHdlZW4KRHVxdSBhbmQgRHVxdSAyLjAKVGhlIDIw
MTQvMjAxNSBEdXF1IDIuMCBpcyBhIGdyZWF0bHkgZW5oYW5jZWQgdmVyc2lvbiBvZiB0aGUgMjAx
MSBEdXF1IG1hbHdhcmUKZGlzY292ZXJlZCBieSA3Q3J5U3lTIExhYi4gSXQgaW5jbHVkZXMgbWFu
eSBuZXcgaWRlYXMgZnJvbSBtb2Rlcm4gbWFsd2FyZSwgc3VjaCBhcwpSZWdpbiwgYnV0IGFsc28g
bGF0ZXJhbCBtb3ZlbWVudCBzdHJhdGVnaWVzIGFuZCBoYXJ2ZXN0aW5nIGNhcGFiaWxpdGllcyB3
aGljaCBzdXJwYXNzZXMKY29tbW9ubHkgc2VlbiBtYWx3YXJlIGZyb20gb3RoZXIgQVBUIGF0dGFj
a3MuClNpZGUgYnkgc2lkZToKMjAxMSBEdXF1CgoyMDE0LzIwMTUgRHVxdSAyLjAKCk51bWJlciBv
ZiB2aWN0aW1zOgoKPDUwIChlc3RpbWF0ZWQpCgo8MTAwIChlc3RpbWF0ZWQpCgpQZXJzaXN0ZW5j
ZSBtZWNoYW5pc206CgpZZXMKCk5vCgpMb2FkZXI6CgpTWVMgZHJpdmVyCgpNU0kgZmlsZQoKWmVy
by1kYXlzIHVzZWQ6CgpZZXMKClllcwoKTWFpbiBzdG9yYWdlOgoKUE5GIChjdXN0b20pIGZpbGVz
CgpNU0kgZmlsZXMKCkMmQyBtZWNoYW5pc206CgpIVFRQL0hUVFBTLCBuZXR3b3JrIHBpcGVzCgpI
VFRQL0hUVFBTLCBuZXR3b3JrIHBpcGVzCgpLbm93biBwbHVnaW5zOgoKNgoKPjEwMAoKVGhlcmUg
YXJlIG1hbnkgc2ltaWxhcml0aWVzIGluIHRoZSBjb2RlIHRoYXQgbGVhZHMgdXMgdG8gY29uY2x1
c2lvbiB0aGF0IER1cXUgMi4wIHdhcwpidWlsdCBvbiB0b3Agb2YgdGhlIG9yaWdpbmFsIHNvdXJj
ZSBjb2RlIG9mIER1cXUuIFRob3NlIGludGVyZXN0ZWQgY2FuIHJlYWQgYmVsb3cgZm9yIGEKdGVj
aG5pY2FsIGRlc2NyaXB0aW9uIG9mIHRoZXNlIHNpbWlsYXJpdGllcy4KCjcJCgpodHRwczovL3d3
dy5jcnlzeXMuaHUvcHVibGljYXRpb25zL2ZpbGVzL2JlbmNzYXRoUEJGMTFkdXF1LnBkZgpGb3Ig
YW55IGlucXVpcmllcywgcGxlYXNlIGNvbnRhY3QgaW50ZWxyZXBvcnRzQGthc3BlcnNreS5jb20K
CgwzOAoKVGhlIER1cXUgMi4wClRlY2huaWNhbCBEZXRhaWxzCgpPbmUgb2YgdGhlIOKAnHRyYWRl
bWFya+KAnSBmZWF0dXJlcyB1bmlxdWUgdG8gdGhlIG9yaWdpbmFsIER1cXUgd2FzIHRoZSBzZXQg
b2YgZnVuY3Rpb25zIHRoYXQKcHJvdmlkZSBsb2dnaW5nIGZhY2lsaXRpZXMuIFVubGlrZSBtYW55
IG90aGVyIEFQVHMsIER1cXUgbG9ncyBhbG1vc3QgZXZlcnkgaW1wb3J0YW50IHN0ZXAKb2YgaXRz
IGFjdGl2aXR5IGJ1dCBkb2VzIGl0IGluIGEgc3BlY2lhbCB3YXk6IHRoZXJlIGFyZSBubyByZWFk
YWJsZSBzdHJpbmdzIHdyaXR0ZW4gdG8gdGhlIGxvZy4KSW5zdGVhZCwgYSBzZXJpZXMgb2YgdW5p
cXVlIG51bWJlcnMgaWRlbnRpZnkgZXZlcnkgc3RhdGUsIGVycm9yLCBvciBtZXNzYWdlIGluIHRo
ZSBsb2cuCkNvbXBhcmluZyB0aGUgZnVuY3Rpb25zIHRoYXQgZ2VuZXJhdGUgZXZlcnkgbG9nIGVu
dHJ5IGluIER1cXUgYW5kIER1cXUgMi4wLCB3ZSBjYW4KY29uY2x1ZGUgdGhhdCB0aGV5IGFyZSBh
bG1vc3QgaWRlbnRpY2FsOgoKVGhlIGZpcnN0IGdlbmVyYXRpb24gb2YgRHVxdSB3YXMgYWxzbyB3
cml0dGVuIGluIGEgdmVyeSByYXJlIGFuZCB1bmlxdWUgbWFubmVyLiBJdCB3YXMKY29tcGlsZWQg
d2l0aCBWaXN1YWwgU3R1ZGlvIGFuZCB3aGlsZSBwYXJ0cyBvZiBpdCB3ZXJlIGRlZmluaXRlbHkg
d3JpdHRlbiBpbiBDKyssIHRoZQptYWpvcml0eSBvZiBpdHMgY2xhc3NlcyB3ZXJlIG5vdCBuYXRp
dmVseSBnZW5lcmF0ZWQgYnkgdGhlIEMrKyBjb21waWxlci4gQWZ0ZXIgYW5hbHl6aW5nCmFsbCB0
aGUgcG9zc2libGUgdmFyaWFudHMsIHdlIGNvbmNsdWRlIHRoYXQgdGhlc2UgY2xhc3NlcyB3ZXJl
IHdyaXR0ZW4gaW4gT08tQywgdGhlCm9iamVjdGl2ZSB2YXJpYW50IG9mIHRoZSBDIGxhbmd1YWdl
LCBhbmQgdGhlbiBzb21laG93IGNvbnZlcnRlZCBpbnRvIGEgY29tcGlsYWJsZSBDLwpDKysgc291
cmNlLiBBbGwgdGhlc2UgY2xhc3NlcyBoYWQgYSB2ZXJ5IHNwZWNpZmljIGZlYXR1cmU6IHRoZSB2
aXJ0dWFsIGZ1bmN0aW9uIHRhYmxlIG9mCmV2ZXJ5IGluc3RhbmNlIHdhcyBmaWxsZWQg4oCcYnkg
aGFuZOKAnSBpbiBpdHMgY29uc3RydWN0b3IuIEludGVyZXN0aW5nbHksIHRoaXMgaXMgbm8gbG9u
Z2VyIHRoZQpjYXNlIGZvciBEdXF1IDIuMC4gVGhlIGF1dGhvcnMgdXBncmFkZWQgdGhlaXIgY29t
cGlsZXIgZnJvbSBWaXN1YWwgU3R1ZGlvIDIwMDggKHVzZWQgaW4KMjAxMSkgdG8gVmlzdWFsIFN0
dWRpbyAyMDEzIGFuZCBub3cgdXNlIGNsYXNzZXMgdGhhdCBsb29rIG11Y2ggbW9yZSBsaWtlIG5h
dGl2ZSBDKysKb25lczoKCk9uIHRoZSBsZWZ0OiB0aGUg4oCcaGFuZC1tYWRl4oCdIG9yIOKAnGNv
bXBpbGVyLWFzc2lzdGVk4oCdIGNsYXNzZWQgb2YgT08tQyBpbiBEdXF1LgpPbiB0aGUgcmlnaHQ6
IHRoZSBzYW1lIGNsYXNzIGluIER1cXUgMi4wIGhhcyBhIG5hdGl2ZSBWdGFibGUgc2ltaWxhciB0
byBuYXRpdmUgQysrIG9uZSwKaG93ZXZlciB0aGUgb2Zmc2V0IG9mIHRoZSBwb2ludGVyIGlzIG5v
dCB6ZXJvLgoKRm9yIGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0Br
YXNwZXJza3kuY29tCgoMMzkKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoKVGhlIG1v
cmUgY29uY3JldGUgZXZpZGVuY2Ugb2Ygc2ltaWxhcml0eSBjYW4gYmUgZm91bmQgaWYgd2UgbG9v
ayBmb3IgZnVuY3Rpb25zIHRoYXQKYWN0dWFsbHkgdXNlIHRoZSBsb2dnaW5nIGZhY2lsaXRpZXMu
IFRoZSBhdXRob3JzIGtlcHQgdXNpbmcgdGhlIHNhbWUgdW5pcXVlIG51bWJlcnMgZm9yCmlkZW50
aWZpY2F0aW9uIG9mIGludGVybmFsIHN0YXRlcywgZXJyb3JzIGFuZCBmdW5jdGlvbiByZXN1bHRz
LiBOZXR3b3JraW5nIGZ1bmN0aW9ucyBhcmUKZ29vZCBjYW5kaWRhdGVzIGZvciBjb21wYXJpc29u
OgoKSW1wbGVtZW50YXRpb24gb2YgdGhlIHNhbWUgbmV0d29ya2luZyBmdW5jdGlvbiBpbiBEdXF1
IGFuZCBEdXF1IDIuMC4gTm90ZSB0aGUgc2FtZSB1bmlxdWUgbnVtYmVycwooaW4gcmVkIHJlY3Rh
bmdsZXMpIFBVU0hlZCBhcyBwYXJhbWV0ZXJzIHRvIHRoZSBsb2dnaW5nIGZ1bmN0aW9uLgoKRm9y
IGFueSBpbnF1aXJpZXMsIHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29t
CgoMNDAKClRoZSBEdXF1IDIuMApUZWNobmljYWwgRGV0YWlscwoKQW5vdGhlciBuZXR3b3JraW5n
IHJvdXRpbmU6IGFmdGVyIGNhbGxpbmcgcmVjdigpIHRvIHJlY2VpdmUgZGF0YSBmcm9tIG5ldHdv
cmssIER1cXUgbG9ncyB0aGUgcmVzdWx0cyBhbmQKcG9zc2libGUgbmV0d29yayBlcnJvcnMgKG9i
dGFpbmVkIHZpYSBXU0FHZXRMYXN0RXJyb3IoKSkuIFVuaXF1ZSBudW1iZXJzIGluIHJlZCByZWN0
YW5nbGVzIGFyZSB1c2VkIHRvCmlkZW50aWZ5IHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBuZXR3
b3JraW5nIHJvdXRpbmUuCgpUaGUgY29kZSBvZiB0aGUgb3JjaGVzdHJhdG9yIGV2b2x2ZWQgaW4g
bWFueSBhc3BlY3RzIHNpbmNlIDIwMTEuIE9uZSBvZiB0aGUgbm90YWJsZQpkaWZmZXJlbmNlcyBp
cyBhIGh1Z2UgbGlzdCBvZiBIVFRQIFVzZXItQWdlbnQgc3RyaW5ncyB0aGF0IGFyZSBub3cgdXNl
ZCBpbnN0ZWFkIG9mIGEgc2luZ2xlCmhhcmQtY29kZWQgb25lOgoKRm9yIGFueSBpbnF1aXJpZXMs
IHBsZWFzZSBjb250YWN0IGludGVscmVwb3J0c0BrYXNwZXJza3kuY29tCgoMNDEKClRoZSBEdXF1
IDIuMApUZWNobmljYWwgRGV0YWlscwoKVGhlIGF1dGhvcnMgYWxzbyBtb2RpZmllZCB0aGUg4oCc
bWFnaWPigJ0gdHdvLWJ5dGUgdmFsdWUgdGhhdCBpZGVudGlmaWVzIGVuY3J5cHRlZCBuZXR3b3Jr
CnRyYWZmaWM6IOKAnFNI4oCdIHdhcyByZXBsYWNlZCB3aXRoIGEgbW9yZSBuZXV0cmFsIGFuZCBo
YXJkZXIgdG8gdHJhY2Ug4oCcV1figJ06CgpDb2RlIHRoYXQgdmVyaWZpZXMgdGhlIOKAnG1hZ2lj
4oCdIHZhbHVlIGluIG5ldHdvcmsgdHJhZmZpYy4KVGhlIGNoYXJzIGFyZSBzd2FwcGVkIGR1ZSB0
byBsaXR0bGUtZW5kaWFubmVzcyBvZiBkYXRhIGluIHg4Ni82NCBhcmNoaXRlY3R1cmVzLgoKQm90
aCBEdXF1IGFuZCBEdXF1IDIuMCB1c2Ugc3BlY2lhbCBzdHJ1Y3R1cmVzIHRvIGlkZW50aWZ5IHRo
ZSBpbnRlcmZhY2VzIG9mIHRoZWlyIHBsdWdpbnMuClRoZSBvcmNoZXN0cmF0b3IgYWxzbyBoYXMg
b25lIGZvciB0aGUg4oCcY29yZeKAnSBwbHVnaW4gdGhhdCBpcyBjb21waWxlZCBpbiBpdHMgY29k
ZS4gVGhlCm5ld2VyIHZlcnNpb24gaGFzIGEgc2xpZ2h0bHkgYmlnZ2VyIHRhYmxlLCBoZW5jZSBt
b3JlIGZ1bmN0aW9ucywgYW5kIGEgZGlmZmVyZW50IG5vdGF0aW9uCmZvciBkZXNjcmliaW5nIHRo
ZSBwbHVnaW4gZmVhdHVyZXMuIFNwZWNpYWwgc3RyaW5ncyAoaS5lLiDigJxBODg4QTg+QOKAnSkg
ZGVzY3JpYmUgZWFjaApmdW5jdGlvbuKAmXMgc2lnbmF0dXJlLiBUaGUgb2xkZXIgRHVxdSBoYWQg
Y29udGFpbmVkIHNpbWlsYXIgc3RyaW5ncyBpbiBiaW5hcnkgKHVucmVhZGFibGUpCmZvcm0uCgpE
YXRhIHN0cnVjdHVyZSB0aGF0IGRlc2NyaWJlcyB0aGUg4oCcY29yZeKAnSBwbHVnaW4gb2YgRHVx
dSBhbmQgdHdvIGRpZmZlcmVudCB2ZXJzaW9uIG9mIER1cXUgMi4wLgpOb3RlIHRoZSBzYW1lIGNv
bnN0YW50cyBhbmQgc2ltaWxhciBmdW5jdGlvbnMuCgpGb3IgYW55IGlucXVpcmllcywgcGxlYXNl
IGNvbnRhY3QgaW50ZWxyZXBvcnRzQGthc3BlcnNreS5jb20KCgw0MgoKVGhlIER1cXUgMi4wClRl
Y2huaWNhbCBEZXRhaWxzCgpUaGUgRHVxdSBDJkMgY29kZSBtYWtlcyB1c2Ugb2Ygc21hbGwgaW1h
Z2UgZmlsZXMgdG8gaGlkZSBpdHMgY29tbXVuaWNhdGlvbnMgb3Zlcgp1bmVuY3J5cHRlZCBjaGFu
bmVscywgaS5lLiBIVFRQLiBUaGUgb3JpZ2luYWwgRHVxdSB1c2VkIGEgSlBFRyBmaWxlLCBhbmQg
a25vd24gdmVyc2lvbnMKb2YgRHVxdSAyLjAgdXNlIGEgc2ltaWxhciBKUEVHIGZpbGUgYXMgd2Vs
bCBhcyBhIG5ldywgbGFyZ2VyIEdJRiBmaWxlLiBBbHNvLCB0aGUgbGF5b3V0IG9mIHRoZQpkYXRh
IHNlY3Rpb24gZGlkIG5vdCBjaGFuZ2UgbXVjaDogdGhlIGltYWdlIGRhdGEgaXMgcHJlY2VkZWQg
Ynkgc2hvcnQgQUVTIGVuY3J5cHRpb24Ka2V5cyAoc3RyaW5nIOKAnHNoMTIzNDU24oCdIGluIER1
cXUsIHR3byBiaW5hcnkgRFdPUkRzIGluIER1cXUgMi4wKSBmb2xsb3dlZCBieSB0aGUgTFpPCnZl
cnNpb24gc3RyaW5nIOKAnDIuMDPigJ0uCgpJbWFnZSBkYXRhIHVzZWQgZm9yIGhpZGluZyBDJkMg
Y29tbXVuaWNhdGlvbiBpbiB0aGVtOiBKUEVHIGluIER1cXUsIHNpbWlsYXIgSlBFRyBpbiBEdXF1
IEJldCBhbmQKR0lGIGluIGEgZGlmZmVyZW50IHZlcnNpb24gb2YgRHVxdSBCZXQuIE5vdGUgdGhl
IHByZWNlZGluZyBMWk8gdmVyc2lvbiBzdHJpbmcg4oCcMi4wM+KAnSBhbmQgZW5jcnlwdGlvbiBr
ZXlzLgoKVGhlIGxhcmdlIG51bWJlciBvZiBzaW1pbGFyaXRpZXMgYmV0d2VlbiB0aGUgRHVxdSAy
MDExIGNvZGUgYW5kIHRoZSBuZXcgRHVxdSAyLjAKc2FtcGxlcyBpbmRpY2F0ZXMgdGhhdCB0aGUg
bmV3IGNvZGUgcmVwcmVzZW50cyBhIG5ldyBpdGVyYXRpb24gb2YgdGhlIG1hbHdhcmUgcGxhdGZv
cm0uClRoZSBuZXcgdmVyc2lvbiBjb3VsZCBub3QgaGF2ZSBiZWVuIGJ1aWx0IHdpdGhvdXQgYWNj
ZXNzIHRvIHRoZSAyMDExIER1cXUgc291cmNlCmNvZGUuIEhlbmNlLCB3ZSBjb25jbHVkZSB0aGF0
IHRoZSBhdXRob3JzIGFyZSB0aGUgc2FtZSBvciB3b3JraW5nIHRvZ2V0aGVyLgoKVmljdGltcyBv
ZiBEdXF1IDIuMApWaWN0aW1zIG9mIER1cXUgMi4wIHdlcmUgZm91bmQgaW4gc2V2ZXJhbCBwbGFj
ZXMsIGluY2x1ZGluZyB3ZXN0ZXJuIGNvdW50cmllcywgdGhlCk1pZGRsZSBFYXN0IGFuZCBBc2lh
LiBUaGUgYWN0b3IgYXBwZWFycyB0byBjb21wcm9taXNlIGJvdGggZmluYWwgYW5kIHV0aWxpdGFy
aWFuIHRhcmdldHMsCndoaWNoIGFsbG93IHRoZW0gdG8gaW1wcm92ZSB0aGVpciBjeWJlciBjYXBh
YmlsaXRpZXMuCk1vc3Qgb2YgdGhlIGZpbmFsIHRhcmdldHMgYXBwZWFyIHRvIGJlIHNpbWlsYXIg
dG8gdGhlaXIgMjAxMSBnb2FscyDigJMgd2hpY2ggaXMgdG8gc3B5IG9uCklyYW7igJlzIG51Y2xl
YXIgcHJvZ3JhbS4gU29tZSBvZiB0aGUgbmV3IDIwMTQtMjAxNSBpbmZlY3Rpb25zIGFyZSBsaW5r
ZWQgdG8gdGhlIFA1KzEKZXZlbnRzIGFuZCB2ZW51ZXMgcmVsYXRlZCB0byB0aGUgbmVnb3RpYXRp
b25zIHdpdGggSXJhbiBhYm91dCBhIG51Y2xlYXIgZGVhbC4gVGhlIHRocmVhdAphY3RvciBiZWhp
bmQgRHVxdSBhcHBlYXJzIHRvIGhhdmUgbGF1bmNoZWQgYXR0YWNrcyBhdCB0aGUgdmVudWVzIGZv
ciBzb21lIG9mIHRoZXNlCmhpZ2ggbGV2ZWwgdGFsa3MuIEluIGFkZGl0aW9uIHRvIHRoZSBQNSsx
IGV2ZW50cywgdGhlIER1cXUgMi4wIGdyb3VwIGhhcyBsYXVuY2hlZCBhIHNpbWlsYXIKYXR0YWNr
IGluIHJlbGF0aW9uIHRvIHRoZSA4NzB0aCBhbm5pdmVyc2FyeSBldmVudCBvZiB0aGUgbGliZXJh
dGlvbiBvZiBBdXNjaHdpdHotQmlya2VuYXUuCgo4CQoKaHR0cDovLzcwLmF1c2Nod2l0ei5vcmcv
aW5kZXgucGhwP2xhbmc9ZW4KCkZvciBhbnkgaW5xdWlyaWVzLCBwbGVhc2UgY29udGFjdCBpbnRl
bHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoKDDQzCgpUaGUgRHVxdSAyLjAKVGVjaG5pY2FsIERldGFp
bHMKClRoZSBvdGhlciB0eXBlIG9mIHRhcmdldHMgZm9yIHRoZSBuZXcgYXR0YWNrcyBhcmUgd2hh
dCB3ZSBjYWxsIOKAnHV0aWxpdGFyaWFu4oCdIHRhcmdldHMuIFRoZXNlCmFyZSBjb21wYW5pZXMg
dGhhdCB0aGUgYXR0YWNrZXJzIGNvbXByb21pc2UgdG8gaW1wcm92ZSB0aGVpciBjeWJlciBjYXBh
YmlsaXRpZXMuCkZvciBpbnN0YW5jZSwgaW4gMjAxMSwgdGhlIGF0dGFja2VycyBjb21wcm9taXNl
ZCBhIGNlcnRpZmljYXRlIGF1dGhvcml0eSBpbiBIdW5nYXJ5OwpvYnZpb3VzbHksIHRoaXMgd291
bGQgYWxsb3cgdGhlbSB0byBnZW5lcmF0ZSBkaWdpdGFsIGNlcnRpZmljYXRlcywgd2hpY2ggY2Fu
IGJlIGZ1cnRoZXIKdXNlZCB0byBzaWduIG1hbHdhcmUgc2FtcGxlcy4gVGhlIHNhbWUgcGF0dGVy
biBjYW4gYmUgc2VlbiB3aXRoIHRoZSBEdXF1IDIuMAppbmZlY3Rpb25zLiBTb21lIG9mIHRoZSBj
b21wYW5pZXMgaW5mZWN0ZWQgd2l0aCBEdXF1IDIuMCBvcGVyYXRlIGluIHRoZSBzZWN0b3Igb2YK
SW5kdXN0cmlhbCBDb250cm9sIFN5c3RlbXMgYXMgd2VsbCBhcyBpbmR1c3RyaWFsIGNvbXB1dGVy
cy4KCkF0dHJpYnV0aW9uCkFzIHVzdWFsLCBhdHRyaWJ1dGlvbiBvZiBjeWJlcmF0dGFja3Mgb3Zl
ciB0aGUgSW50ZXJuZXQgaXMgYSBkaWZmaWN1bHQgdGFzay4gSW4gdGhlIGNhc2Ugb2YKRHVxdSwg
dGhlIGF0dGFja2VycyB1c2UgbXVsdGlwbGUgcHJveGllcyBhbmQganVtcGluZyBwb2ludHMgdG8g
bWFzayB0aGVpciBjb25uZWN0aW9ucy4KVGhpcyBtYWtlcyB0cmFja2luZyBhbiBleHRyZW1lbHkg
Y29tcGxleCBwcm9ibGVtLgpBZGRpdGlvbmFsbHksIHRoZSBhdHRhY2tlcnMgaGF2ZSB0cmllZCB0
byBpbmNsdWRlIHNldmVyYWwgZmFsc2UgZmxhZ3MgdGhyb3VnaG91dCB0aGUgY29kZSwKZGVzaWdu
ZWQgdG8gc2VuZCByZXNlYXJjaGVycyBpbiB0aGUgd3JvbmcgZGlyZWN0aW9uLiBGb3IgaW5zdGFu
Y2UsIG9uZSBvZiB0aGUgZHJpdmVycwpjb250YWlucyB0aGUgc3RyaW5nIOKAnHVnbHkuZ29yaWxs
YeKAnSwgd2hpY2ggb2J2aW91c2x5IHJlZmVycyB0byA5V2FuZyBEb25nLCBhIENoaW5lc2UKaGFj
a2VyIGJlbGlldmVkIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCB0aGUgQVBUMS9Db21tZW50IENyZXcu
IFRoZSB1c2FnZSBvZiB0aGUKQ2FtZWxsaWEgY3lwaGVyIGluIHRoZSBNU0kgVkZTZXMsIHByZXZp
b3VzbHkgc2VlbiBpbiBBUFQxLWFzc29jaWF0ZWQgUG9pc29uIEl2eSBzYW1wbGVzCmlzIGFub3Ro
ZXIgZmFsc2UgZmxhZyBwbGFudGVkIGJ5IHRoZSBhdHRhY2tlcnMgdG8gbWFrZSByZXNlYXJjaGVy
cyBiZWxpZXZlIHRoZXkgYXJlIGRlYWxpbmcKd2l0aCBBUFQxIHJlbGF0ZWQgbWFsd2FyZS4gVGhl
IOKAnHJvbWFuaWFuLmFudGloYWNrZXLigJ0gc3RyaW5nIHVzZWQgaW4gdGhlIOKAnHBvcnRzZXJ2
LnN5c+KAnQpkcml2ZXIgaXMgcHJvYmFibHkgZGVzaWduZWQgdG8gbWltaWMg4oCcdzAwdHcwMHQu
YXQuYmxhY2toYXRzLnJvbWFuaWFuLmFudGktc2Vj4oCdIHJlcXVlc3RzCnRoYXQgYXJlIG9mdGVu
IHNlZW4gaW4gc2VydmVyIGxvZ3Mgb3Igc2ltcGx5IHBvaW50IHRvIGFuIGFsbGVnZWQgUm9tYW5p
YW4gb3JpZ2luIG9mIHRoZQphdHRhY2suIFRoZSB1c2FnZSBvZiByYXJlIGNvbXByZXNzaW9uIGFs
Z29yaXRobXMgY2FuIGFsc28gZGVjZXB0aXZlLiBGb3IgaW5zdGFuY2UsIHRoZQpMWkpCIGFsZ29y
aXRobSB1c2VkIGluIHNvbWUgb2YgdGhlIHNhbXBsZXMgaXMgcmFyZWx5IHNlZW4gaW4gbWFsd2Fy
ZSBzYW1wbGVzOyBpdCBoYXMKYmVlbiB1c2VkIGJ5IE1pbmlEdWtlIHdoaWNoIHdlIHJlcG9ydGVk
IGluIGVhcmx5IDIwMTMuCk5ldmVydGhlbGVzcywgc3VjaCBmYWxzZSBmbGFncyBhcmUgcmVsYXRp
dmVseSBlYXN5IHRvIHNwb3QsIGVzcGVjaWFsbHkgd2hlbiB0aGUgYXR0YWNrZXIgaXMKZXh0cmVt
ZWx5IGNhcmVmdWwgbm90IHRvIG1ha2UgYW55IG90aGVyIG1pc3Rha2VzLgpEdXJpbmcgb3VyIDIw
MTEgYW5hbHlzaXMsIHdlIG5vdGljZWQgdGhhdCB0aGUgbG9ncyBjb2xsZWN0ZWQgZnJvbSBzb21l
IG9mIHRoZSBwcm94aWVzCmluZGljYXRlZCB0aGUgYXR0YWNrZXJzIGFwcGVhciB0byB3b3JrIGxl
c3Mgb24gRnJpZGF5cyBhbmQgZGlkbuKAmXQgYXBwZWFyIHRvIHdvcmsgYXQgYWxsIG9uClNhdHVy
ZGF5cywgd2l0aCB0aGVpciByZWd1bGFyIHdvcmsgd2VlayBzdGFydGluZyBvbiBTdW5kYXkuIFRo
ZXkgYWxzbyBjb21waWxlZCBiaW5hcmllcwpvbiBKYW51YXJ5IDFzdCwgaW5kaWNhdGluZyBpdCB3
YXMgcHJvYmFibHkgYSBub3JtYWwgd29yayBkYXkgZm9yIHRoZW0uIFRoZSBjb21waWxhdGlvbgp0
aW1lc3RhbXBzIGluIHRoZSBiaW5hcmllcyBzZWVtZWQgdG8gc3VnZ2VzdCBhIHRpbWUgem9uZSBv
ZiBHTVQrMiBvciBHTVQrMy4gRmluYWxseSwKdGhlaXIgYXR0YWNrcyB3b3VsZCBub3JtYWxseSBv
Y2N1ciBvbiBXZWRuZXNkYXlzLCB3aGljaCBpcyB3aHkgd2Ugb3JpZ2luYWxseSBjYWxsZWQKdGhl
bSB0aGUg4oCcV2VkbmVzZGF5IEdhbmfigJ0uIFdoaWxlIHRoZSAyMDE0IGF0dGFjayBhZ2FpbnN0
IEthc3BlcnNreSBMYWIgYWxzbyB0b29rCnBsYWNlIG9uIGEgV2VkbmVzZGF5LCB0aGUgZ2FuZyBt
YWRlIGh1Z2UgT1BTRUMgaW1wcm92ZW1lbnRzIGNvbXBhcmVkIHRvIHRoZWlyCm9sZGVyIDIwMTEg
b3BlcmF0aW9ucywgaW5jbHVkaW5nIGZha2luZyBhbGwgdGhlIHRpbWVzdGFtcHMgaW4gUEUgZmls
ZXMsIHJlbW92aW5nIHRoZSBkZWJ1ZwpwYXRocyBhbmQgaW50ZXJuYWwgbW9kdWxlIG5hbWVzIGZv
ciBhbGwgcGx1Z2lucy4KVGhlIDIwMTQgRHVxdSAyLjAgYmluYXJpZXMgY29udGFpbiBzZXZlcmFs
IHN0cmluZ3MgaW4gYWxtb3N0IHBlcmZlY3QgRW5nbGlzaCBidXQgb25lIG9mCnRoZW0gaGFzIGEg
bWlub3IgbWlzdGFrZSBpbmRpY2F0aW5nIHRoZSBpbnZvbHZlbWVudCBvZiBub24tbmF0aXZlIHNw
ZWFrZXJzLiBUaGUgdXNhZ2UKb2Yg4oCcRXhjY2VlZGVk4oCdIGluc3RlYWQgb2Yg4oCcRXhjZWVk
ZWTigJ0gaW4gdGhlIGZpbGUtaGFydmVzdGluZyBtb2R1bGUgb2YgRHVxdSAyLjAgaXMgdGhlCm9u
bHkgbGFuZ3VhZ2UgbWlzdGFrZSB3ZSBvYnNlcnZlZC4KCjkJCgpodHRwOi8vd3d3LmZiaS5nb3Yv
d2FudGVkL2N5YmVyL3dhbmctZG9uZy92aWV3CgpGb3IgYW55IGlucXVpcmllcywgcGxlYXNlIGNv
bnRhY3QgaW50ZWxyZXBvcnRzQGthc3BlcnNreS5jb20KCgw0NAoKVGhlIER1cXUgMi4wClRlY2hu
aWNhbCBEZXRhaWxzCgpNaXNzcGVsbGluZyBvZiB0aGUgd29yZCDigJxFeGNlZWRlZOKAnSBpbiBE
dXF1IDIuMC4KCk1vc3QgaW50ZXJlc3RpbmcsIG9uZSBvZiB0aGUgdmljdGltcyBhcHBlYXIgdG8g
aGF2ZSBiZWVuIGluZmVjdGVkIGJvdGggYnkgdGhlIEVxdWF0aW9uCkdyb3VwIGFuZCBieSB0aGUg
RHVxdSBncm91cCBhdCB0aGUgc2FtZSB0aW1lOyB0aGlzIHN1Z2dlc3RzIHRoZSB0d28gZW50aXRp
ZXMgYXJlCmRpZmZlcmVudCBhbmQgY29tcGV0aW5nIHdpdGggZWFjaCBvdGhlciB0byBvYnRhaW4g
aW5mb3JtYXRpb24gZnJvbSB0aGlzIHZpY3RpbS4KCkNvbmNsdXNpb25zCkR1cmluZyB0aGUgMjAx
MSBEdXF1IGF0dGFja3MsIHdlIGNvbmNsdWRlZCB0aGF0IGl0cyBtYWluIHB1cnBvc2UgY291bGQg
aGF2ZSBiZWVuIHRvCnNweSBvbiBJcmFu4oCZcyBudWNsZWFyIHByb2dyYW0uIFNvbWUgb2YgdGhl
IHZpY3RpbXMgYXBwZWFyIHRvIGhhdmUgYmVlbiDigJx1dGlsaXRhcnnigJ0sIHN1Y2gKYXMgb25l
IGNlcnRpZmljYXRlIGF1dGhvcml0eSBpbiBIdW5nYXJ5LCB3aGljaCB3YXMgY29tcHJvbWlzZWQg
YnkgRHVxdSBhbmQgdWx0aW1hdGVseQp0aGF0IGxlZCB0byBpdHMgZGlzY292ZXJ5LiBUaGUgZ3Jv
dXAgYmVoaW5kIER1cXUgaGFja3MgdGhlc2Ug4oCcdXRpbGl0YXJ54oCdIHZpY3RpbXMgaW4gb3Jk
ZXIgdG8KZ2FpbiBjZXJ0YWluIHRlY2huaWNhbCBhYmlsaXRpZXMgc3VjaCBhcyBzaWduaW5nIHRo
ZWlyIG1hbHdhcmUgd2l0aCB0cnVzdGVkIGNlcnRpZmljYXRlcyBvciB0bwpzZXJ2ZSBhcyBwbGF0
Zm9ybXMgZm9yIGZ1cnRoZXIgYXR0YWNrcy4KVGhlIDIwMTQvMjAxNSBEdXF1IDIuMCBhcHBlYXJz
IHRvIGJlIGEgbWFzc2l2ZSBpbXByb3ZlbWVudCBvdmVyIHRoZSBvbGRlciDigJxUaWxkZWTigJ0K
cGxhdGZvcm0sIGFsdGhvdWdoIHRoZSBtYWluIG9yY2hlc3RyYXRvciBhbmQgQyZDIGNvcmUgcmVt
YWlucyBsYXJnZWx5IHVuY2hhbmdlZC4gQmFjawppbiAyMDExIHdlIHBvaW50ZWQgb3V0IHRvIHRo
ZSB1c2FnZSBvZiAxME9iamVjdCBPcmllbnRlZCBDIGFzIGFuIHVudXN1YWwgcHJvZ3JhbW1pbmcK
dGVjaG5pcXVlLiBUaGUgMjAxNCB2ZXJzaW9uIG1haW50YWlucyB0aGUgc2FtZSBjb3JlLCBhbHRo
b3VnaCBzb21lIG5ldyBvYmplY3RzIGluCkMrKyBoYXZlIGJlZW4gYWRkZWQuIFRoZSBjb21waWxl
ciB1c2VkIGluIHRoZSAyMDE0IGlzIG5ld2VyIGFuZCBpdCByZXN1bHRzIGluIGRpZmZlcmVudApj
b2RlIG9wdGltaXphdGlvbnMuIE5ldmVydGhlbGVzcywgdGhlIGNvcmUgcmVtYWlucyB0aGUgc2Ft
ZSBpbiBmdW5jdGlvbmFsaXR5IGFuZCBpdCBpcwpvdXIgYmVsaWVmIGl0IGNvdWxkIG5vdCBoYXZl
IGJlZW4gY3JlYXRlZCBieSBhbnlvbmUgd2l0aG91dCBhY2Nlc3MgdG8gdGhlIG9yaWdpbmFsIER1
cXUKc291cmNlIGNvZGUuIFNpbmNlIHRoZXNlIGhhdmUgbmV2ZXIgYmVlbiBtYWRlIHB1YmxpYyBh
bmQgY29uc2lkZXJpbmcgdGhlIG1haW4gaW50ZXJlc3QKYXBwZWFycyB0byBoYXZlIHJlbWFpbmVk
IHRoZSBzYW1lLCB3ZSBjb25jbHVkZSB0aGUgYXR0YWNrZXJzIGJlaGluZCBEdXF1IGFuZCBEdXF1
CjIuMCBhcmUgdGhlIHNhbWUuClRoZSB0YXJnZXRpbmcgb2YgS2FzcGVyc2t5IExhYiByZXByZXNl
bnRzIGEgaHVnZSBzdGVwIGZvciB0aGUgYXR0YWNrZXJzIGFuZCBhbiBpbmRpY2F0b3IKb2YgaG93
IHF1aWNrIHRoZSBjeWJlci1hcm1zIHJhY2UgaXMgZXNjYWxhdGluZy4gQmFjayBpbiAyMDExIGFu
ZCAyMDEzIHJlc3BlY3RpdmVseSwgMTFSU0EKYW5kIDEyQml0OSwgd2VyZSBoYWNrZWQgYnkgQ2hp
bmVzZS1sYW5ndWFnZSBBUFQgZ3JvdXBzLCBob3dldmVyLCBzdWNoIGluY2lkZW50cwp3ZXJlIGNv
bnNpZGVyZWQgcmFyZS4gSW4gZ2VuZXJhbCwgYW4gYXR0YWNrZXIgcmlza3MgYSBsb3QgdGFyZ2V0
aW5nIGEgc2VjdXJpdHkgY29tcGFueQrigJMgYmVjYXVzZSB0aGV5IGNhbiBnZXQgY2F1Z2h0IGFu
ZCBleHBvc2VkLiBUaGUgZXhhY3QgcmVhc29uIHdoeSBLYXNwZXJza3kgTGFiCndhcyB0YXJnZXRl
ZCBpcyBzdGlsbCBub3QgY2xlYXIg4oCTIGFsdGhvdWdoIHRoZSBhdHRhY2tlcnMgZGlkIHNlZW0g
dG8gZm9jdXMgb24gb2J0YWluaW5nCmluZm9ybWF0aW9uIGFib3V0IEthc3BlcnNreeKAmXMgZnV0
dXJlIHRlY2hub2xvZ2llcywgU2VjdXJlIE9TLCBhbnRpLUFQVCBzb2x1dGlvbnMsIEtTTgphbmQg
QVBUIHJlc2VhcmNoLgoKMTAJIGh0dHBzOi8vc2VjdXJlbGlzdC5jb20vYmxvZy9yZXNlYXJjaC8z
MjM1NC90aGUtbXlzdGVyeS1vZi1kdXF1LWZyYW1ld29yay1zb2x2ZWQtNy8KMTEJIGh0dHBzOi8v
YmxvZ3MucnNhLmNvbS9hbmF0b215LW9mLWFuLWF0dGFjay8KMTIJIGh0dHBzOi8vYmxvZy5iaXQ5
LmNvbS8yMDEzLzAyLzA4L2JpdDktYW5kLW91ci1jdXN0b21lcnMtc2VjdXJpdHkvCkZvciBhbnkg
aW5xdWlyaWVzLCBwbGVhc2UgY29udGFjdCBpbnRlbHJlcG9ydHNAa2FzcGVyc2t5LmNvbQoKDDQ1
CgpUaGUgRHVxdSAyLjAKVGVjaG5pY2FsIERldGFpbHMKCkZyb20gYSB0aHJlYXQgYWN0b3IgcG9p
bnQgb2YgdmlldywgdGhlIGRlY2lzaW9uIHRvIHRhcmdldCBhIHdvcmxkLWNsYXNzIHNlY3VyaXR5
IGNvbXBhbnkKbXVzdCBiZSBxdWl0ZSBkaWZmaWN1bHQuIE9uIG9uZSBoYW5kLCBpdCBhbG1vc3Qg
c3VyZWx5IG1lYW5zIHRoZSBhdHRhY2sgd2lsbCBiZSBleHBvc2VkIOKAkwppdOKAmXMgdmVyeSB1
bmxpa2VseSB0aGF0IHRoZSBhdHRhY2sgd2lsbCBnbyB1bm5vdGljZWQuIFNvIHRoZSB0YXJnZXRp
bmcgb2Ygc2VjdXJpdHkgY29tcGFuaWVzCmluZGljYXRlcyB0aGF0IGVpdGhlciB0aGV5IGFyZSB2
ZXJ5IGNvbmZpZGVudCB0aGV5IHdvbuKAmXQgZ2V0IGNhdWdodCwgb3IgcGVyaGFwcyB0aGV5IGRv
buKAmXQKY2FyZSBtdWNoIGlmIHRoZXkgYXJlIGRpc2NvdmVyZWQgYW5kIGV4cG9zZWQuIEJ5IHRh
cmdldGluZyBLYXNwZXJza3kgTGFiLCB0aGUgRHVxdQphdHRhY2tlcnMgaGF2ZSBwcm9iYWJseSB0
YWtlbiBhIGh1Z2UgYmV0IGhvcGluZyB0aGV54oCZZCByZW1haW4gdW5kaXNjb3ZlcmVkOyBhbmQg
bG9zdC4KRm9yIGEgc2VjdXJpdHkgY29tcGFueSwgb25lIG9mIHRoZSBtb3N0IGRpZmZpY3VsdCB0
aGluZ3MgaXMgdG8gYWRtaXQgZmFsbGluZyB2aWN0aW0gdG8gYQptYWx3YXJlIGF0dGFjay4gQXQg
S2FzcGVyc2t5IExhYiwgd2Ugc3Ryb25nbHkgYmVsaWV2ZSBpbiB0cmFuc3BhcmVuY3ksIHdoaWNo
IGlzIHdoeQp3ZSBhcmUgcHVibGlzaGluZyB0aGUgaW5mb3JtYXRpb24gaGVyZWluLiBGb3IgdXMs
IHRoZSBzZWN1cml0eSBvZiBvdXIgdXNlcnMgcmVtYWlucyB0aGUKbW9zdCBpbXBvcnRhbnQgdGhp
bmcg4oCTIGFuZCB3ZSB3aWxsIGNvbnRpbnVlIHRvIHdvcmsgaGFyZCB0byBtYWludGFpbiB5b3Vy
IHRydXN0IGFuZApjb25maWRlbmNlLgoKUmVmZXJlbmNlcwoxLgkgRHVxdTogQSBTdHV4bmV0LWxp
a2UgbWFsd2FyZSBmb3VuZCBpbiB0aGUgd2lsZCBodHRwczovL3d3dy5jcnlzeXMuaHUvcHVibGlj
YXRpb25zLwpmaWxlcy9iZW5jc2F0aFBCRjExZHVxdS5wZGYKMi4JIER1cXU6IFRoZSBQcmVjdXJz
b3IgdG8gdGhlIG5leHQgU3R1eG5ldCBodHRwOi8vd3d3LnN5bWFudGVjLmNvbS9jb250ZW50L2Vu
L3VzLwplbnRlcnByaXNlL21lZGlhL3NlY3VyaXR5X3Jlc3BvbnNlL3doaXRlcGFwZXJzL3czMl9k
dXF1X3RoZV9wcmVjdXJzb3JfdG9fdGhlXwpuZXh0X3N0dXhuZXQucGRmCjMuCSBUaGUgTXlzdGVy
eSBvZiBEdXF1OiBQYXJ0IE9uZSBodHRwczovL3NlY3VyZWxpc3QuY29tL2Jsb2cvaW5jaWRlbnRz
LzMxMTc3L3RoZW15c3Rlcnktb2YtZHVxdS1wYXJ0LW9uZS01Lwo0LgkgVGhlIE15c3Rlcnkgb2Yg
RHVxdTogUGFydCBUd28gaHR0cHM6Ly9zZWN1cmVsaXN0LmNvbS9ibG9nL2luY2lkZW50cy8zMTQ0
NS90aGVteXN0ZXJ5LW9mLWR1cXUtcGFydC10d28tMjMvCjUuCSBUaGUgTXlzdGVyeSBvZiBEdXF1
OiBQYXJ0IFRocmVlIGh0dHBzOi8vc2VjdXJlbGlzdC5jb20vYmxvZy9pbmNpZGVudHMvMzE0ODYv
dGhlbXlzdGVyeS1vZi1kdXF1LXBhcnQtdGhyZWUtOS8KNi4JIFRoZSBNeXN0ZXJ5IG9mIER1cXU6
IFBhcnQgRml2ZSBodHRwczovL3NlY3VyZWxpc3QuY29tL2Jsb2cvaW5jaWRlbnRzLzMxMjA4L3Ro
ZW15c3Rlcnktb2YtZHVxdS1wYXJ0LWZpdmUtNi8KNy4JIFRoZSBNeXN0ZXJ5IG9mIER1cXU6IFBh
cnQgU2l4IChUaGUgQ29tbWFuZCBhbmQgQ29udHJvbCBTZXJ2ZXJzKSBodHRwczovL3NlY3VyZWxp
c3QuCmNvbS9ibG9nL2luY2lkZW50cy8zMTg2My90aGUtbXlzdGVyeS1vZi1kdXF1LXBhcnQtc2l4
LXRoZS1jb21tYW5kLWFuZGNvbnRyb2wtc2VydmVycy0zNi8KOC4JIFRoZSBNeXN0ZXJ5IG9mIER1
cXU6IFBhcnQgVGVuIGh0dHBzOi8vc2VjdXJlbGlzdC5jb20vYmxvZy9pbmNpZGVudHMvMzI2Njgv
dGhlbXlzdGVyeS1vZi1kdXF1LXBhcnQtdGVuLTE4Lwo5LgkgVGhlIE15c3Rlcnkgb2YgRHVxdSBG
cmFtZXdvcmsgU29sdmVkIGh0dHBzOi8vc2VjdXJlbGlzdC5jb20vYmxvZy9yZXNlYXJjaC8zMjM1
NC8KdGhlLW15c3Rlcnktb2YtZHVxdS1mcmFtZXdvcmstc29sdmVkLTcvCjEwLgkgVGhlIER1cXUg
U2FnYSBDb250aW51ZXMgaHR0cHM6Ly9zZWN1cmVsaXN0LmNvbS9ibG9nL2luY2lkZW50cy8zMTQ0
Mi90aGUtZHVxdXNhZ2EtY29udGludWVzLWVudGVyLW1yLWItamFzb24tYW5kLXR2cy1kZXh0ZXIt
MjIvCgpGb3IgYW55IGlucXVpcmllcywgcGxlYXNlIGNvbnRhY3QgaW50ZWxyZXBvcnRzQGthc3Bl
cnNreS5jb20KCgxTZWN1cmVsaXN0LCB0aGUgcmVzc291cmNlCmZvciBLYXNwZXJza3kgTGFiIGV4
cGVydHPigJkKdGVjaG5pY2FsIHJlc2VhcmNoLCBhbmFseXNpcwphbmQgdGhvdWdodHMKCkthc3Bl
cnNreSBMYWIgQjJDIEJsb2cKCkthc3BlcnNreSBMYWIgc2VjdXJpdHkgbmV3cwpzZXJ2aWNlCgpF
dWdlbmUgS2FzcGVyc2t5IEJsb2cKCkthc3BlcnNreSBMYWIKQjJCIEJsb2cKCkthc3BlcnNreSBM
YWIgQWNhZGVteQoKS2FzcGVyc2t5IExhYiwgTW9zY293LCBSdXNzaWEKd3d3Lmthc3BlcnNreS5j
b20KCkFsbCBhYm91dCBJbnRlcm5ldCBzZWN1cml0eToKd3d3LnNlY3VyZWxpc3QuY29tCgpLYXNw
ZXJza3kgTGFiIEhRCgpGb2xsb3cgdXMKCjM5QS8zIExlbmluZ3JhZHNrb2UgU2hvc3NlCk1vc2Nv
dywgMTI1MjEyClJ1c3NpYW4gRmVkZXJhdGlvbgpNb3JlIGNvbnRhY3QgZGV0YWlscwpUZWw6ICs3
LTQ5NS03OTctODcwMApGYXg6ICs3LTQ5NS03OTc4NzA5CgpGaW5kIGEgcGFydG5lciBuZWFyIHlv
dToKd3d3Lmthc3BlcnNreS5jb20vYnV5b2ZmbGluZQoKVHdpdHRlci5jb20vS2FzcGVyc2t5CgpG
YWNlYm9vay5jb20vS2FzcGVyc2t5CgpZb3V0dWJlLmNvbS9LYXNwZXJza3kKCsKpIDIwMTUgS2Fz
cGVyc2t5IExhYi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4gUmVnaXN0ZXJlZCB0cmFkZW1hcmtzIGFu
ZCBzZXJ2aWNlIG1hcmtzIGFyZSB0aGUgcHJvcGVydHkgb2YgdGhlaXIgcmVzcGVjdGl2ZSBvd25l
cnMuCkxvdHVzIGFuZCBEb21pbm8gYXJlIHRyYWRlbWFya3Mgb2YgSW50ZXJuYXRpb25hbCBCdXNp
bmVzcyBNYWNoaW5lcyBDb3Jwb3JhdGlvbiwgcmVnaXN0ZXJlZCBpbiBtYW55IGp1cmlzZGljdGlv
bnMgd29ybGR3aWRlLgpMaW51eGlzIHRoZSByZWdpc3RlcmVkIHRyYWRlbWFyayBvZiBMaW51cyBU
b3J2YWxkcyBpbiB0aGUgVS5TLiBhbmQgb3RoZXIgY291bnRyaWVzLiBHb29nbGUgaXMgYSByZWdp
c3RlcmVkIHRyYWRlbWFyayBvZiBHb29nbGUsIEluYy4KCgw=
--001a11c34a7a3e02fa05182d64d7--

