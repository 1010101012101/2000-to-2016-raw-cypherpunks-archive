From owner-cypherpunks@Algebra.COM  Sat Jan 13 18:25:27 2001
Received: from MIT.EDU (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.69.0.28])
	by positron.mit.edu (8.9.3/8.9.3) with SMTP id SAA02172
	for <kwantam@positron.mit.edu>; Sat, 13 Jan 2001 18:25:27 -0500
Received: from ak47.algebra.com by MIT.EDU with SMTP
	id AA11807; Sat, 13 Jan 01 18:27:17 EST
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f0DNMs418034
	for cypherpunks-outgoing; Sat, 13 Jan 2001 17:22:54 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from waste.minder.net (root@fw.minder.net [216.25.149.98])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f0DNMqm17950
	for <cypherpunks@algebra.com>; Sat, 13 Jan 2001 17:22:52 -0600
Received: (from cpunks@localhost)
	by waste.minder.net (8.9.3/8.9.3) id UAA08569
	for cypherpunks@algebra.com; Fri, 12 Jan 2001 20:18:19 -0500
Received: from einstein.ssz.com (cpunks@einstein.ssz.com [204.96.2.99])
	by waste.minder.net (8.9.3/8.9.3) with ESMTP id UAA08557
	for <cpunks@minder.net>; Fri, 12 Jan 2001 20:18:16 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id TAA26819
	for cpunks@minder.net; Fri, 12 Jan 2001 19:24:36 -0600
Received: from domains.invweb.net (root@domains.invweb.net [198.182.196.32])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id TAA26815
	for <cpunks@einstein.ssz.com>; Fri, 12 Jan 2001 19:24:35 -0600
Received: (from openpgp@localhost)
	by domains.invweb.net (8.9.3/8.9.3) id UAA23861;
	Fri, 12 Jan 2001 20:09:42 -0500
Date: Fri, 12 Jan 2001 20:09:42 -0500
Message-Id: <3.0.6.32.20010112170626.007db100@pop.sprynet.com>
Reply-To: cypherpunks@openpgp.net
Originator: cypherpunks@openpgp.net
From: David Honig <honig@sprynet.com>
To: Multiple recipients of list <cypherpunks@openpgp.net>
Old-Subject: Re: Consensus Actions in Cipherspace?
X-Listprocessor-Version: 6.0 -- ListProcessor by Anastasios Kotsikonas
X-Comment: All list traffic is being monitored by the FEDS!!
Content-Type: text/plain; charset="us-ascii"
In-Reply-To: <Pine.LNX.4.21.0101121427410.4561-100000@bolt.sonic.net>
X-Loop: openpgp.net
Old-Subject:  Re: Consensus Actions in Cipherspace?
Subject:   Re: Consensus Actions in Cipherspace?
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1804
Lines: 60


At 06:01 PM 1/12/01 -0500, Ray Dillinger wrote:
>
>Crucial facts about a protocol that does the right thing would be: 
>
>1) DOES NOT create any single priveleged user or machine. 
>
>2) Resistant to denial-of-service attacks and attempts to 
>   "stack the vote." (Requires user authentication)
>
>3) No altered versions of the agent ought to be able to gather
>   enough information to force an action as long as at least 
>   the majority of agents are unaltered.
>
>4) Once a consensus is reached, a majority of the agents acting
>   together should be able to take whatever action is found
>   even if the dissenters' agents don't cooperate with them.
>   (a consensus reassembles a key?  But then that key can't 
>   be used again, what's the next key?)
>

Interesting idea.  Starting with 1 user who can admit (by virtue 
of having 100% of the vote) and then letting the users vote
to add others.  

I don't think reassembling the key is the final stage.  I think
the server could simply use a voting protocol to get (or timeout) 
permission to do proposed actions.  We are assuming that the server
is trusted, right?  

The server could send signed PGP-encrypted email to all members saying: 
"The following script has been proposed to be run by GroupServer for your
Group.. to vote yes or no, sign a yes or no message and encrypt and send it
to GroupServer.  This vote closes in 3 days, and votes are acknowleged
immediately."


Perhaps I'm not clear on what constitutes an action that could
be distributed without relying on a trusted actor (server).  

(Thinking out loud) Maybe the actions require access to a distributed
N-of-M database?   How do you prevent someone from reusing the
reconstructed database?  Or uncooperatives refusing to update their slice
of the DB?  




 






  





