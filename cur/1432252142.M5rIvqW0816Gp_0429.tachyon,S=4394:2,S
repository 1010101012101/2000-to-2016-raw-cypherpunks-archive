From owner-cypherpunks@Algebra.COM  Fri May 31 09:57:58 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.mit.edu (8.11.6/8.9.3) with ESMTP id g4VDvwx04443
	for <rsw@jfet.org>; Fri, 31 May 2002 09:57:58 -0400
Received: from ak47.algebra.com (ak47.algebra.com [208.233.99.160])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id JAA17798
	for <rsw@mit.edu>; Fri, 31 May 2002 09:57:44 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g4VDJBKG001173
	for <cypherpunks-outgoing@ak47.algebra.com>; Fri, 31 May 2002 08:19:11 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g4VDJBGp001172
	for cypherpunks-outgoing; Fri, 31 May 2002 08:19:11 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@[207.200.56.4])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g4VDJ9KG001158
	for <cypherpunks@algebra.com>; Fri, 31 May 2002 08:19:09 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id IAA01392
	for cypherpunks@algebra.com; Fri, 31 May 2002 08:22:31 -0500
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id IAA01385
	for cypherpunks-outgoing; Fri, 31 May 2002 08:22:26 -0500
Received: from mx1.eskimo.com (root@mx1.eskimo.com [204.122.16.48])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id IAA01381
	for <cypherpunks@einstein.ssz.com>; Fri, 31 May 2002 08:22:22 -0500
Received: from eskimo.com (eresrch@eskimo.com [204.122.16.13])
	by mx1.eskimo.com (8.9.1a/8.8.8) with ESMTP id GAA06091
	for <cypherpunks@einstein.ssz.com>; Fri, 31 May 2002 06:18:53 -0700
Received: from localhost (eresrch@localhost)
	by eskimo.com (8.9.1a/8.9.1) with ESMTP id GAA16561
	for <cypherpunks@einstein.ssz.com>; Fri, 31 May 2002 06:18:53 -0700 (PDT)
X-Authentication-Warning: eskimo.com: eresrch owned process doing -bs
Date: Fri, 31 May 2002 06:18:52 -0700 (PDT)
From: Mike Rosing <eresrch@eskimo.com>
To: cypherpunks@einstein.ssz.com
Old-Subject: CDR: Re: How can i check the authenticity of a private key
In-Reply-To: <20020531123029.75943.qmail@web21306.mail.yahoo.com>
Message-ID: <Pine.GSU.4.44.0205310611310.15598-100000@eskimo.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-Unsubscription-Info: http://einstein.ssz.com/cdr
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Acceptable-Languages: English, Russian, German, French, Spanish
Subject:  Re: How can i check the authenticity of a private key
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 0 
Status: O
Content-Length: 1370
Lines: 36


On Fri, 31 May 2002, surinder pal singh makkar wrote:

> I am a newbie in cryptography. What I have learnt till
> now is that in assymeric cryptography scenario we have
> a private key and we generate the public key
> corresponding to it and then we send it to the central
> agency.

You don't have to send the public key to a repository,
it's just convienient.

> Suppose after sometime I have a private key and the
> public key. Is there some software tool which can tell
> me whether the public key is the same corresponding to
> the private key I am having. Also is there some tool
> which can tell me whether the keys have been curropted
> or not

With ECC you just recompute the public key from the private
key and make sure it matches what's out in public.  With
RSA you just pick some random value (not zero or 1) and
see if r^(e*d) = 1 mod N, or if you know p and q (where
N = p*q) check that e*d = 1 mod (p-1)*(q-1).  It's the
same thing as encrypting/decrypting something to see if
you get the same thing back.  If not, something is wrong.

I'm not sure how you can tell which key might be corrupted.
For the public side, having the key reside in many places
would do it - you can just check that they are all the same.
so it may well be that saving the public key in a private
place for that purpose is also useful.

Patience, persistence, truth,
Dr. mike


