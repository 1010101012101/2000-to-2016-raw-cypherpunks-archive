From rswatjfet.org+caf_=rsw=jfet.org@gmail.com  Fri May 16 10:30:02 2014
Return-Path: <rswatjfet.org+caf_=rsw=jfet.org@gmail.com>
Received: from mail-ve0-f179.google.com (mail-ve0-f179.google.com [209.85.128.179])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s4GEU1F9027138
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <rsw@jfet.org>; Fri, 16 May 2014 10:30:02 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=R9ee4+Xy;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: by mail-ve0-f179.google.com with SMTP id oy12so3135843veb.38
        for <rsw@jfet.org>; Fri, 16 May 2014 07:28:47 -0700 (PDT)
X-Received: by 10.220.163.3 with SMTP id y3mr14518192vcx.7.1400250527447;
        Fri, 16 May 2014 07:28:47 -0700 (PDT)
X-Forwarded-To: rsw@jfet.org
X-Forwarded-For: rswatjfet.org@gmail.com rsw@jfet.org
Delivered-To: rswatjfet.org@gmail.com
Received: by 10.58.43.231 with SMTP id z7csp21277vel;
        Fri, 16 May 2014 07:28:46 -0700 (PDT)
X-Received: by 10.66.142.132 with SMTP id rw4mr21693175pab.6.1400250525750;
        Fri, 16 May 2014 07:28:45 -0700 (PDT)
Received: from localhost (antiproton.jfet.org. [209.141.47.85])
        by mx.google.com with ESMTPS id sd8si9289884pac.119.2014.05.16.07.28.45
        for <rswATjfet.org@gmail.com>
        (version=TLSv1.2 cipher=RC4-SHA bits=128/128);
        Fri, 16 May 2014 07:28:45 -0700 (PDT)
Received-SPF: neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) client-ip=209.141.47.85;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net;
       dkim=fail header.i=@gmail.com
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s4GEQp79027117;
	Fri, 16 May 2014 10:27:22 -0400
Received: from mail-qg0-f52.google.com (mail-qg0-f52.google.com
 [209.85.192.52])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s4GEQj5u027113
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Fri, 16 May 2014 10:26:47 -0400
Received: by mail-qg0-f52.google.com with SMTP id a108so4258634qge.39
 for <cypherpunks@cpunks.org>; Fri, 16 May 2014 07:25:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:sender:in-reply-to:references:date:message-id:subject
 :from:to:cc:content-type;
 bh=upvFCTLuE7tQY2ydO7ErthPpVUZobdl6Dm20uCm9aIM=;
 b=R9ee4+Xy6Yj2p32WqlTEMbKGjE7VTG8ZoZmciWHFDf/KFwBRIC/c1B9JtPCglVRrY4
 0s/oqvTFqwuYLq7oefbe/MuwJYb6UtYOAGXB/iORk0/cctwJU/LSvZluo86BXHgkfiBf
 P1P0zCZzSBpZkw0mxQ158MFDObJ0Lkd9HxQpyaiUD20dSNg1bs/vCUDuWtBdEQ6CS0Nu
 lnxcR2182hIpuCOCrRQXxyPCf9fbC814Qjlosb64ipa6Ry0VXQyFhREmLzQBCfCCb/Ci
 mEebLrXvqb3/GySUEryc0HmJhqgk+Y4NAe0tO6plXHSs20MYICEChYH/86Pw5elnUXYp
 sGCA==
MIME-Version: 1.0
X-Received: by 10.224.80.195 with SMTP id u3mr23523629qak.37.1400250332424;
 Fri, 16 May 2014 07:25:32 -0700 (PDT)
Received: by 10.229.138.77 with HTTP; Fri, 16 May 2014 07:25:32 -0700 (PDT)
Received: by 10.229.138.77 with HTTP; Fri, 16 May 2014 07:25:32 -0700 (PDT)
In-Reply-To: <CAD2Ti29=3yi3U0XS8dUt8VR1oATtwpLWBkf2byuMyQvxZ8wcWg@mail.gmail.com>
References: <CAJVRA1Q3UnwQm5Q9+tp62i5ZSkxAHqkWU74tZGrV6PuY8yRqXg@mail.gmail.com>
 <CAD2Ti29=3yi3U0XS8dUt8VR1oATtwpLWBkf2byuMyQvxZ8wcWg@mail.gmail.com>
Date: Fri, 16 May 2014 16:25:32 +0200
X-Google-Sender-Auth: _Q4T88dR9PuC7G94rcxRsehMe2U
Message-ID: <CAHWD2r+7i3vxedcrLeW=CFT3xU5nWD4+nYf49No_vmf_VmhasQ@mail.gmail.com>
Subject: Re: scrypt and ASICs
To: grarpamp <grarpamp@gmail.com>
Content-Type: multipart/alternative; boundary=001a11c3dce0a9361f04f9852fd7
Cc: cpunks <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
From: =?UTF-8?Q?Lodewijk_andr=C3=A9_de_la_porte?= <l@odewijk.nl>
X-Gspam-Loop: antiproton.jfet.org
Status: O
Content-Length: 3853
Lines: 86

--001a11c3dce0a9361f04f9852fd7
Content-Type: text/plain; charset=UTF-8

Reconfigurable hard. Just maximize on what videocards do well, then
videocards will do best. There's no other way really. The margins just get
smaller.

Actually... what if you switch algorithm every x blocks? Max different
aspects of a default config PC. That way ASICS would have to be PCs!

So... Maybe we should contact the blender people and them to submit
renders? Another one is sciencecoins, where you solve science questions.
The changes in science question will always mess with asics.

Actually... SETIcoin?
On May 16, 2014 12:42 AM, "grarpamp" <grarpamp@gmail.com> wrote:

> On Thu, May 15, 2014 at 5:59 PM, coderman <coderman@gmail.com> wrote:
> > the other thread mentioned the "ASIC-able" ness of scrypt.
> >
> > what techniques may be used to make scrypt even harder to put on die?
> >
> > (is this an arms race between transistor count and algorithm tuneables?)
>
> I've not read much on scrypt. Is there a relation to what
> you see with AMD providing hUMA arch in their APUs
> (Kaveri) where you have CPU and GPU cores being able
> to read/write the same address space, lodge instruction
> queues to each other, and even an ARM core onboard.
> IOW, a merging of formerly hard discrete compute elements
> now on one die and communicating freely, in open commerce,
> would seem to make it harder to design resistant algos
> like scrypt.
>
> Maybe a next step in hard would be requiring extra nodes,
> a globally minimum latency, checkpointed. We say memory
> hard, storage hard, bit hard, time hard. What other hards
> can we exploit without being fooled. Pheromones?
>

--001a11c3dce0a9361f04f9852fd7
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<p dir=3D"ltr">Reconfigurable hard. Just maximize on what videocards do wel=
l, then videocards will do best. There&#39;s no other way really. The margi=
ns just get smaller.</p>
<p dir=3D"ltr">Actually... what if you switch algorithm every x blocks? Max=
 different aspects of a default config PC. That way ASICS would have to be =
PCs!</p>
<p dir=3D"ltr">So... Maybe we should contact the blender people and them to=
 submit renders? Another one is sciencecoins, where you solve science quest=
ions. The changes in science question will always mess with asics.</p>
<p dir=3D"ltr">Actually... SETIcoin?</p>
<div class=3D"gmail_quote">On May 16, 2014 12:42 AM, &quot;grarpamp&quot; &=
lt;<a href=3D"mailto:grarpamp@gmail.com">grarpamp@gmail.com</a>&gt; wrote:<=
br type=3D"attribution"><blockquote class=3D"gmail_quote" style=3D"margin:0=
 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
On Thu, May 15, 2014 at 5:59 PM, coderman &lt;<a href=3D"mailto:coderman@gm=
ail.com">coderman@gmail.com</a>&gt; wrote:<br>
&gt; the other thread mentioned the &quot;ASIC-able&quot; ness of scrypt.<b=
r>
&gt;<br>
&gt; what techniques may be used to make scrypt even harder to put on die?<=
br>
&gt;<br>
&gt; (is this an arms race between transistor count and algorithm tuneables=
?)<br>
<br>
I&#39;ve not read much on scrypt. Is there a relation to what<br>
you see with AMD providing hUMA arch in their APUs<br>
(Kaveri) where you have CPU and GPU cores being able<br>
to read/write the same address space, lodge instruction<br>
queues to each other, and even an ARM core onboard.<br>
IOW, a merging of formerly hard discrete compute elements<br>
now on one die and communicating freely, in open commerce,<br>
would seem to make it harder to design resistant algos<br>
like scrypt.<br>
<br>
Maybe a next step in hard would be requiring extra nodes,<br>
a globally minimum latency, checkpointed. We say memory<br>
hard, storage hard, bit hard, time hard. What other hards<br>
can we exploit without being fooled. Pheromones?<br>
</blockquote></div>

--001a11c3dce0a9361f04f9852fd7--

