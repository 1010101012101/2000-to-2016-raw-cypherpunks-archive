From owner-cypherpunks@Algebra.COM  Wed Jan 24 19:53:08 2001
Received: from MIT.EDU (SOUTH-STATION-ANNEX.MIT.EDU [18.72.1.2])
	by positron.mit.edu (8.9.3/8.9.3) with SMTP id TAA02858
	for <kwantam@positron.mit.edu>; Wed, 24 Jan 2001 19:53:01 -0500
Received: from ak47.algebra.com by MIT.EDU with SMTP
	id AA14997; Wed, 24 Jan 01 19:51:33 EST
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f0ONUVC01280
	for cypherpunks-outgoing; Wed, 24 Jan 2001 17:30:31 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f0ONUSO01261
	for <cypherpunks@algebra.com>; Wed, 24 Jan 2001 17:30:29 -0600
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id PAA19983; Wed, 24 Jan 2001 15:30:23 -0800 (PST)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id PAA19977 for <cpunks@sirius.infonex.com>; Wed, 24 Jan 2001 15:30:19 -0800 (PST)
Received: from smile.idiom.com ([209.209.13.26]) by cyberpass.net (8.8.8/8.7.3) with ESMTP id PAA12856 for <cypherpunks@cyberpass.net>; Wed, 24 Jan 2001 15:32:59 -0800 (PST)
Received: from billstewart (sji-ca1-126.ix.netcom.com [209.109.232.126])
	by smile.idiom.com (8.9.1/8.8.5) with SMTP id PAA44963;
	Wed, 24 Jan 2001 15:30:02 -0800 (PST)
Message-Id: <3.0.5.32.20010124152958.00a0ce40@idiom.com>
X-Sender: wcs@idiom.com
X-Mailer: QUALCOMM Windows Eudora Light Version 3.0.5 (32)
Date: Wed, 24 Jan 2001 15:29:58 -0800
To: Jim Choate <ravage@einstein.ssz.com>, austin-cpunks@einstein.ssz.com
From: Bill Stewart <bill.stewart@pobox.com>
Old-Subject: Re: CDR: APM: GnuPG and Perl GnuPG Interface for
  (En/De)cryption Question (fwd)
Cc: cypherpunks@cyberpass.net, David Bluestein II <dbii@mudpuddle.com>
In-Reply-To: <Pine.LNX.3.96.1010124171455.5612F-100000@einstein.ssz.com>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Subject:  Re: APM: GnuPG and Perl GnuPG Interface for
  (En/De)cryption Question (fwd)
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1876
Lines: 49


Isn't this really equivalent to using Conventional-only encryption
instead of public-key encryption?  Or is there some reason you want
to keep a public key in the process?  As with any customer-chosen
passphrase, there's the wimpy-passphrase problem, but you could
do something with salt to help strengthen it.
And avoiding public key should speed up your protocol a good bit,
though you've still got a public-key phase in your SSL.

At 05:15 PM 1/24/01 -0600, Jim Choate Forwarded:

>---------- Forwarded message ----------
>Date: Wed, 24 Jan 2001 16:56:02 -0600
>From: David Bluestein II <dbii@mudpuddle.com>
>To: austin-pm@pm.org
>Subject: APM: GnuPG and Perl GnuPG Interface for (En/De)cryption Question
>
>I have a question. I want to use GnuPG (or any suitable open source
>alternative) to encrypt a credit card to store in a database. The client
>wants to decrypt them on the server and view them over an SSL connection. I
>can encrypt without a problem, but to decrypt I know I at least need the
>passphrase, but then that makes me leave the private key on the server
>(bad!). Is there a way to send both the passphrase and private key to the
>Perl GnuPG interface and have it decrypted in memory to send via SSL?
>
>We're trying to avoid having the client install the decryption software on
>their desktop (client's being such as they are) and just provide either the
>private key or the passphrase/Private key.
>
>Thanks-
>
>David
>
>----------
>David H. Bluestein II                         President & Lead Developer
>dbii@mudpuddle.com                         ii, inc.
>
>http://www.interaction.net
>-        Specializing in Designing Interactive Websites        -
>-              and Searchable Internet Databases                   -
>
>
>
>
>
				Thanks! 
					Bill
Bill Stewart, bill.stewart@pobox.com
PGP Fingerprint D454 E202 CBC8 40BF  3C85 B884 0ABE 4639

