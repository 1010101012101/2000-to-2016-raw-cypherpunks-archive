From owner-cypherpunks@Algebra.COM  Sun Sep  2 12:57:36 2001
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id MAA27865
	for <kwantam@positron.mit.edu>; Sun, 2 Sep 2001 12:57:36 -0400
Received: from ak47.algebra.com (ak47.algebra.com [208.233.99.160])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id MAA25866
	for <rsw@mit.edu>; Sun, 2 Sep 2001 12:54:03 -0400 (EDT)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f82Gfl903367
	for cypherpunks-outgoing; Sun, 2 Sep 2001 11:41:47 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (dns.lne.com [209.157.136.81])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f82GfjO03353
	for <cypherpunks@algebra.com>; Sun, 2 Sep 2001 11:41:45 -0500
Received: (from cpunk@localhost)
	by slack.lne.com (8.11.0/8.11.0) id f82Gfgb22796
	for cypherpunks@algebra.com; Sun, 2 Sep 2001 09:41:42 -0700
Received: (from majordom@localhost)
	by slack.lne.com (8.11.0/8.11.0) id f82Gf3f22788
	for cypherpunks-goingout; Sun, 2 Sep 2001 09:41:03 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Message-Id: <200109021641.f82Gf0f22781@slack.lne.com>
Date: Sun, 2 Sep 2001 09:37:03 -0700
Content-Type: text/plain; charset="us-ascii"
X-Mailer: Apple Mail (2.387)
From: Tim May <tcmay@got.net>
To: cypherpunks@lne.com
Mime-Version: 1.0 (Apple Message framework v387)
In-Reply-To: <3B91FA7E.1924.14E00A23@localhost>
Old-Subject: Re: Stealth Computing Abuses TCP Checksums 
X-Converted-To-Plain-Text: from multipart/alternative by demime 0.97c
X-Converted-To-Plain-Text: Alternative section used was text/plain
X-Loop: cypherpunks@lne.com
X-spam: 0 
Subject:  Re: Stealth Computing Abuses TCP Checksums 
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 0 
Status: O
Content-Length: 2280
Lines: 54


On Sunday, September 2, 2001, at 09:23 AM, georgemw@speakeasy.net wrote:

> On 1 Sep 2001, at 1:38, Dan Geer wrote:
>
>> .     "Below, we present an implementation of a parasitic computer
>> .     using the checksum function.  In order for this to occur,
>> .     one needs to design a special message that coerces a target 
>> server
>> .     into performing the desired computation."
>>
>> This is the same principle that underlies denial of service
>> attacks -- the irreducible residual vulnerability of a system
>> to denial of service is proportional to the amount of work (or
>> time) that system must do (or consume) before it can conclude
>> its initial authorization decision.  Ironically, the more
>> precise and complex that authorization decision process, the
>> greater the amount of work that the active (initiating) side of
>> the connection can call on the passive side to perform.  This
>> critically bears on protocol and application security design.
>>
>> --dan
>>
>>
> Since I haven't noticed anyone else point this out (apologies for
> my redundancy if I just somehow missed it),  it's worth mentioning
> that the original result was more of a "gee whiz,  it's interesting we
> can do this in principle" type of thing than an actual threat of
> something anybody would ever actually do. Yes, you can trick a
> remote host into performing calculations for you with a specially
> prepared message, but it requires a hell of a lot more effort to
> prepare the message than it would to perform the calculation
> yourself.


Why would you think this is always so?

It would not take much effort to arrange a computation that consumed a 
lot of CPU cycles and returned a result, once one has gotten access to a 
remote machine. The case of the corportate employee using machines he 
could access to compute a screensaver/P2P job for a possible winning 
payoff comes to mind. Granted, he may have had permissions to access 
these machines, but the general point is that someone who got past these 
permissions could have done the same compute-intensive thing.

I see no reason to believe that "it requires a hell of a lot more effort 
to
prepare the message than it would to perform the calculation
yourself."

Sometimes it does, sometimes it doesn't.


--Tim May

