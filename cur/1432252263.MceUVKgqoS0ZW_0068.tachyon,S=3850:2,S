From owner-cypherpunks@Algebra.COM  Thu Nov  7 17:43:29 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id gA7MhTs08190
	for <rsw@opamp.org>; Thu, 7 Nov 2002 17:43:29 -0500
Received: from ak47.algebra.com ([209.120.156.51])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id RAA25987
	for <rsw@mit.edu>; Thu, 7 Nov 2002 17:43:27 -0500 (EST)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id gA7LnJf1029910
	for <cypherpunks-outgoing@ak47.algebra.com>; Thu, 7 Nov 2002 15:49:19 -0600
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id gA7LnJad029909
	for cypherpunks-outgoing; Thu, 7 Nov 2002 15:49:19 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id gA7Ln9f1029857
	for <cypherpunks@ak47.algebra.com>; Thu, 7 Nov 2002 15:49:14 -0600
Received: (from cpunk@localhost)
	by slack.lne.com (8.12.5/8.12.5) id gA7Ln865011641
	for cypherpunks@ak47.algebra.com; Thu, 7 Nov 2002 13:49:08 -0800
Received: (from majordom@localhost)
	by slack.lne.com (8.12.5/8.12.5) id gA7LmTgx011634
	for cypherpunks-goingout345; Thu, 7 Nov 2002 13:48:29 -0800
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Mime-Version: 1.0
X-Sender: mukve@pop3.wiu.edu
Message-Id: <p05200f00b9f07c6d726f@[12.246.100.116]>
In-Reply-To: <01f001c28694$205f6640$c71121c2@sharpuk.co.uk>
References: <3.0.5.32.20021107101352.0083fa60@pop.west.cox.net>
  <01f001c28694$205f6640$c71121c2@sharpuk.co.uk>
Date: Thu, 7 Nov 2002 13:48:12 -0800
To: "David Howe" <DaveHowe@gmx.co.uk>,
   "Email List: Cypherpunks"
  <cypherpunks@lne.com>
From: Kevin Elliott <k-elliott@wiu.edu>
Old-Subject: Re: Did you *really* zeroize that key?
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Loop: cypherpunks@lne.com
X-spam: 20 
Subject:  Re: Did you *really* zeroize that key?
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1392
Lines: 38


At 19:30 +0000  on  11/7/02, David Howe wrote:
>at Thursday, November 07, 2002 6:13 PM, David Honig <dahonig@cox.net>
>was seen to say:
>>  Wouldn't a crypto coder be using paranoid-programming
>>  skills, like *checking* that the memory is actually zeroed?
>That is one of the workarounds yes - but of course a (theoretical)
>clever compiler could realise that
>
>int myflag;
>myflag=0;
>if (myflag!=0) { do stuff } ;
>
>can be optimised away entirely as the result is constant.
>
>the problem isn't so much a question of what would work now, but "is it
>possible that your zeros could be optimised away by a theoretical future
>compiler, and how do we make portable code that nevertheless can't be
>optimised away?"

The point is though, that according to C99 today

volatile int myflag;
myflag=0;
if (myflag!=0) { do stuff } ;

does _exactly_ what you want, per the spec.  The only compilers that 
don't work this way are by definition out of spec, so adding new 
stuff isn't going to help.

Having said that, most of what your talking about pragma wise is 
boils down to controlling the optimizer.  Most compilers offer 
options to control this, but it's vendor specific.  I can see how 
adding this to the spec would be worthwhile.  But it's not essential 
to fix the problem above.
-- 
_____________________________________________
Kevin Elliott <mailto:kelliott@mac.com> ICQ#23758827

