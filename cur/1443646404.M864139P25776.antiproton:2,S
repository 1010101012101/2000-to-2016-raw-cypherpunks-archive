Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t8UKqP6H025754;
	Wed, 30 Sep 2015 16:52:29 -0400
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="1024-bit key; unprotected key"
	header.d=fastmail.fm header.i=@fastmail.fm header.b=J/mNYUZk;
	dkim-adsp=pass; dkim-atps=neutral
Received: from out1-smtp.messagingengine.com (out1-smtp.messagingengine.com
 [66.111.4.25])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t8UKqLkI025750
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Wed, 30 Sep 2015 16:52:23 -0400
Received: from compute3.internal (compute3.nyi.internal [10.202.2.43])
 by mailout.nyi.internal (Postfix) with ESMTP id 42A4220CC8
 for <cypherpunks@cpunks.org>; Wed, 30 Sep 2015 16:52:19 -0400 (EDT)
Received: from web2 ([10.202.2.212])
 by compute3.internal (MEProxy); Wed, 30 Sep 2015 16:52:19 -0400
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=fastmail.fm; h=
 content-transfer-encoding:content-type:date:from:in-reply-to
 :message-id:mime-version:references:reply-to:subject:to
 :x-sasl-enc:x-sasl-enc; s=mesmtp; bh=TOmeS1nOFzVQ6EZ2QSqdn3qVAnE
 =; b=J/mNYUZkgTcFMj6YU71Y+i/goQ6TkkjjN0Z9O4j+mC7SZQXW3STtEwfLlvy
 dk+4NwF64+WUtTJ+oyVWV1j9RAruFv75uVgjgyEAR+Gs3J8xlm1qhMaKLBO04Ff9
 dY4S1bAzuP7JcpUrrnPDTipXpXH5dNcDDbNSpGtu+1l5htOU=
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=
 messagingengine.com; h=content-transfer-encoding:content-type
 :date:from:in-reply-to:message-id:mime-version:references
 :reply-to:subject:to:x-sasl-enc:x-sasl-enc; s=smtpout; bh=TOmeS1
 nOFzVQ6EZ2QSqdn3qVAnE=; b=gSnr9hA4mD4YESPlvRRRsVJoSPSoOUgyiXJ5n2
 Z/Q8ztsUg4hBmZj/rIjF/peuH6kJLpjiBFuBfbBp7/BZ0TL3KlygNu1hVqh8lbjM
 t5g9HBXZUU5+fA/V3cNFYER4je6jFdVjfSBJ34Y3ATL+2QZ4mi8HYUH5fRfp5YoA
 cAcHo=
Received: by web2.nyi.internal (Postfix, from userid 99)
 id 0EC0354068B; Wed, 30 Sep 2015 16:52:19 -0400 (EDT)
Message-Id: <1443646338.695158.397968585.3B6987FA@webmail.messagingengine.com>
X-Sasl-Enc: dsIMRN0G/cJN+K8fSYPApkbhf0jNMGFGAMK5z39F+437 1443646338
From: Alfie John <alfiej@fastmail.fm>
To: cypherpunks@cpunks.org
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-Mailer: MessagingEngine.com Webmail Interface - ajax-f5bf1cf6
Subject: Re: CloudFlare Keyless SSL WAS Re: Snowden on the Twitters
Date: Thu, 01 Oct 2015 06:52:18 +1000
In-Reply-To: <CAKtE3zdQCroEFu6G5e4M9RqpvaEHNSvoRp75iurxzqeXVfDQ8Q@mail.gmail.com>
References: <CAKtE3zdQCroEFu6G5e4M9RqpvaEHNSvoRp75iurxzqeXVfDQ8Q@mail.gmail.com>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Reply-To: alfiej@fastmail.fm
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 41

On Thu, Oct 1, 2015, at 01:50 AM, Travis Biehn wrote:
> What would be solid is if there were a browser module that did several
> things: Eliminated JavaScript dynamic calls (eval, new function(),
> setTimeout, setInterval, so on.) Eliminate 3rd party assets. Allowed
> web assets to be signed. Allowed sets of web assets to be versioned
> (and attested to by 3rd parties.)
>
> The combination of signing, versioning and lack of dynamic features
> paves the way for uninjectable, client-side in browser
> encryption/decryption. Something AFAIK we cannot do today. Is anyone
> working on it?

So Nginx has a built-in module "ngx_http_gzip_module" which does the
following (if "Accept-Encoding: gzip" was part of the request headers) :

  - Sees request for "foo.html"
  - Checks if "foo.html.gz" exists
  - If so, serves that in place of the "foo.html"
  - If not, gzips "foo.html" on the fly

What would be nice is an Nginx module which did the same type of thing,
but for hashing the body:

  - Sees request for "foo.html"
  - Checks if "foo.html.sha256" exists
  - If so, serves "foo.html" along with "Content-Hash: <sha256>" header,
    taken from contents of "foo.html.sha256"
  - If not, serves "foo.html" along with "Content-Hash: <sha256>"
    header, but calculated on the fly

This would be a cheap and easy way to get some form of content hashing.

Thoughts?

Alfie

-- 
  Alfie John
  alfiej@fastmail.fm

