From owner-cypherpunks@al-qaeda.net  Wed Feb 13 10:46:38 2013
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from proton.jfet.org (localhost.localdomain [127.0.0.1])
	by proton.jfet.org (8.14.3/8.14.3/Debian-9.4) with ESMTP id r1DFbrBs006539
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Wed, 13 Feb 2013 10:37:53 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=al-qaeda.net;
	s=cpunks; t=1360769873;
	bh=hrHhBe/wmc2Iywt/KsmEzkokiYtXoY480I4MdPdzU70=;
	h=Date:From:To:Subject:Message-ID:MIME-Version:Content-Type:
	 Content-Transfer-Encoding:Sender;
	b=3aYf7SfzoqxE1bo7iKTT937XtoQI2iGDg1zJINuylfWab8QDfzlxqU22jTPDv3eSF
	 hwZ2FrtQdwo1GO7ESyRHfC0Ucmu03W4NYMryQqczGzEI2gq08kL5k8PxI401GEck7e
	 lfcwhZeJEkmw+YBuNi6Rw+ZKDViiok+r1s/TAIAg=
Received: (from majordomo@localhost)
	by proton.jfet.org (8.14.3/8.14.3/Submit) id r1DFbr2Y006538
	for cypherpunks-outgoing; Wed, 13 Feb 2013 10:37:53 -0500
Date: Wed, 13 Feb 2013 16:37:49 +0100
From: Eugen Leitl <eugen@leitl.org>
To: cypherpunks@al-qaeda.net, info@postbiota.org
Subject: Re: [liberationtech] Chromebooks for Risky Situations?
Message-ID: <20130213153748.GY6172@leitl.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
User-Agent: Mutt/1.5.18 (2008-05-17)
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 5266
Lines: 83

----- Forwarded message from Gregory Foster <gfoster@entersection.org> -----

From: Gregory Foster <gfoster@entersection.org>
Date: Wed, 13 Feb 2013 08:38:03 -0600
To: liberationtech@lists.stanford.edu
Subject: Re: [liberationtech] Chromebooks for Risky Situations?
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7;
	rv:17.0) Gecko/20130107 Thunderbird/17.0.2
Reply-To: liberationtech <liberationtech@lists.stanford.edu>

Incidentally, NICTA are the same researchers hired by DARPA to make the  
U.S. drone fleet safe from hackers.  Looks like there might be some open  
source tools emerging from the effort.
http://www.theregister.co.uk/2012/11/19/nicta_develops_drone_protection/

gf


On 2/13/13 6:54 AM, Eugen Leitl wrote:
> On Tue, Feb 12, 2013 at 09:01:37AM +0100, Andreas Bader wrote:
>
>> So why not create a own OS that is really small because of its security?
>> Chrome OS is small because it's cheap. If you were right then Android
>> was the most secure system. Aren't there any Android viruses? RedHat
>> seems to have less security holes than Chrome OS.
> http://ertos.nicta.com.au/research/l4.verified/
>
> The L4.verified project
>
> A Formally Correct Operating System Kernel
>
> In current software practice it is widely accepted that software will always have problems and that we will just have to live with the fact that it may crash at the worst possible moment: You might be on a deadline. Or, much scarier, you might be on a plane and there's a problem with the board computer.
>
> Now think what we constantly want from software: more features, better performance, cheaper prices. And we want it everywhere: in mobile phones, cars, planes, critical infrastructure, defense systems.
>
> What do we get? Mobile phones that can be hacked by SMS. Cars that have more software problems than mechanical ones. Planes where computer problems have lead to serious incidents. Computer viruses spreading through critical infrastructure control systems and defense systems. And we think "See, it happens to everybody."
>
> It does not have to be that way. Imagine your company is commissioning a new vending software. Imagine you write down in a contract precisely what the software is supposed to do. And then b it does. Always. And the developers can prove it to you b with an actual mathematical machine-checked proof.
>
> Of course, the issue of software security and reliability is bigger than just the software itself and involves more than developers making implementation mistakes. In the contract, you might have said something you didn't mean (if you are in a relationship, you might have come across that problem). Or you might have meant something you didn't say and the proof is therefore based on assumptions that don't apply to your situation. Or you haven't thought of everything you need (ever went shopping?). In these cases, there will still be problems, but at least you know where the problem is not: with the developers. Eliminating the whole issue of implementation mistakes would be a huge step towards more reliable and more secure systems.
>
> Sounds like science fiction?
>
> The L4.verified project demonstrates that such contracts and proofs can be done for real-world software. Software of limited size, but real and critical.
>
> We chose an operating system kernel to demonstrate this: seL4. It is a small, 3rd generation high-performance microkernel with about 8,700 lines of C code. Such microkernels are the critical core component of modern embedded systems architectures. They are the piece of software that has the most privileged access to hardware and regulates access to that hardware for the rest of the system. If you have a modern smart-phone, your phone might be running a microkernel quite similar to seL4: OKL4 from Open Kernel Labs.
>
> We prove that seL4 implements its contract: an abstract, mathematical specification of what it is supposed to do.
>
> Current status: completed successfully.
>
> Availablility
>
> Binaries of seL4 on ARM and x86 architectures are available for academic research and education use. The release additionally contains the seL4 formal specification, user-level libraries and sample code, and a para-virtualised Linux (x86)
>
> Click here to download seL4
>
> More information:
>
> What we prove and what we assume (high level, some technical background assumed)
> Statistics (sizes, numbers, lines of code)
> Questions and answers (high-level, some technical background assumed)
> Verification approach (for technical audience)
> Scientific publications (for experts)
> Acknowledgements and team
> What does a formal proof look like? [pdf]
> Contact
>
> For further information, please contact Gerwin Klein (project leader): gerwin.klein(at)nicta.com.au

-- 
Gregory Foster || gfoster@entersection.org
@gregoryfoster <> http://entersection.com/

--
Unsubscribe, change to digest, or change password at: https://mailman.stanford.edu/mailman/listinfo/liberationtech

----- End forwarded message -----
-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a> http://leitl.org
______________________________________________________________
ICBM: 48.07100, 11.36820 http://www.ativel.com http://postbiota.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE

