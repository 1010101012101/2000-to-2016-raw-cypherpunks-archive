From owner-cypherpunks@al-qaeda.net  Tue Mar  8 14:45:15 2005
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (localhost.localdomain [127.0.0.1])
	by positron.jfet.org (8.13.3/8.13.3/Debian-7) with ESMTP id j28Kj9jQ006355
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Tue, 8 Mar 2005 14:45:09 -0600
Received: (from majordomo@localhost)
	by positron.jfet.org (8.13.3/8.13.3/Submit) id j28Kj9ZV006354
	for cypherpunks-outgoing; Tue, 8 Mar 2005 14:45:09 -0600
From: "James A. Donald" <jamesd@echeque.com>
To: cryptography@metzdowd.com, cypherpunks@al-qaeda.net
Date: Tue, 08 Mar 2005 12:25:31 -0800
Subject: Re: I'll show you mine if you show me, er, mine
Message-ID: <422D99BB.15129.A9D0B4A@localhost>
In-reply-to: <20050307201419.GE743@bast.lollyshouse.net>
References: <30F37C4533D8564FB1D58BFDAF6687C10250B6ED@ohthree.jjj-i.com>
X-mailer: Pegasus Mail for Windows (4.21c)
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 1538
Lines: 38

    --
> > However, techniques that establish that the parties share a 
> > weak secret without leaking that secret have been around 
> > for years -- Bellovin and Merritt's DH-EKE, David Jablon's 
> > SPEKE. And they don't require either party to send the 
> > password itself at the end.

> They are heavily patent laden, although untested last time I 
> looked. This has been discouraging to implementers.

There seem to be a shitload of protocols, in addition to SPEKE 
and DH-EKE

A password protocol should have the following properties:

1. It should identify both parties to each other, that is to 
say, be secure against replay and man in the middle attacks, in 
particular, strong against phishing.. It should be secure 
against replay and dictionary attacks by an evesdropper or 
man-in-the-middle.  Such an attacker should be able to no 
better than someone who just tries repeatedly to log on to the 
server with a guessed password

2.  It should be as strong as practical against offline attacks 
by the server itself.  The server operators, or someone who has 
stolen information from them, should not know the users 
password, and dictionary attacks should be sufficiently 
expensive that a strong password (not your ordinary password) 
is secure.

Can anyone suggest a well reviewed, unpatented, protocol that 
has the desired properties? 

    --digsig
         James A. Donald
     6YeGpsZR+nOTh/cGwvITnSR3TdzclVpR0+pr3YYQdkG
     A8bCmCXDTAX2Syg907T7uRpajs77l9CqLEii+ezP
     42zQDcP3xJXtcLPSgCVa55kew+ALkrQ/I50PFm9lC

