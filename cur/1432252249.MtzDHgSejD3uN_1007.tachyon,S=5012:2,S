From owner-cryptography+rsw=mit.edu@wasabisystems.com  Fri Feb  7 11:53:34 2003
Return-Path: <owner-cryptography+rsw=mit.edu@wasabisystems.com>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id h17GrWu15914
	for <rsw@opamp.org>; Fri, 7 Feb 2003 11:53:34 -0500
Received: from mononoke.wasabisystems.com (mononoke.wasabisystems.com [166.84.0.13])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id LAA19873
	for <rsw@mit.edu>; Fri, 7 Feb 2003 11:53:28 -0500 (EST)
Received: by mononoke.wasabisystems.com (Postfix, from userid 96)
	id 82B4C5E3FD; Fri,  7 Feb 2003 11:52:38 -0500 (EST)
X-Original-To: cryptography@wasabisystems.com
Delivered-To: cryptography@wasabisystems.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by mononoke.wasabisystems.com (Postfix) with ESMTP id F199C5E3F3
	for <cryptography@wasabisystems.com>; Fri,  7 Feb 2003 11:52:37 -0500 (EST)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id 10547D981D; Fri,  7 Feb 2003 11:52:37 -0500 (EST)
X-Original-To: cryptography@wasabisystems.com
Received: from mercury.ex.ac.uk (mercury.ex.ac.uk [144.173.6.26])
	by mononoke.wasabisystems.com (Postfix) with ESMTP id 2685C5E42A
	for <cryptography@wasabisystems.com>; Thu,  6 Feb 2003 20:07:20 -0500 (EST)
Received: from [144.173.6.20] (helo=cronus.ex.ac.uk)
	by mercury.ex.ac.uk with esmtp (Exim 4.12)
	id 18gwz7-006haA-00; Fri, 07 Feb 2003 01:07:17 +0000
Date: Fri, 7 Feb 2003 01:07:16 +0000
From: Adam Back <adam@cypherspace.org>
To: Peter Gutmann <pgut001@cs.auckland.ac.nz>
Cc: cryptography@wasabisystems.com, cypherpunks@lne.com,
   Adam Back <adam@cypherspace.org>
Subject: password based key-wrap (Re: The Crypto Gardening Guide and Planting Tips)
Message-ID: <20030207010716.A2504400@exeter.ac.uk>
References: <200302050408.h1548H209355@medusa01.cs.auckland.ac.nz>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.2i
In-Reply-To: <200302050408.h1548H209355@medusa01.cs.auckland.ac.nz>; from pgut001@cs.auckland.ac.nz on Wed, Feb 05, 2003 at 05:08:17PM +1300
Sender: owner-cryptography@wasabisystems.com
Precedence: bulk
Status: O
Content-Length: 2737
Lines: 66

Peter lists applied crypto problem in his "Crypto Gardening Guide" at:

http://www.cs.auckland.ac.nz/~pgut001/pubs/crypto_guide.txt

One of the problems from the "Problems that Need Solving" section is:

> * A key wrap function where the wrapping key is derived from a
> password.  The requirements for this are subtly different from a
> straight symmetric key wrap in that the threat model is rather
> different.  For example a symmetric key wrap may use HMAC to ensure
> non-malleability, but for password-based key wrap this makes a
> dictionary attack rather easier (throw passwords at the HMAC,
> sidestepping the encrypted key altogether).  There exists a (ad-hoc)
> design that has rather limited non-malleability in order to avoid
> potential dictionary attacks.

I may not be fully understanding the problem spec: you want to encrypt
(wrap) a randomly generated key (a per message session key for
example) with a key derived from a password.

What would be wrong with using PBKDF2 (from PKCS #5 / RFC2898) as the
key derivation function to give you defense against dictionary attack.
(Allows choice of number of iterations to "stretch" the password,
allows a salt to frustrate precomputation.)

Why do you care about non-malleability of the key-wrap function?

If you do want non-malleability of th ekey-wrap function, isn't
encrypt and MAC a standard way to do this?

Then you would need two keys, and I presume it would make sense to
derive them (using KDF2 from IEEE P1363a) a start key:

sk = KDF2( password, salt, iterations )
ek = KDF( sk, specialization1 )
mk = KDF( sk, specialization2 )

and then AES in CBC mode with random IV encrypting with ek, with
appended HMAC with key mk.

That leaves the comment:

> but for password-based key wrap this makes a dictionary attack
> rather easier (throw passwords at the HMAC, sidestepping the
> encrypted key altogether).

but in this case the attacker could take his pick with no significant
advantage of either method:

- brute force passwords to get sk, derive ek from sk, decrypt the
wrapped key and use some knowledge about the plaintext encrypted with
the wrapped key to tell if the write password was chosen; or

- brute force passwords to get sk, derive mk from sk, and see if the
MAC is valid MAC of the ciphertext (presuming encrypt and then MAC)

Or is the problem that the above ensemble is ad-hoc (though using
standardised constructs).  Or just that the ensemble is ad-hoc and so
everyone will be forced to re-invent minor variations of it, with
varying degrees of security.

Adam

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@wasabisystems.com

