From owner-cypherpunks@Algebra.COM  Wed Jul 31 12:03:48 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g6VG3mJ19721
	for <rsw@opamp.org>; Wed, 31 Jul 2002 12:03:48 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id MAA06018
	for <rsw@mit.edu>; Wed, 31 Jul 2002 12:03:47 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g6VEPxc7027001
	for <cypherpunks-outgoing@ak47.algebra.com>; Wed, 31 Jul 2002 09:25:59 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g6VEPxvU027000
	for cypherpunks-outgoing; Wed, 31 Jul 2002 09:25:59 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g6VEPsc7026981
	for <cypherpunks@ak47.algebra.com>; Wed, 31 Jul 2002 09:25:55 -0500
Received: (from cpunk@localhost)
	by slack.lne.com (8.12.5/8.12.5) id g6VEPrLm003471
	for cypherpunks@ak47.algebra.com; Wed, 31 Jul 2002 07:25:53 -0700
Received: (from majordom@localhost)
	by slack.lne.com (8.12.5/8.12.5) id g6VEPmAG003464
	for cypherpunks-goingout345; Wed, 31 Jul 2002 07:25:48 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
X-Authentication-Warning: hydrogen.leitl.org: eugen owned process doing
  -bs
Date: Wed, 31 Jul 2002 16:25:30 +0200 (CEST)
From: Eugen Leitl <eugen@leitl.org>
cc: <cypherpunks@lne.com>
Old-Subject: Re: Hollywood Hackers
In-Reply-To: <8d94fd13ad3927e1ffe95293727b1cc6@ecn.org>
Message-ID: <Pine.LNX.4.33.0207311603400.15129-100000@hydrogen.leitl.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: cypherpunks@lne.com
X-spam: 0 
Subject:  Re: Hollywood Hackers
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1810
Lines: 37


On Wed, 31 Jul 2002, Anonymous wrote:

> Such an approach suffers from the "bad guy" occasionally signing a
> good file, thus placing himself on the trusted signer list.

This assumes a boolean trust metric. What you need is a trust scalar, and
a mechanism to prevent Malory poisoning it. It should use scarce resources
(e.g. crunch) to generate a trust currency in each node, a kind of
decentralized mint (nothing crunches quite a few million boxes on the
Net). Clearly there will be some inflation, as systems tend to get faster
these days. The algorithm should resist FPGAzation, too (Mallory is
inventive).
 
> A better approach is for the downloader to create his own trusted
> list, along the lines of PGP web of trust. Ideal for exactly this

The infrastructure needs to be hidden out of view. If you query the net
for a specific document, those signed by most trusted parties should come
up first. And when you download and sample a document the GUI should offer
positive/negative karma buttons for easy grading.

> application. The downloader can add and subtract from the trusted
> signer list at will, with no central control. Since one must expect
> some trusted signers to get busted and move to the dark side under
> court order, such downloader control is necessary.
> 
> Problematic is that mp3 and other compression processes do not
> generate bit-identical files. Two perfect mp3 files may have different
> md5 hashes, for example. A tool for making bit-identical mp3 files

Doesn't matter, as long a single good copy gets out & gets amplified.
Plus, you can get different cryptohash URIs for minor variations on 
content, as long they're published by somebody trusted.

> from the same digital input is needed, so that a single signed hash
> can verify the same file from multiple origins.

