From owner-cypherpunks@jfet.org  Thu Jun  2 05:10:40 2005
Return-Path: <owner-cypherpunks@jfet.org>
Received: from proton.jfet.org (majordomo@localhost [127.0.0.1])
	by proton.jfet.org (8.13.4/8.13.4/Debian-1) with ESMTP id j5296caB003405
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Thu, 2 Jun 2005 05:06:38 -0400
Received: (from majordomo@localhost)
	by proton.jfet.org (8.13.4/8.13.4/Submit) id j5296cdK003404
	for cypherpunks-outgoing; Thu, 2 Jun 2005 05:06:38 -0400
Subject: Re: /. [Intel Adds DRM to New Chips]
From: DiSToAGe <distoage@sbbi.net>
To: cypherpunks@jfet.org
In-Reply-To: <20050601220929.GA1869@bitchcake.off.net>
References: <20050528195352.GE3361@leitl.org> 	
  <1117644476.6910.181.camel@station> 	
  <20050601220929.GA1869@bitchcake.off.net>
Content-Type: text/plain; charset=ISO-8859-15
Date: Thu, 02 Jun 2005 11:05:30 +0200
Message-Id: <1117703131.6993.73.camel@station>
Mime-Version: 1.0
X-Mailer: Evolution 2.0.4-3mdk 
Content-Transfer-Encoding: 7bit
Sender: owner-cypherpunks@jfet.org
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 2692
Lines: 57

(thanks for interesting answer)

I have read infos that say that audio and video drivers will be in the
trusted chain. If your hardware system is used by an os (i.e. win) on
which you can't create drivers, and only industry signed drivers can be
used you can't bypass this by hacking drivers ...

My though is the hardware drm can be reverse engineered ? If you use
cert on your DRM you must put cert and private keys on your DRM chip ...
So you have somewhere memory (rom or else) where you have this private
and cert datas. So with good tools you can read what are the bits in
this DRM. So you can make a "soft drm" that use all the instructions of
the reverse engineered hard drm, you but the reverse engineered private
key, certs on your soft drm. All this goes on a "emulated" drm part on
your os emulator. So booting the os believe that it is hard, because all
instructions are the same, certs is the same, and private key can be
used by your soft drm to en/crypt drm files ...??? We see that with time
almost all can be reverse engineered, can it be the same with hard drm
systems ??

(so seems happy futur, something you buy and use but don't own ?)


Le mercredi 01 juin 2005 ` 18:09 -0400, Adam Back a icrit :
> [could you use CPU emulator to bypass these motherboard and CPU based
> DRM systems].
> 
> Answer: no.  They have but private keys inside the DRM hardware, and
> signed the corresponding public key with a CA that they control.  That
> plus some hashing/bootstrapping etc of the startup and some other code
> allows them to ensure that an emulated version of the same software
> could not provide a valid signature + cert that a DRM content provider
> would accept.
> 
> They also have models where the video card and/or monitor are in the
> trust model -- and there are secured high bandwidth channels between
> DRM provider and CPU, and CPU and graphics card/decoder.
> 
> There is also a model for software called "Trusted Agents" that
> actually run on your CPU but are in a ring -1 (below ring 0) that you
> can not debug.
> 
> Another possibility is read the stuff out of RAM or video RAM.
> Midterm they can fix that also with on the fly RAM encrypt/decrypt.
> 
> But I still say it's futile and stupid, because people will hack the
> digital display, tap into the graphics card, hack video card drivers
> etc and re-encode.  (Rip-once copy anywhere).  Worst case people will
> A2D from the display "telesync" style.
> 
> Adam

-- 
"Perhaps one day "computer science" will, like Yugoslavia, get broken up
into its component parts. That might be a good thing. Especially if it
meant independence for my native land, hacking."
(hackers and Painters) [ Paul Graham ]

