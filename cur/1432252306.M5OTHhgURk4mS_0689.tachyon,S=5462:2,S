From cypherpunks-bounces@cpunks.org  Tue Nov 12 22:35:31 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAD3ZN3h005496;
	Tue, 12 Nov 2013 22:35:24 -0500
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=KaZnaOh7;
	dkim-adsp=none (insecure policy); dkim-atps=neutral
Received: from mail-oa0-f53.google.com (mail-oa0-f53.google.com
 [209.85.219.53])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAD3ZKZI005492
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Tue, 12 Nov 2013 22:35:22 -0500
Received: by mail-oa0-f53.google.com with SMTP id k1so2688346oag.40
 for <cypherpunks@cpunks.org>; Tue, 12 Nov 2013 19:35:15 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:date:message-id:subject:from:to:content-type
 :content-transfer-encoding;
 bh=/9gtI39gc7Da3/jYw3/9AvH9C5rZbJsKtNQJe0xBU00=;
 b=KaZnaOh7f++3/B9sHOESymHCTNnVOQ6W6c7iwQOfqeanP/KZViLwsq8vXgp3HmTqoc
 Hqz5niueQCzGeAv4rOZ2w7suiOhsisjWNe+4ayrSPcLl3mBlblVyM615SStgsEC2NWm3
 q/TB+B8H4lnatG/Fiv8vOLN2wCNIQM09BnSC/JFvmrT0OHANRdv6TN4mh2Vk/Fy5WZ8v
 3oji5Za4E5QvdIfARBiWP8MDmFfxMo6iAmpEJADPs9Nxhe0kA0l3uVMGDDJKhR0x9cGV
 Fh0G8RG656n6fEw2PkvO5Kq+EDLxX/IKkqLw2itj3jQMw37n0SU4p5tPRA6syXl8MraM
 KiVw==
MIME-Version: 1.0
X-Received: by 10.60.149.169 with SMTP id ub9mr27205166oeb.39.1384313715128;
 Tue, 12 Nov 2013 19:35:15 -0800 (PST)
Received: by 10.76.33.167 with HTTP; Tue, 12 Nov 2013 19:35:15 -0800 (PST)
Date: Tue, 12 Nov 2013 21:35:15 -0600
Message-ID: <CADhsnxeD5huHGGTPwtLbVk_zQsZFqn3f5oN6C8Pk+Dt_Ao85sg@mail.gmail.com>
Subject: re: passwords! (p4)
From: brian carroll <electromagnetize@gmail.com>
To: cypherpunks@cpunks.org
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by antiproton.jfet.org id
 rAD3ZKZI005492
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 2665
Lines: 60

completeness is its own thing...

need to mention case of 'partial passwords' where user
and site merge into a final password yet the user password
cannot be cracked without the hidden variables blended into
the final working password that is either static or changing...

for instance, a previous example...

     [морд][3][માટે][.][for][-]...[جو][4][iconID][cibé]

what if [iconID] was hidden as to its bit-set size, it could be
1 character space or twelve, and yet it would remain hidden
at password entry by the user yet required to gain access.

     [морд][#][3][###][માટે][.][for][##][-]...[جو][4][##][cibé][#]

such that some algorithm processes the input in another
framework and if somehow this is processes is not normal
or it triggers a particular mechanism, a threshold condition
could activate blocking access within the password itself

vague, i do not know exactly how it could be engineered
such that it would be needed and unseen by the user and
yet be able to distinguish the actual user from imitator or
hostile attacker, though in this way, the moat/drawbridge
mechanism that would be 'missing information' within the
structure of the password, such that the STRING in itself,
input by the user, is not the password, until it is mixed in
with the other piece via the site security.

     [#|#|x|ம்|7|#|#|#|ன்]

in other words, a password could only be partially that of
the user, and perhaps this is already how it exists today,
though that each variable could be more than a character
and this could be a bit-set computation, as an icon/other
coordinates are blended together, some data of which is
not in the user domain and would remain unknown and
beyond the ordinary boundary, inside a further interior
realm of protected data, a second security vestibule,
in the above case, all the wildcards could be data that
is in the password yet zoned for another level of access,
such that the administrators must provide the data else
that it could also be variable in size and 'timing', such
that real-time or other permutive functioning could be
rolling, 'living code' that is masked - "unknown", and
potentially has a calculative or image-based input that
is not visible on the outside, yet also entangled with it.

perhaps it is not of classical physics, this, yet why
must the password unit be assumed a single static
character and not something in movement, existing
beyond perception and operating by unknown rules
that influences what the actual password is, at any
given point or place in time. unique perspective as
the basis for a universal security approach (UID)


lime, tequila, [#], triple-sec

