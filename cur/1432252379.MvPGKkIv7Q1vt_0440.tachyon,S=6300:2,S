From owner-cryptography+rsw=mit.edu@metzdowd.com  Tue Jun  3 21:50:15 2003
Return-Path: <owner-cryptography+rsw=mit.edu@metzdowd.com>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h541oFq31520
	for <rsw@opamp.org>; Tue, 3 Jun 2003 21:50:15 -0400
Received: from red.metdow.com (72.muf123.nycm.n54ny05r18.dsl.att.net [12.103.123.72])
	by pacific-carrier-annex.mit.edu (8.12.4/8.9.2) with ESMTP id h541oB5Z028858
	for <rsw@mit.edu>; Tue, 3 Jun 2003 21:50:12 -0400 (EDT)
Received: by red.metdow.com (Postfix, from userid 1002)
	id 1C4D1183034; Wed,  4 Jun 2003 01:46:04 +0000 (UTC)
X-Original-To: cryptography@metzdowd.com
Delivered-To: cryptography@metzdowd.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by red.metdow.com (Postfix) with ESMTP id D91E7183016
	for <cryptography@metzdowd.com>; Wed,  4 Jun 2003 01:46:02 +0000 (UTC)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id 7055ED97C5; Tue,  3 Jun 2003 21:46:02 -0400 (EDT)
X-Original-To: cryptography@metzdowd.com
Received: from turkey.mail.pas.earthlink.net (turkey.mail.pas.earthlink.net [207.217.120.126])
	by red.metdow.com (Postfix) with ESMTP id 34A32182F59
	for <cryptography@metzdowd.com>; Tue,  3 Jun 2003 23:28:17 +0000 (UTC)
Received: from dialup-67.31.153.43.dial1.denver1.level3.net ([67.31.153.43] helo=lynnpc)
	by turkey.mail.pas.earthlink.net with esmtp (Exim 3.33 #1)
	id 19NLCH-0000vH-00; Tue, 03 Jun 2003 16:28:06 -0700
Message-Id: <4.2.2.20030603170816.00c976a0@mail.earthlink.net>
X-Sender: lynnnet@mail.earthlink.net
X-Mailer: QUALCOMM Windows Eudora Pro Version 4.2.2 
Date: Tue, 03 Jun 2003 17:29:44 -0600
To: "James A. Donald" <jamesd@echeque.com>
From: Anne & Lynn Wheeler <lynn@garlic.com>
Subject: Re: Maybe It's Snake Oil All the Way Down
Cc: pgut001@cs.auckland.ac.nz (Peter Gutmann), bill.stewart@pobox.com,
   cryptography@metzdowd.com, cypherpunks@lne.com, ekr@rtfm.com,
   rsalz@datapower.com, sguthery@mobile-mind.com
In-Reply-To: <3EDCB916.14077.15D755CF@localhost>
References: <200306031304.h53D4dl25250@medusa01.cs.auckland.ac.nz>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-cryptography@metzdowd.com
Precedence: bulk
Status: O
Content-Length: 3948
Lines: 85

At 03:04 PM 6/3/2003 -0700, James A. Donald wrote:

>I never figured out how to use a certificate to authenticate a
>client to a web server, how to make a web form available to one
>client and not another.  Where do I start?
>
>What I and everyone else does is use a shared secret, a
>password stored on the server, whereby the otherwise anonymous
>client gets authenticated, then gets an ephemeral cookie
>identifying him..   I cannot seem to find any how-tos or
>examples for anything better, whether for IIS or apache.
>
>As a result we each have a large number of shared secret
>passwords, whereby we each log into a large number of
>webservers.  Was this what the people who created this protocol
>intended?

The issue is where does the authentication material come from.
<blatant aads promotion>
Basically, certificates were solution targeted for offline email from
the early '80s. you dail-up, connect, exchange email, hang-up. then
you read. some random person that you never, ever dealt with before
sends you something. they claim to be somebody .... the certificate
is signed by somebody you trust .... is offered as proof that they are
who they claimed to be.

the other approach in the online world &/or with previous relations,
is have a table of authentication material. the payment (debit/credit) card
world went from non-electronic, offline to electronic and online (and
skipped the step altogether that certificates represent ... the electornic
and offline).

note that even the certificate-based infrastructure are dependent on
this method .... basically the certificate-enabled infrastructures have
local table of "CA" public keys (i.e. those public keys that they've previously
decided to trust) ... then certificates are validated with "CA" public keys
and the current message/document is validate with public key from
certificate. The primary difference between cert-based infrastructure and
certless-based infrastructure is that the cert-based infrastructure there
CAs have the database of all public keys and create these small R/O
copies of their database records called certificates and spray them all
over for use in offline environments. Then relying parties just have
abbreviated CA-only public key tables and can't access the full tables
maintained at the CAs.

In the certless-based infrastructure the relying parties either maintain
their own full tables of all public keys and/or have direct online access to
the full tables. There is no need for these little R/O, static, stale,
redundant and superfluous copies of somebody else offline database entry 
(called
certificates) since there can be direct, online access to the original copy.

generalized case can be hooking the web server to either radius or
kerberos for handling the authentication process. both radius and
kerberos support shared-secrets recorded in database as authentication.
the radius example at
http://www.asuretee.com/
shows example of radius recording public key in lieu of shared-secret
and performing ecdsa digital signature authentication. pkinit for
kerberos also allows for public key recorded in lieu of shared-secret
and digital signature authentication.

misc. radius public key authentication posts
http://www.garlic.com/subpubkey.html#radius
misc. kerberos public key authentication pots
http://www.garlic.com/subpubkey.html#kerberos
futher discussion specifically regarding static, stale, redundant,
superfluous certificates.
http://www.garlic.com/~lynn/subpubkey.html#rpo


slightly related discussions regarding SSL merchant comfort
certificates:
http://www.garlic.com/~lynn/subpubkey.html#sslcerts

</blatant aads promotion>
--
Anne & Lynn Wheeler    http://www.garlic.com/~lynn/
Internet trivia 20th anv http://www.garlic.com/~lynn/rfcietff.htm
  


---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@metzdowd.com

