From owner-cypherpunks@Algebra.COM  Thu Dec 21 10:02:32 2000
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id KAA06866
	for <kwantam@positron.mit.edu>; Thu, 21 Dec 2000 10:02:28 -0500
Received: from ak47.algebra.com (root@[208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id KAA28661
	for <rsw@mit.edu>; Thu, 21 Dec 2000 10:02:27 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id eBLETPQ28352
	for cypherpunks-outgoing; Thu, 21 Dec 2000 08:29:25 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@einstein.ssz.com [204.96.2.99])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id eBLETOV28339
	for <cypherpunks@algebra.com>; Thu, 21 Dec 2000 08:29:24 -0600
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id IAA17495
	for cypherpunks@algebra.com; Thu, 21 Dec 2000 08:36:37 -0600
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id IAA17487
	for cypherpunks-outgoing; Thu, 21 Dec 2000 08:36:35 -0600
Received: from Mailserver-4.ricardo.de (root@henry.ricardo.de [62.197.4.171])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id IAA17483
	for <cypherpunks@EINSTEIN.ssz.com>; Thu, 21 Dec 2000 08:36:32 -0600
Received: from exchange.office.ricardo.de (stargate.ricardo.de [62.197.4.1]) 
          by Mailserver-4.ricardo.de (8.8.8/HENRY-frank-1.4) with ESMTP 
          id PAA24493; Thu, 21 Dec 2000 15:28:56 +0100
Received: from ricardo.de (www.lemuria.org [62.197.4.112]) by exchange.office.ricardo.de with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2650.21)
	id Y96SYA8N; Thu, 21 Dec 2000 15:28:56 +0100
Message-ID: <3A421356.84FB82F2@ricardo.de>
Date: Thu, 21 Dec 2000 15:27:34 +0100
From: Tom Vogt <tom@ricardo.de>
X-Mailer: Mozilla 4.61 [en] (X11; I; Linux 2.2.16 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: sunder <sunder@sunder.net>
CC: cypherpunks@EINSTEIN.ssz.com
Old-Subject: CDR: Re: [Fwd: Re: "The End of SSL and SSH?"]
References: <3A40F8F1.2C8F1E22@sunder.net>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Reply-To: cypherpunks@EINSTEIN.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Language: English, Russian, German
Subject:  Re: [Fwd: Re: "The End of SSL and SSH?"]
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 2534
Lines: 58


sunder wrote:
> "Kurt Seifried" <seifried@securityportal.com> writes:
> > It is also incredibly difficult for users to ascertain whether the
> > key is legit or not.
> 
> Generally, if a key is already in use, it is very likely
> legitimate. If a key comes up as having changed, it is probably not
> legitimate.
> 
> This does leave the question of how do you get keys in the first
> place. In most organizations, however, systems administration is
> capable of maintaining such things reasonably well. We could perhaps
> make that problem a bit better with mechanisms such as on-line
> key lookup (using a sort of public key version of what kerberos
> provides for private key protocols), but PKI qua PKI won't improve the
> situation, and in practice you can (somewhat cumbersomely) get 90% of
> the benefits right now simply by being systematic about key management.


what you SHOULD do (for ssh) is: generate keys on a stand-alone machine
that's known to be secure. put them on floppy/cd/smartcard/whatever and
distribute them around the servers by actually walking up to them (i.e.
no network). set SSH to paranoid settings (e.g. automatically rejecting
unknown keys, etc.). done. it's a bunch of work, but you only have to do
it once.


of course, intruders, malicious insiders, etc can still exchange the
keys. but that's not an encryption problem and is true for every other
piece of software on those machines (if you had an intruder, you've
gotta toast and setup up anew the machine anyways).



> > Most users will happily accept SSL certs that
> > have expired, point to the wrong site or are self signed (all of
> > which could be a man in the middle attack or a lazy admin).
> 
> And yet, SSL certs are based on the X.509 PKI architecture. You claim
> a PKI will fix things, but obviously it hasn't in this instance.

and obviously, there's simply no software or infrastructure fix for user
stupidity. even if you take the choice out of the user's hands, someone
will simply write a software that  enables it again and land a
bestseller (or best-downloader).


> > I used to religously sign email's with PGP until I realized that
> > no-one probably checked, how did I know this? I started modifying
> > the email after signing so that it wouldn't verify, no-one ever
> > complained.
> 
> I'm hardly surprised. The tools to check are hard to use and the need
> is rarely obvious.

I disagree. many e-mail clients automatically verify, provided that the
key is on the keyring. it's just another key-management problem.

