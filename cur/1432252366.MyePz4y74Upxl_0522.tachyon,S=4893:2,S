From owner-cypherpunks@Algebra.COM  Wed Aug 22 18:25:38 2001
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id SAA13368
	for <kwantam@positron.mit.edu>; Wed, 22 Aug 2001 18:25:38 -0400
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id SAA07641
	for <rsw@mit.edu>; Wed, 22 Aug 2001 18:23:56 -0400 (EDT)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f7MLvKc28542
	for cypherpunks-outgoing; Wed, 22 Aug 2001 16:57:20 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (dns.lne.com [209.157.136.81])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f7MLv8R28513
	for <cypherpunks@algebra.com>; Wed, 22 Aug 2001 16:57:09 -0500
Received: (from cpunk@localhost)
	by slack.lne.com (8.11.0/8.11.0) id f7MLv6J26447
	for cypherpunks@algebra.com; Wed, 22 Aug 2001 14:57:06 -0700
Received: (from majordom@localhost)
	by slack.lne.com (8.11.0/8.11.0) id f7MLutx26434
	for cypherpunks-goingout; Wed, 22 Aug 2001 14:56:55 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Date: Wed, 22 Aug 2001 14:54:19 -0700 (PDT)
From: Ray Dillinger <bear@sonic.net>
cc: cypherpunks@lne.com
Old-Subject: Re: Lawyers, Guns, and Money
In-Reply-To: <Pine.SOL.4.10.10108212218350.5574-100000@cavern.uark.edu>
Message-ID: <Pine.LNX.4.21.0108221422580.4505-100000@bolt.sonic.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: cypherpunks@lne.com
X-spam: 5 
Subject:  Re: Lawyers, Guns, and Money
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 5 
Status: O
Content-Length: 2854
Lines: 60


On Tue, 21 Aug 2001, Mac Norton wrote:

>perhaps greater importance, in context.  Faddish as it sometimes--
>well, hell, often--is, the academic side of the law is the 
>*only* side of the law that even begins to reward originality.
>Those of us who actually represent people find that original
>thinking is the bane of most judges, unless you can make them
>believe the idea started with them.
>
>Any parallels in software, both as to faddishness among
>the "original" thinkers and leader-following otherwise?

At the first job I had out of college, we spent almost six 
months busily "updating the look" of an application that 
worked perfectly well, so that the sales guys could impress 
people not only with how well it worked, but also with how 
"slick" it was. 

So we did color fades on title bars, and added gray to our white 
scroll bars, and rearranged dialog boxes, and exchanged our 
athena widgets for motif widgets that worked exactly the same, 
and moved stuff from the regular menus to the right-mouse menu, 
and made our "drawn oval" buttons into rectangular buttons that 
were lighter on the upper and left edges and darker on the lower 
and right edges (which, laughably, was called "making them 3-d"), 
and converted the internal documentation from troff and TeX to 
HTML, and did about a jillion other tiny things that added nearly 
zero functionality but brought the old application up to the 
current idea of "style".  

A year after I left, I heard from someone who had stayed that 
they were reimplementing the interface as a "thin client" 
application, because thin clients had come into style.  
Note -- it had an XWINDOWS INTERFACE to start with!!! your 
"thin client" on an Xwindows interface is neither more nor 
less than a standard X server running on the machine where 
you want the interface to appear!

At another company, a few months ago, a lead developer came 
to me announcing that they were developing a parser to 
convert an application langauge into an XML schema using a 
whizbang database that had somehow sprouted an XML interface,
and they were having trouble with recursive structures in the 
formal schema description the database wanted.  I said, "is 
there a reason we're not using lex? lex handles recursive 
structure just fine." The response, of course, is that nobody 
wants to tell customers we're using lex to generate our XML, 
because lex isn't in style.... but this whizbang database 
(and why does a *database* have XML-conversion functions??) is.

I see a lot of engineering effort wasted on silly fads. Good 
people spending days and sometimes weeks reinventing wheels 
that represent problems that were solved decades ago, just 
because the solutions developed then, despite being proven 
and correct, are presently out of style. It's a waste of 
resources and it pisses me off.


				Bear

