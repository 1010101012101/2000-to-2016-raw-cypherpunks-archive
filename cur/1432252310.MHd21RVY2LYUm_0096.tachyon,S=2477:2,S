From owner-cypherpunks@al-qaeda.net  Mon May  9 14:38:18 2005
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (localhost.localdomain [127.0.0.1])
	by positron.jfet.org (8.13.4/8.13.4/Debian-2) with ESMTP id j49Jc5XA005118
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Mon, 9 May 2005 14:38:05 -0500
Received: (from majordomo@localhost)
	by positron.jfet.org (8.13.4/8.13.4/Submit) id j49Jc5jk005116
	for cypherpunks-outgoing; Mon, 9 May 2005 14:38:05 -0500
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;         s=beta;
  d=gmail.com;        
  h=received:message-id:date:from:reply-to:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
  b=Had86z3Ho6zN62s/JZIX898420nAaGxqAEh8Xj3sAgz5l7CZEaALiFTaSj4vQuZJB1mn/zsi8N45rATtVnWgoDDNuLu/5gTg8jnd2bVLdM2H8fjNBMng5zWzarszhQRLCRqar6VLfkdchl+uyQ2Bruvh98Vaqh1L0au0u16lYss=
Message-ID: <792ce43705050912351f0aef4c@mail.gmail.com>
Date: Mon, 9 May 2005 12:35:25 -0700
From: cypherpunk <cyphrpunk@gmail.com>
To: cypherpunks@al-qaeda.net
Subject: Re: Zero knowledge( a>b )
In-Reply-To: <20050509130058.41661.qmail@web21208.mail.yahoo.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
References: <427EADEB.5BC2E95@cdc.gov> 	
  <20050509130058.41661.qmail@web21208.mail.yahoo.com>
Content-Transfer-Encoding: 7bit
X-MIME-Autoconverted: from quoted-printable to 8bit by positron.jfet.org
  id j49Jc5fl005081
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 839
Lines: 18

On 5/9/05, Sarad AV <jtrjtrjtr2001@yahoo.com> wrote:
> If user A has the integer a and user B has the integer
> b, can a zero knowledge proof be developed to show
> that a>b,a<b or a=b.

You've got two different things mixed up here.  A zero knowledge proof
is normally used by one person to show that he knows a value
satisfying certain conditions, without revealing what the value is.
What you are asking for involves two people who want to compute a
function of their inputs, without revealing those inputs. That is
known as a multi party computation or MPC. As was pointed out,
Schneier has some good pointers on MPC calculations.

There is a program you can download called Fairplay which will perform
MPC calculations like this. One of them does exactly what you are
asking for. See http://www.cs.huji.ac.il/labs/danss/Fairplay/

CP

