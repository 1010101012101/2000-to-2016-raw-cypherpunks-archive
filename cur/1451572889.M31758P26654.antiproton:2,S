Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id tBVEemRI026631;
	Thu, 31 Dec 2015 09:40:51 -0500
Received: from cannabis.dataforce.net (cannabis.dataforce.net [195.42.160.49])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id
 tBVEekwK026627
 for <cypherpunks@cpunks.org>; Thu, 31 Dec 2015 09:40:47 -0500
Received: by cannabis.dataforce.net (Postfix, from userid 12794)
 id 30A5E4A0539; Thu, 31 Dec 2015 17:40:45 +0300 (MSK)
Date: Thu, 31 Dec 2015 16:40:37 +0200
From: Georgi Guninski <guninski@guninski.com>
To: coderman <coderman@gmail.com>
Subject: Re: De-anonymizing Programmers via Code Stylometry
Message-ID: <20151231144037.GC2515@sivokote.iziade.m$>
References: <CAJVRA1R=Rj0-VYB4midZMBu-r1=ifdEEoh+C9Nh9vTe=aaTTwA@mail.gmail.com>
 <CAJVRA1TnQy0XGz9kFuA9q9NdavLkFSRLMMbMGx8m5KuYQ+tqXg@mail.gmail.com>
 <20151231094155.GA2515@sivokote.iziade.m$>
 <CAJVRA1RX9kZx7ks1=cp3LDVm3DN-UcaFCaZM=5N0sdQLmgaLXQ@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAJVRA1RX9kZx7ks1=cp3LDVm3DN-UcaFCaZM=5N0sdQLmgaLXQ@mail.gmail.com>
header: best read with a sniffer
Cc: cypherpunks@cpunks.org
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 27

On Thu, Dec 31, 2015 at 04:49:53AM -0800, coderman wrote:
> the key aspect is that it is well distinguished among obfuscated perl
> programs written by other coders, especially architecturally complex
> perl programs (of any variety)
> 
> fun stuff!
>

Likely they can distinguish code written by honest humans.

Strongly suspect sufficiently sophisticated obfuscator
will give them troubles and the best they can do is tell
"using the same obfuscator".

Almost surely they can't fully parse the language they are 
analyzing.

Obfuscator need not produce the same output for the same
source each times it is run -- it needs produce (nearly)
functionally equivalent code. Say put many NOPs, replace
|a += 2| by |a=a+3;a=a-1|, inline many functions with different
output, etc.

What is the complexity of deciding functional equivalence
of programs in a (high level) language?

