From rswatjfet.org+caf_=rsw=jfet.org@gmail.com  Thu Jul 10 04:01:34 2014
Return-Path: <rswatjfet.org+caf_=rsw=jfet.org@gmail.com>
Received: from mail-pd0-f175.google.com (mail-pd0-f175.google.com [209.85.192.175])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6A81WKQ007762
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <rsw@jfet.org>; Thu, 10 Jul 2014 04:01:34 -0400
Received: by mail-pd0-f175.google.com with SMTP id v10so10434461pde.34
        for <rsw@jfet.org>; Thu, 10 Jul 2014 01:01:26 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-original-authentication-results:delivered-to:message-id:date
         :user-agent:mime-version:to:subject:references:in-reply-to
         :content-type:cc:precedence:list-id:list-unsubscribe:list-archive
         :list-post:list-help:list-subscribe:errors-to:sender:from;
        bh=+7LE4eqrZen2ZCtGqRbMyabh8CRYG40oHjp3OODCMO4=;
        b=NT3ty7wi+yIZkr+go1prmLoeQMqIc+lEZehgTj4wokGxGLrZNZn4/XDYIBcoRFS3lW
         LWJViK4hsQmEKaULGl50kQzLHuh4xkdukAhJW4lJKd5mo4AQCCStTQYHhSqzD90bfzLq
         K6BMxT9++0qoKB1md0CXQbHZZzAXUWdhjY649jdn7JFI/P8cbHeg6n5rRhTFgCDpU6SK
         X2idGTs/+sNvfEL4rOLt1K7f/+I1CYqIqkgjXiLBnMv771uBJBPRhX5ZPMWokPpyurgx
         Zx9yYxG855JhcIr9e4MyVnQQ1l4a7ge4wPrLCEgu6VDVLoXFY+h+ZNxvAGfjUW1NMjZx
         oV6Q==
X-Original-Authentication-Results: mx.google.com;       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net
X-Received: by 10.70.33.207 with SMTP id t15mr15958535pdi.12.1404979286637;
        Thu, 10 Jul 2014 01:01:26 -0700 (PDT)
X-Forwarded-To: rsw@jfet.org
X-Forwarded-For: rswatjfet.org@gmail.com rsw@jfet.org
Delivered-To: rswatjfet.org@gmail.com
Received: by 10.70.25.164 with SMTP id d4csp12416pdg;
        Thu, 10 Jul 2014 01:01:25 -0700 (PDT)
X-Received: by 10.67.3.168 with SMTP id bx8mr13557964pad.66.1404979284629;
        Thu, 10 Jul 2014 01:01:24 -0700 (PDT)
Received: from localhost (antiproton.jfet.org. [209.141.47.85])
        by mx.google.com with ESMTPS id dl2si47939727pbc.108.2014.07.10.01.01.24
        for <rswATjfet.org@gmail.com>
        (version=TLSv1.2 cipher=RC4-SHA bits=128/128);
        Thu, 10 Jul 2014 01:01:24 -0700 (PDT)
Received-SPF: neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) client-ip=209.141.47.85;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6A7xxN5007716;
	Thu, 10 Jul 2014 03:59:59 -0400
Received: from mail-02.1984.is (mail-02.1984.is [93.95.224.7])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6A7xrAp007712
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 10 Jul 2014 03:59:55 -0400
Received: from [46.19.137.116] (helo=[10.4.89.14])
 by mail-02.1984.is with esmtpsa (TLSv1:DHE-RSA-AES128-SHA:128)
 (Exim 4.80) (envelope-from <cathalgarvey@cathalgarvey.me>)
 id 1X59Gg-0003Sl-Ar; Thu, 10 Jul 2014 07:59:52 +0000
Message-ID: <53BE47D7.8080900@cathalgarvey.me>
Date: Thu, 10 Jul 2014 08:59:19 +0100
User-Agent: Mozilla/5.0 (X11; Linux i686;
 rv:24.0) Gecko/20100101 Thunderbird/24.6.0
MIME-Version: 1.0
To: =?UTF-8?B?RMSBdmlzIE1vc8SBbnM=?= <davispuh@gmail.com>,
        cypherpunks@cpunks.org
Subject: Re: Tox.im
References: <53B84037.7030406@cathalgarvey.me>	<20140707084122.GQ6997@ctrlc.hu>	<CAOE4rSwC55WuYLNRtV5ihZOoVakcaFeV6Z4_a--2nV3d7nOk-g@mail.gmail.com>	<1997735.1n1TTR1eli@lapuntu>	<53BB899A.40408@gmail.com>	<CAOsGNSS1H87C666NJKNi7SQaftkxZkRhq6JOoS6NwyZsS5vaKg@mail.gmail.com>	<CAOE4rSzEMCjRo57VQfP2gQ4xrCpKLxKd23XvH0YxH7ZE7jCnmQ@mail.gmail.com>	<969fa7d4-d6b4-4d5c-bbbf-c5d7b6482746@email.android.com>	<CAOE4rSziWQxm-3W6UP_hCAJN1u3stPbqn-nSXEu7oxcKYjVf_w@mail.gmail.com>	<CAHWD2rL9gJv30n8AsjqF-ngbmu0F61jZRnCLTyX3k4OyoR8m2g@mail.gmail.com>	<53BCD390.9040303@gmail.com>	<CAHWD2rJt55_FiCNruwkoJ-_YKav9H+PSdhEjM8D7rTpzko4YDQ@mail.gmail.com>
 <CAOE4rSzQOdjTMMurtQAWv3+kx35KG2KDuzd2i53tKKZpdrp8GQ@mail.gmail.com>
In-Reply-To: <CAOE4rSzQOdjTMMurtQAWv3+kx35KG2KDuzd2i53tKKZpdrp8GQ@mail.gmail.com>
X-Enigmail-Version: 1.6
Content-Type: multipart/signed; micalg=pgp-sha512;
 protocol="application/pgp-signature";
 boundary="w0TPQrj8mU4LtNbecDP0UDt55wRx0ng5b"
Cc: Bill Stewart <billstewart@pobox.com>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
From: Cathal Garvey <cathalgarvey@cathalgarvey.me>
X-Gspam-Loop: antiproton.jfet.org
Status: O
Content-Length: 24229
Lines: 580

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--w0TPQrj8mU4LtNbecDP0UDt55wRx0ng5b
Content-Type: multipart/mixed;
 boundary="------------040104030203030600050505"

This is a multi-part message in MIME format.
--------------040104030203030600050505
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

> A lot of protocols are text based, often implemented using C strings an=
d
> that's what I mean, you can't embed a JSON with binary data containing =
NUL
> there (because NUL will terminate that string), so you handle it like
> typical binary file and then what's the point of JSON to use in first
> place, because I don't see how it can be any better than any other prop=
er
> binary data. Such binary JSON gives only overhead but no advantages.

You can also shove NUL bytes into any other transfer encoding to make
headaches for the recipient, it's not an encoding-specific problem. It's
up to the author of a decoder to account for their language's issues. In
C, you'd have to treat the data as binary, not a string, to avoid NUL
termination, and only decode (safely) that which is explicitly described
as a UTF8 string by leading with "u"; if that contains premature NULs,
it's an error condition.

On 09/07/14 23:27, D=C4=81vis Mos=C4=81ns wrote:
> 2014-07-08 23:31 GMT+03:00 Lodewijk andr=C3=A9 de la porte <l@odewijk.n=
l>:
>=20
>> 2014-07-08 21:53 GMT+02:00 D=C4=81vis Mos=C4=81ns <davispuh@gmail.com>=
:
>>
>> Also what about NUL bytes? I bet most parsers are implemented in C/C++=

>>> using typical char * null-terminated string, how'll pass this JSON to=

>>> someone? because well NUL...
>>
>>
>> At the parser level you would find a "b" character that's not between
>> brackets, signalling a binary header is coming. A binary header is act=
ually
>> just the number of bytes that follow in binary format. The following b=
ytes
>> are then a binary file, to be assigned to a string as if it were a
>> variable. We have a binarybuffer in javascript, that sort of thing. It=

>> would contain the NULL byte if you like it to.
>>
>> [...]
>>
>> I think it's much more serious that you have to serve the BJSON comple=
tely
>> as a binary file. It's not like you can dump it onto a webpage anymore=
=2E You
>> can't slip it into your normal HTTP text transfer bodies either, has t=
o
>> work with attachments. Attachments should be secure when facing malfor=
med
>> transfers* etc. Inconvenient, but not the end.
>>
>>
> A lot of protocols are text based, often implemented using C strings an=
d
> that's what I mean, you can't embed a JSON with binary data containing =
NUL
> there (because NUL will terminate that string), so you handle it like
> typical binary file and then what's the point of JSON to use in first
> place, because I don't see how it can be any better than any other prop=
er
> binary data. Such binary JSON gives only overhead but no advantages.
>=20
>=20
> 2014-07-09 7:25 GMT+03:00 Bill Stewart <billstewart@pobox.com>:
>=20
>> I haven't used it in years, but I was always quite fond of XDR
>> https://en.wikipedia.org/wiki/External_Data_Representation
>> Sun's External Data Representation coding from the 80s, RFC-1014.
>> Defines a bunch of variable types, and gives you tools for packing and=

>> unpacking them.
>>
>>
> It's actually pretty good, but there are reasons why Protobuf was creat=
ed
> and used instead. The main benefit of Protobuf is that it's easily
> extendable and can have optional fields. If you add or remove optional
> fields to server all old clients will still work like nothing have chan=
ged.
> But with XDR you can't do that unless you add another layer on top of i=
t,
> but that's more work comparing to just taking Protobuf and using it. Al=
so
> currently Protobuf is much more popular and have more libraries availab=
le
> for dozens of langauges.
>=20
>=20
> 2014-07-09 8:30 GMT+03:00 "=C5=81ukasz \"Cyber Killer\" Korpalski" <
> cyberkiller8@gmail.com>:
>=20
>>
>> It's really nice that so many of you got into the spirit and start
>> thinking about how to change xmpp to make it something new, but what a=
re
>> you achieving here? It will end up being a new protocol, incompatible
>> with existing xmpp, it will take a few years to finish the spec, then
>> another 10+ years until any meaningful applications start using it (if=

>> at all)... So yeah, except being "coder porn" it does nothing to help
>> the problem here and now.
>>
>>
> The goal would be to create smaller overhead and thus be more performan=
ce
> effective. Also it doesn't have to be incompatible. It could be
> incorporated in XMPP so that new applications could use it but other's =
just
> use same legacy XMPP and everything keeps working fine and people would=
n't
> know what's happening under the hood, nor they would care. And I think =
it
> would be trivial to convince people to use and enable this "Binary" XMP=
P
> mode (if it's implemented in their client) which makes their chat clien=
t
> app to use 100x times less bandwidth and 50x times less CPU time (spent=
 in
> parsing), thus your phone's battery would last longer. And yes XML over=
head
> is that big.
>=20
>=20
>> A technically pretty proto won't help, today=E2=80=99s world has a hug=
e problem
>> with taking anything new. Better to stay with existing stuff, make it
>> maybe less efficient because of it, but it will be here fast, when it'=
s
>> needed. Plus being less efficient is a no issue today, with fast
>> machines (you can use compression on the fly, yes really :-P ), loads =
of
>> storage, broadband connections (even the 3G data caps are getting larg=
er
>> and larger each year), etc. People are sending gigabytes of binary fil=
es
>> in base64 each day in email messages, so why even care? ;-)
>>
>>
> I guess you don't know that nothing is ever fast or good enough. People=

> will always want things faster. What about real-time video call in 4k @=
 60
> FPS ? It's unreal to imagine this in XMPP unless some really good binar=
y
> protocol is used so that it's not your software that creates a bottlene=
ck,
> but if it does then your software is bad and why would I use it over ot=
her
> that can do it, the one that was designed for it, for example see Eleme=
ntal
> Demonstrates 4K HEVC Video at 60 fps in London
> <http://www.streamingmediaglobal.com/Articles/Editorial/Featured-Articl=
es/Elemental-Demonstrates-4K-HEVC-Video-at-60-fps-in-London-93707.aspx>
>=20
> Anyway, I must admit that I haven't studied XMPP enough to know how goo=
d or
> bad it is, but always should try to minimize any overhead, basically yo=
u
> want to process as little as possible.
>=20
> Here straight from wiki, weaknesses:
>=20
>    - Does not support Quality of Service (QoS)
>       - XMPP does not have the ability to set the timing flow of messag=
es,
>       preventing XMPP from becoming practical for many embedded distrib=
uted
>       realtime, Machine-to-Machine, or IoT applications.
>    - High overhead for embedded applications
>       - As a text based protocol, XMPP has a relatively high computing =
and
>       network overhead.
>    - In-band binary data transfer is inefficient
>       - Binary data must be first base64 encoded before it can be
>       transmitted in-band. Therefore any significant amount of binary
> data (e.g.,
>       file transfers) is best transmitted out-of-band, using in-band
> messages to
>       coordinate. The best example of this is the Jingle
>       <http://en.wikipedia.org/wiki/Jingle_%28protocol%29> XMPP Extensi=
on
>       Protocol, XEP-0166 <http://xmpp.org/extensions/xep-0166.html>. Th=
is
>       issue are being adressed by the experimental XEP-0322: Efficient =
XML
>       Interchange (EXI) Format <http://xmpp.org/extensions/xep-0322.htm=
l>.
>=20
>=20
> that sounds really really bad. But it's not all lost, Jingle
> <http://xmpp.org/about-xmpp/technology-overview/jingle/> actually seems=

> good as it have option to switch to Real-time Transport Protocol (RTP)
> <http://en.wikipedia.org/wiki/Real-time_Transport_Protocol> and then it=
's
> just pure binary stream with minimal overhead. And looks like they are
> aware of these issues as EXI is being developed, but still while it's a=
 big
> step forward, it will never beat pure binary protocol.
>=20
> Also from wiki, this is good idea:
>=20
> A perhaps more efficient transport for real-time messaging is WebSocket=

> <http://en.wikipedia.org/wiki/WebSocket>, a web technology providing fo=
r
> bi-directional, full-duplex communications channels over a single TCP
> connection. Experimental implementations of XMPP over WebSocket exist, =
and
> a (now-expired) Internet-Draft documenting this approach was published =
at
> the IETF but not yet standardized.
>=20
>=20
> In my opinion the bottom line is - a small addition to existing xmpp ha=
s
>> a far larger chance of being widely adopted (by applications and by th=
e
>> users) than a completely new protocol. And despite how awesome coder o=
ne
>> might be - you won't be able to write all those implementations yourse=
lf
>> or convince the masses to switch (again!).
>>
>>
> Maybe yes, maybe no. I think if you've written specification in very cl=
ear
> and understandable way and if you've reference implementation library w=
hich
> everyone could just link against and if your protocol does it better th=
an
> current existing solutions then I don't see why it wouldn't get adapted=
=2E
> Besides you don't need it implemented everywhere, you need it so that i=
t's
> in application you use and you could contribute there yourself.
>=20
>=20
> 2014-07-09 13:17 GMT+03:00 Lodewijk andr=C3=A9 de la porte <l@odewijk.n=
l>:
>=20
>> [...]
>>
>> There is no masses using XMPP. Masses of coders, maybe, and they will =
use
>> the best tool for the job.
>>
>> All the extensions have succeeded in making any XMPP app lacking in
>> usability. I sure haven't found any nice XMPP clients, nice enough to
>> compare with native clients.
>>
>  That's true indeed, currently there aren't any decent XMPP client (atl=
east
> I'm not aware of any). I mean from user's usability point (UX/UI). Ther=
e
> are good either proprietary clients (eg. Skype) or good open source cli=
ents
> (eq. Quassel) that doesn't support XMPP :D
>=20
> In fact I'm willing to bet everyone in the western world uses FB, Googl=
e
>> chat and MSN (slackers and slowpokes). They all have limited XMPP
>> implementations, they native clients do more. And there's no good app =
for
>> interacting with XMPP.
>>
> About which Western wold you're talking about? I don't know, but I woul=
d
> assume that in Europe, Skype would be one of the most popular clients.
> Atleast here MSN never was a thing and everyone have always been using
> Skype and almost everyone still does. FB isn't really used that much (h=
ere
> we've better alternative). And about Google Talk only some people are a=
ware
> that it even exists. I know that in Russia it's ICQ and in China it's Q=
Q
> that's dominating there. Anyway I think they don't implement XMPP becau=
se
> it's too much work for too small benefit. Also then how they would comp=
ete
> with others if they would be limited with XMPP if it doesn't do somethi=
ng
> that they want to do. So own protocol might be safer bet for a lot of
> companies. By the way Google Talk dropped XMPP support
> <https://www.eff.org/deeplinks/2013/05/google-abandons-open-standards-i=
nstant-messaging>
> .
>=20
>=20
> I actually really hoped that Tox would succeed so that I could drop Sky=
pe
> and convince others to do same :D But now I'm not so sure if there will=
 be
> some replacement in nearest future. Actually I think one of reason why =
Tox
> created new protocol and didn't used XMPP is that generally XMPP consis=
ts
> of client-server architecture and P2P support is only with extension wh=
ich
> isn't widely known nor implemented much. Also XMPP seems way too
> complicated than it should be.
>=20
> Pidgin really isn't good, it's just the only one out there. And it is s=
till
>> in the MSN era. I've switched to Office 2013 from Libre/OpenOffice and=
 it
>> really is in a different league all together. And it sucks that it is.=
 But
>> what can we do?
>>
> I personally don't like Pidgin too. And about Office and LibreOffice th=
ey
> both have their own advantages and disadvantages but I wouldn't say tha=
t
> any of them would be significantly better or worse than other. Also it'=
s
> nothing to do with open souirce, it's just we've more users that want
> everything to be perfect without any effort for free than go and help a=
nd
> contribute to projects.
>=20
>=20
> Ok, so anyway I've come to conclusion that I'm not sure anymore whether=

> it's better to try to fix XMPP or just create new much simpler and bett=
er
> protocol. But in any case we really should summarize all our points abo=
ut
> what's bad in XMPP and send them to XMPP group and see if they're willi=
ng
> to fix them and accept our proposals.
>=20
> If we want to create a new protocol, then I've few ideas about it. Firs=
tly
> it's really a shame that a lot of things are getting reinvented over an=
d
> over again. So the main goal would be don't reinvent stuff but reuse as=

> much as possible from existing things. It would help a lot as there's
> libraries for already everything and would just have to combine them. N=
ext,
> think about high-level differences between instant message, group messa=
ge,
> offline chat message, email, SMS, MMS, mailing list. What are differenc=
es?
> Actually if you think about it, there are no differences at all, it's t=
he
> same message being delivered in various ways. But why single protocol
> couldn't handle it all? In fact it could. We're already using browser f=
or
> all of that. It's just that there's no specification to unify it all in=

> single protocol. Imagine if we wouldn't need a separate application for=

> IRC, for email nor for other chats. It all could be handled by one gene=
ral
> protocol. And why stop here, actually calls, sound and video are also
> exactly same. There's no really difference between text or sound/video,=

> it's just a data and it depends only how you interpret it. Also securit=
y,
> there's only one option, just encrypt it all before sending. It's just =
so
> simple.
>=20
> This next generation protocol would be a superset of typical media
> protocols and thus it wouldn't matter anymore what other people use. Yo=
u
> would just use some middle-ware protocol layer that would translate tha=
t
> foreign protocol to this next-gen protocol and you simply use your favo=
rite
> client. From user's point of view it doesn't matter at all which protoc=
ol
> is used under the hood.
>=20
> So the main features and design goals of this protocol should be:
>=20
>    - Support for peer-to-peer and client-server architectures over both=
 TCP
>    and UDP
>    - Lightweight, minimal overhead, generally be just pass-thru
>    - Efficient encoding, basically binary streams
>    - Encryption by default with option for OTR
>    - Data stream itself can contain anything: text, images, sound, vide=
o,
>    animations, screen sharing (and even remote desktop control would be=

>    possible)
>    - Dozens of events: joined, left, started typing and so on
>    - One to one and one to many streams
>    - maybe more things
>=20
>=20
> So how that all would be possible? It's extremely simple. In client-ser=
ver
> architecture, open connection to server, establish TLS (for example) no=
w
> send this next-gen protocol header message (to specify what kind of dat=
a
> you're sending) and then send your data, it could be for example a raw
> Theora <http://www.theora.org/> stream (directly from your camera) or j=
ust
> a text message. Then server just relays it to all parties.
>=20
> I don't think it could be any simpler and nothing will beat this in ter=
ms
> of performance. You've just some basic dependencies and what would be t=
he
> reason to complicate this? It's trivial to implement as there's already=

> libraries for those. In case of offline messages server would just stor=
e
> them and in fact it could do same for sound and videos too. You know Vi=
ne,
> Snapchat? what about YouTube, Soundcloud, basically it could support th=
em
> all. IMO this is millions worth idea :D
>=20
>=20
> It's worth looking at WebSockets <https://www.websocket.org/>, WebRTC
> <http://www.webrtc.org> and probably other standards.
>=20
>=20
> I really don't understand why currently it all have been made so
> complicated because it isn't.
>=20

--=20
T: @onetruecathal, @IndieBBDNA
P: +353876363185
W: http://indiebiotech.com

--------------040104030203030600050505
Content-Type: application/pgp-keys;
 name="0x988B9099.asc"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
 filename="0x988B9099.asc"

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.12 (GNU/Linux)

mQINBFES3ZMBEADjIBApyo6hm1jU2fdyCYm99nSnutjaVfwQ8egnLa6FLSyJyl96
2lGfdwb9e5isH/Tujt7VFhmU7carTVz7rtJbaCqGcgLY6IUEy4VGakZCjw6vsPUQ
NJZN7vS9wG9gUsTrw0QhtC8IQ+TAvrIERi32zab5amdw/znpa8p/tiLjEFapd0wE
Lyr9txlpPl3T+64eZ35SfneHF0OYPS79qpK3KJt3TDCYFrM41EevLVzQRosTnygk
8lMvQfqtNkdRJpmNHsjG1kFOzoEINVTyY4PeO6rRaeDp6H2KD5tu9SXsi8uF1Ayt
F0fB+1c/WHTEvtvNneGonOkWWJokzayfMRvoDhxGsrFsASvoLZ21m7U9Fdyid4Cw
iU8pAgRCq53CV+YGLv6qioPDpuba0S4cO/eUPR6APcKHcE0xU5A5yIKiCPVQQKG3
85P4BRC+GwZ2ni2/cz/jwzFi/j9CuSoU3L1fLGN5wHmmMvNOSyIgtCWx7tnxvmGE
eGbLtwfgv8pXFF9WoH1d2nvZNdgWNaGrp1zxssho62pnO9FTe6FgvIyLD4v7OyIP
kPoTjWaaZh/U0hXeQyQOXKeTFEAMblMmpDHeCYLwjtWZLo4Z8+0Ez5sk3B0OETH4
B0K7hwIhIBqp9Gcgq4haSpo+vfxRJH3ouRGfbNMCcras1s+yBmUbvR3mBQARAQAB
tI9DYXRoYWwgR2FydmV5IChPdGhlciBhY2NzOiBvbmV0cnVlY2F0aGFsQHR3aXR0
ZXIsIGNhdGhhbGdhcnZleUBnaXRodWIsIGNhdGhhbGdhcnZleUBnaXRvcmlvdXMs
IGluZGllYmlvdGVjaC5jb20pIDxjYXRoYWxnYXJ2ZXlAY2F0aGFsZ2FydmV5Lm1l
PokCSwQTAQgANQIbAwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgBAYMTI3LjAuMC4x
Ojk5OTk5BQJSeChBAhkBAAoJEL0iNgSYi5CZ3CwQAN3974eow6SnmAHdQY+Pq2La
l5YDRIqcrVO3ybDrZ0gscS9K3rqNN4VRY45RIeMaq+CVjIJYqLCOIkzFCxNCxiyp
ZjzRBOcEsH9j8sxRkUKLRSlTlb+u6SrQll16L5JLQY2tFl5dgpWgakQD7xD0iUQ4
qX/HEakQhGiCUypYKqrT5GgrIFVsf22OMxFbwflNO/QNwzZVBDxf2yqi/c40q/rZ
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
ohzRIlrk1LdGFiPy
=3DwOG4
-----END PGP PUBLIC KEY BLOCK-----

--------------040104030203030600050505--

--w0TPQrj8mU4LtNbecDP0UDt55wRx0ng5b
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQIcBAEBCgAGBQJTvkffAAoJEL0iNgSYi5CZK/UP/RrfUdZRSBy0AsbsuhtzNXWG
3JBGn0Rp8ct6f1BkV2eX9LiMCF7HNgnqnvP4lgbEIw8q4Uyn92rMzf+nfG0WJ2OT
Eu5YM88B/a+tE3Ezst9wi2qahA2FXAlf3JN0Y0143G3j08S+ZXaqWY4HmUckaLF5
lyuUjqbv11TmARcSjtwAeMfsYVWX27jiA9NjmLj3i0mRvXdOOWcrvSBGrgIBn0QX
RH1JWOnPVUwbZSHiVUytezE+VKdo8I+bCRgebRA6ZG7rGbvhikSesC2r5HQW74i3
DGwzdS8i6BA378SMzKVjLAJjkgE7mPkTADZOPEJJylSL2+Ql49prVccn1WINVRAg
jYkdqi3CZBfUXOsUTLsFV963DMHI/BGtq/Nk1SOGBtNCb1kev3ZhAfdbJ2hz5ACW
A0PIbhgAa9zz1xCh1khUtD7VlFJYofspwWk1w0nVGrluVdvOfi0i8TErIsrxc+Sw
OZaZW4GSTmzVLsgfZuVxEnmxZ0WPTPCu1HL5UCuWxd666lOT93IKJ7+Jlbejc8t/
9DlNLWP7payn8LuYNRMcjkeEC3tuQWfdN7/ihE8mQjrjxsKmRd4wf8+em2I5eivf
fSnsQ/dMhbB2g4YPPUXd4eUbIU9QESDs4arn9bu0L7Kz0d3IUJBf6gOweJST9+zB
bhYddFuVgYjf+Yj8nHIt
=8/Tj
-----END PGP SIGNATURE-----

--w0TPQrj8mU4LtNbecDP0UDt55wRx0ng5b--

