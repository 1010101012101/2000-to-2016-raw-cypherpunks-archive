From owner-cypherpunks@al-qaeda.net  Thu Aug 12 21:43:42 2004
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (localhost [127.0.0.1])
	by positron.jfet.org (8.12.11/8.12.11/Debian-3) with ESMTP id i7D2hbxX016251
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Thu, 12 Aug 2004 21:43:37 -0500
Received: (from majordomo@localhost)
	by positron.jfet.org (8.12.11/8.12.11/Debian-3) id i7D2hbgu016250
	for cypherpunks-outgoing; Thu, 12 Aug 2004 21:43:37 -0500
Message-ID: <411C29CC.6F4EDF19@cdc.gov>
Date: Thu, 12 Aug 2004 19:39:08 -0700
From: "Major Variola (ret)" <mv@cdc.gov>
Organization: GLODO PSYOPS
X-Mailer: Mozilla 4.75 [en] (Win95; U)
X-Accept-Language: en
MIME-Version: 1.0
To: "cypherpunks@al-qaeda.net" <cypherpunks@al-qaeda.net>
Subject: Re: Forensics on PDAs, notes from the field
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 1224
Lines: 31

Quoth Thomas Shaddack <shaddack@ns.arachne.cz>

> Obvious lesson: Steganography tool authors, your programs
> should use the worm/HIV trick of changing their signatures
> with every invocation.  Much harder for the forensic
> fedz to recognize your tools.  (As suspicious, of course).

It should be enough to do that at the installation time. The adversary
in
this model gets to analyze the file only once, and we want to make sure
that nobody tampered with the file as a protection against other, more
"active" threat models. What we want is to have a file and its hash, so
we
can make sure the file content is unchanged, but the hash has to be as
globally-unique as possible.

> The NIST CDROM also doesn't seem to include source code amongst its
> sigs, so if you compile yourself, you may avoid their easy glance.

A cool thing for this purpose could be a patch for gcc to produce unique

code every time, perhaps using some of the polymorphic methods used by
viruses.

Just adding a chunk of data to make the hash unique will work against
the
current generation of the described tools. But we should plan to the
future, what moves the adversary can do to counter this step.

--------
Dear TS: you have very good ideas.

