Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t8H5AjqQ008507;
	Thu, 17 Sep 2015 01:10:46 -0400
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="2048-bit key; unprotected key"
	header.d=yahoo.com header.i=@yahoo.com header.b=SaMxg7xP;
	dkim-adsp=pass; dkim-atps=neutral
Received: from nm31-vm4.bullet.mail.gq1.yahoo.com
 (nm31-vm4.bullet.mail.gq1.yahoo.com [98.136.216.211])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t8H5AgJA008503
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES256-SHA bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 17 Sep 2015 01:10:43 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoo.com; s=s2048;
 t=1442466636; bh=VrUGs/CfpQ1LwiYeTyXheAyAw3H7WEP+NEdmkTSFwLo=;
 h=Date:From:Reply-To:To:In-Reply-To:References:Subject:From:Subject;
 b=SaMxg7xPAca502SsnoXH0XfaJbxafegBvVrcHnH8AejFfflzYzMjLo2+VhaRb9kuIajaigjXzbwvwhKxmcedowbTFrceXkNk2Osqb46YJ4saCRUHb3gMvzWP0Mxty9F4GXR4zng+MT4D83DBihFewosK2OuE9qmXf/vMENDsc1bATWb32XUG9pibNJvCowavEl3qMPZapbXB00dUiDhWwbY8Vwcqys/KEg1hzC6gKnwTmvNaUnZtNmW3ckKWeeolCTCW6XYcNa7Th0MCo3hiNNGXV1jk28/ceouly6tpkIrDrymxMAkV7k3nCJEo/0o9MviFRrTe0TgMH8IE9haFjA==
Received: from [127.0.0.1] by nm31.bullet.mail.gq1.yahoo.com with NNFMP;
 17 Sep 2015 05:10:36 -0000
Received: from [98.137.12.63] by nm31.bullet.mail.gq1.yahoo.com with NNFMP;
 17 Sep 2015 05:07:53 -0000
Received: from [98.139.215.143] by tm8.bullet.mail.gq1.yahoo.com with NNFMP;
 17 Sep 2015 05:07:52 -0000
Received: from [98.139.212.232] by tm14.bullet.mail.bf1.yahoo.com with NNFMP;
 17 Sep 2015 05:07:52 -0000
Received: from [127.0.0.1] by omp1041.mail.bf1.yahoo.com with NNFMP;
 17 Sep 2015 05:07:52 -0000
X-Yahoo-Newman-Property: ymail-4
X-Yahoo-Newman-Id: 430596.56976.bm@omp1041.mail.bf1.yahoo.com
X-YMail-OSG: YoCrdKcVM1m.uec_LKE2Qtch806h.dj4CyYB2aB79kC_SzrLesAQRam5hs94tIT
 DwbMgS029OnMJ20f.i9S0YcAWFLMhmeJYBeIsV7A7n2c19oefYZYQ4L2gEY2q8FRjH0mHr4jFeqt
 B_TEYHR5pcCj4yhmt7OSpicw2L4zExmH00PHPRDEyqUMdnL5PHYM_l7nTUsE5RQtjmaid4x_JNn0
 GpOxBYxMv5h6AGEPdAlb9_fb5qE63hpFmaf9O8aTrAwNalEWX9B4JssFznpPmfxAIKxyRsnhVNS7
 hq6fg.Xw6h9Q7SUC8sex.wLhiay.ANk89fArhDshGCFNwTo4YHOhvz5lUlMNVVdPyFsKyVTFCZv4
 zmNioraBMe.gY0A0L9s4nEZa4YOvKRCEBvcnN2kx4bGIY_sbMJ_AfxWxtvd4pOnmyCssauh4mS.7
 XNdz49u.9r6DdiupUcGmFY5Fuyca60gOtwkLzAUC.UPzuuqbnfWuf_oFSLt6D_GHGkJ4-
Received: by 66.196.81.110; Thu, 17 Sep 2015 05:07:51 +0000 
Date: Thu, 17 Sep 2015 05:07:51 +0000 (UTC)
From: jim bell <jdb10987@yahoo.com>
To: grarpamp <grarpamp@gmail.com>,
        "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
Message-ID: <598418556.769488.1442466471588.JavaMail.yahoo@mail.yahoo.com>
In-Reply-To: <CAD2Ti2_kHhhMQ9yYcoHbOqDxCb9X3oq_JWgRzPh5mySZ8i9UdA@mail.gmail.com>
References: <CAD2Ti2_kHhhMQ9yYcoHbOqDxCb9X3oq_JWgRzPh5mySZ8i9UdA@mail.gmail.com>
Subject: Re: How much/what hardware does the rowhammer DRAM bug affects?
MIME-Version: 1.0
Content-Type: multipart/alternative; 
 boundary="----=_Part_769487_1519051059.1442466471585"
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Reply-To: jim bell <jdb10987@yahoo.com>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 152

------=_Part_769487_1519051059.1442466471585
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

  From: grarpamp <grarpamp@gmail.com>
On Wed, Sep 16, 2015 at 4:03 PM, jim bell <jdb10987@yahoo.com> wrote:



>=C2=A0 Product engineers were, and presumably still are, responsible for w=
riting
> test programs to run chips through their paces, in Intel's case using a
> Teradyne computer.
> http://www.teradyne.com/products/semiconductor-test/magnum-v
>
> I don't think the concept of this kind of weakness is new:=C2=A0 Even in =
1980,
> DRAMs were tested for such repeated accesses, to ensure that such errors
> would not occur.=C2=A0 This was particularly true for a process called "d=
evice
> characterization", in which chips were attacked in all manner of
> electronically-abusive ways, to uncover these weaknesses, and fix the
> circuit design should such flaws be uncovered.
> One way these techniques could be thwarted is to return to the use of
> parity-bits (8+1 parity) in memory access, in DRAM module and computer
> design, to whatever extent they are no longer used.=C2=A0 Any (successful=
)
> attempt to modify bits in a DRAM would quickly end up causing a parity
> error, which would at least show which manufacturer's DRAM chips are
> susceptible to this kind of attack.=C2=A0 A person who was forced to use =
a
> no-parity computer could, at least,=C2=A0 limit his purchases of such mod=
ules to
> those populated with DRAMs not susceptible to the problem.
>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Jim Bell


Some paper has said systems using ECC RAM are resistant / immune
to rowhammer.

There is still a fair bump in cost for ECC system
however once you've seen your first syslog entry
you forget about the cost. Regardless of rowhammer.
You're right, ECC would be even better. =C2=A0ECC should, indeed, be essent=
ially immune from rowhammer, and will correct it and all other sorts of sin=
gle-bit errors, and they will generally detect all double-bit errors.=C2=A0=
=C2=A0 However, as you pointed out ECC is presumably much more costly than =
mere parity bits, not in the least because they have to use more bits of st=
orage. =C2=A0As I vaguely recall, 8 data bits had to be coupled with 4 ECC =
bits; 16 data/5ECC; 32 data/6 ECC; 64 data/7 ECC; 128 data/8 ECC. =C2=A0Thi=
s shows that ECC is much more efficient, as word width goes up, which in pr=
inciple would make its cost penalty easier to take.=C2=A0I haven't been kee=
ping up with DRAM technology like I did in the 70's, 80's, and 90's, but I =
am not aware if ECC is being easily implemented inside DRAM chips. =C2=A0Th=
ere was a very early Micron Technology 64Kbit DRAM that, as I recall, had t=
his internal to individual DRAM chips, but it didn't last very long in comp=
etition with the jellybean parts. =C2=A0Even more than the cost, I think th=
at ECC added (and maybe still adds) an access-time penalty. =C2=A0Generally=
, parity-only shouldn't add access time delays. =C2=A0One obscure issue is =
that if the external memory system detects an error (either parity or ECC),=
 can the microprocessor be instructed to "back up" and reject the recently-=
acquired byte/word? =C2=A0Most early microprocessors didn't have that abili=
ty, which I believe is why those systems had to "wait" for the parity or EC=
C to be generated and checked. =C2=A0=C2=A0 =C2=A0 =C2=A0 =C2=A0 Jim Bell





  
------=_Part_769487_1519051059.1442466471585
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<html><body><div style=3D"color:#000; background-color:#fff; font-family:He=
lveticaNeue, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;fo=
nt-size:13px"><div></div><div style=3D"font-family: HelveticaNeue, Helvetic=
a Neue, Helvetica, Arial, Lucida Grande, sans-serif; font-size: 13px;" id=
=3D"yui_3_16_0_1_1442430869518_15067"><div style=3D"font-family: HelveticaN=
eue, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif; font-size=
: 16px;" id=3D"yui_3_16_0_1_1442430869518_15066"><div dir=3D"ltr" id=3D"yui=
_3_16_0_1_1442430869518_15065">  <font size=3D"2" face=3D"Arial" id=3D"yui_=
3_16_0_1_1442430869518_15064"> <b><span style=3D"font-weight:bold;">From:</=
span></b> grarpamp &lt;grarpamp@gmail.com&gt;<br></font></div><div class=3D=
"y_msg_container" id=3D"yui_3_16_0_1_1442430869518_15111">On Wed, Sep 16, 2=
015 at 4:03 PM, jim bell &lt;<a shape=3D"rect" ymailto=3D"mailto:jdb10987@y=
ahoo.com" href=3D"mailto:jdb10987@yahoo.com">jdb10987@yahoo.com</a>&gt; wro=
te:<div class=3D"qtdSeparateBR"><br><br></div><div class=3D"yqt3190798218" =
id=3D"yqtfd44434"><br clear=3D"none"><br clear=3D"none">&gt;&nbsp; Product =
engineers were, and presumably still are, responsible for writing<br clear=
=3D"none">&gt; test programs to run chips through their paces, in Intel's c=
ase using a<br clear=3D"none">&gt; Teradyne computer.<br clear=3D"none">&gt=
; <a shape=3D"rect" href=3D"http://www.teradyne.com/products/semiconductor-=
test/magnum-v" target=3D"_blank">http://www.teradyne.com/products/semicondu=
ctor-test/magnum-v</a><br clear=3D"none">&gt;<br clear=3D"none">&gt; I don'=
t think the concept of this kind of weakness is new:&nbsp; Even in 1980,<br=
 clear=3D"none">&gt; DRAMs were tested for such repeated accesses, to ensur=
e that such errors<br clear=3D"none">&gt; would not occur.&nbsp; This was p=
articularly true for a process called "device<br clear=3D"none">&gt; charac=
terization", in which chips were attacked in all manner of<br clear=3D"none=
">&gt; electronically-abusive ways, to uncover these weaknesses, and fix th=
e<br clear=3D"none">&gt; circuit design should such flaws be uncovered.<br =
clear=3D"none">&gt; One way these techniques could be thwarted is to return=
 to the use of<br clear=3D"none">&gt; parity-bits (8+1 parity) in memory ac=
cess, in DRAM module and computer<br clear=3D"none">&gt; design, to whateve=
r extent they are no longer used.&nbsp; Any (successful)<br clear=3D"none">=
&gt; attempt to modify bits in a DRAM would quickly end up causing a parity=
<br clear=3D"none">&gt; error, which would at least show which manufacturer=
's DRAM chips are<br clear=3D"none">&gt; susceptible to this kind of attack=
.&nbsp; A person who was forced to use a<br clear=3D"none">&gt; no-parity c=
omputer could, at least,&nbsp; limit his purchases of such modules to<br cl=
ear=3D"none">&gt; those populated with DRAMs not susceptible to the problem=
.<br clear=3D"none">&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Jim Bell<=
/div><br clear=3D"none"><br clear=3D"none"><br clear=3D"none">Some paper ha=
s said systems using ECC RAM are resistant / immune<br clear=3D"none">to ro=
whammer.<br clear=3D"none"><br clear=3D"none">There is still a fair bump in=
 cost for ECC system<br clear=3D"none">however once you've seen your first =
syslog entry<br clear=3D"none">you forget about the cost. Regardless of row=
hammer.</div><div class=3D"y_msg_container" id=3D"yui_3_16_0_1_144243086951=
8_15111"><br></div><div class=3D"y_msg_container" id=3D"yui_3_16_0_1_144243=
0869518_15111">You're right, ECC would be even better. &nbsp;ECC should, in=
deed, be essentially immune from rowhammer, and will correct it and all oth=
er sorts of single-bit errors, and they will generally detect all double-bi=
t errors.</div><div class=3D"y_msg_container" id=3D"yui_3_16_0_1_1442430869=
518_15111">&nbsp;&nbsp; However, as you pointed out ECC is presumably much =
more costly than mere parity bits, not in the least because they have to us=
e more bits of storage. &nbsp;As I vaguely recall, 8 data bits had to be co=
upled with 4 ECC bits; 16 data/5ECC; 32 data/6 ECC; 64 data/7 ECC; 128 data=
/8 ECC. &nbsp;This shows that ECC is much more efficient, as word width goe=
s up, which in principle would make its cost penalty easier to take.</div><=
div class=3D"y_msg_container" id=3D"yui_3_16_0_1_1442430869518_15111">&nbsp=
;I haven't been keeping up with DRAM technology like I did in the 70's, 80'=
s, and 90's, but I am not aware if ECC is being easily implemented inside D=
RAM chips. &nbsp;There was a very early Micron Technology 64Kbit DRAM that,=
 as I recall, had this internal to individual DRAM chips, but it didn't las=
t very long in competition with the jellybean parts. &nbsp;Even more than t=
he cost, I think that ECC added (and maybe still adds) an access-time penal=
ty. &nbsp;Generally, parity-only shouldn't add access time delays. &nbsp;On=
e obscure issue is that if the external memory system detects an error (eit=
her parity or ECC), can the microprocessor be instructed to "back up" and r=
eject the recently-acquired byte/word? &nbsp;Most early microprocessors did=
n't have that ability, which I believe is why those systems had to "wait" f=
or the parity or ECC to be generated and checked. &nbsp;</div><div class=3D=
"y_msg_container" id=3D"yui_3_16_0_1_1442430869518_15111">&nbsp; &nbsp; &nb=
sp; &nbsp; Jim Bell</div><div class=3D"y_msg_container" id=3D"yui_3_16_0_1_=
1442430869518_15111"><br></div><div class=3D"y_msg_container" id=3D"yui_3_1=
6_0_1_1442430869518_15111"><br><div class=3D"yqt3190798218" id=3D"yqtfd2573=
8"><br clear=3D"none"><br clear=3D"none"></div><br><br></div> </div> </div>=
  </div></body></html>
------=_Part_769487_1519051059.1442466471585--

