From cypherpunks-bounces@cpunks.org  Sat Sep  7 07:01:29 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r87B12Ne012232;
	Sat, 7 Sep 2013 07:01:05 -0400
Received: from leitl.org (v8.ativel.com [164.177.174.8])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r87B0vlu012228
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@al-qaeda.net>; Sat, 7 Sep 2013 07:00:59 -0400
Received: by leitl.org (Postfix, from userid 1000)
 id 83F1C543DF9; Sat,  7 Sep 2013 13:00:56 +0200 (CEST)
Date: Sat, 7 Sep 2013 13:00:56 +0200
From: Eugen Leitl <eugen@leitl.org>
To: cypherpunks@al-qaeda.net, info@postbiota.org, zs-p2p@zerostate.is
Subject: Re: [Cryptography] Why prefer symmetric crypto over public key crypto?
Message-ID: <20130907110056.GC29404@leitl.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.21 (2010-09-15)
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 3349
Lines: 76

----- Forwarded message from "Marcus D. Leech" <mleech@ripnet.com> -----

Date: Fri, 06 Sep 2013 23:51:49 -0400
From: "Marcus D. Leech" <mleech@ripnet.com>
To: cryptography@metzdowd.com
Subject: Re: [Cryptography] Why prefer symmetric crypto over public key crypto?
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20130805 Thunderbird/17.0.8


> 
> The magic of public key crypto is that it gets rid of the key
> management problem -- if I'm going to communicate with you with
> symmetric crypto, how do I get the keys to you? The pain of it is
> that it replaces it with a new set of problems. Those problems
> include that the amazing power of public-key crypto tempts one to
> do things that may not be wise.
> 
I find public-key cryptography to be full of "dirty little secrets".
Some of the notions inherent in public-key *infrastructure* are, on
the face of them,
  preposterous.  Consider the notion of a certificate authority.  I am
to trust some third party (the CA) that I've never met, and have not
the slightest
  reason to trust, is able to make a "believable" assertion about the
identity (and corresponding public-key binding), of some *other* party
I've never
  met, and have no real reason to trust.  It always struck me as
another instance of "there's no problem in CS that can't be solved by
adding another
  layer of abstraction".   I think this is an instance of a general
problem with digitally-signed documents of all kinds: confusion about
exactly what they
  are--a signature on a document (like a certificate) says nothing
about the *essential truth* of the statements contained within the
document.
  When SlushySign issues a certificate for "www.crowbars-r-us.com",
there's a subtle distinction between "we believe this to be the
appropriate binding
  between this public-key, and an entitity known as
www.crowbars-r-us.com"  and "this really is the binding between this
pubic-key, and the entity you
  all know as www.crowbars-r-us.com".

I started thinking about the "essential truth" problem back when the
whole TPM thing was popular, and proponents were talking as if the
digital
  signature of a computer stating that it was "sane" was somehow the
same is said computer actually being "sane".   Absent independent
verification,
  there's no way to distinguish a strongly-signed "lie" from a
strongly-signed "truth".   That isn't necessarily a problem that's
confined to PK systems.
  Any digital-signature scheme has that problem.


The other thing that I find to be a "dirty little secret" in PK
systems is revocation.  OCSP makes things, in some ways, "better" than
CRLs, but I still
  find them to be a kind of "swept under the rug" problem when people
are waxing enthusiastic about PK systems.

However, PK is the only pony we've managed to bring to this circus,
so, we we "make do" with making the "dirty little secrets" as
inoffensive as we can.

_______________________________________________
The cryptography mailing list
cryptography@metzdowd.com
http://www.metzdowd.com/mailman/listinfo/cryptography

----- End forwarded message -----
-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a> http://leitl.org
______________________________________________________________
ICBM: 48.07100, 11.36820 http://ativel.com http://postbiota.org
AC894EC5: 38A5 5F46 A4FF 59B8 336B  47EE F46E 3489 AC89 4EC5

