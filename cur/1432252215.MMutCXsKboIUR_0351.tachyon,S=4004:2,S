From owner-cypherpunks@al-qaeda.net  Fri Nov  5 11:05:48 2004
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (majordomo@localhost.localdomain [127.0.0.1])
	by positron.jfet.org (8.13.1/8.13.1/Debian-16) with ESMTP id iA5H4ma3031757
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Fri, 5 Nov 2004 11:04:48 -0600
Received: (from majordomo@localhost)
	by positron.jfet.org (8.13.1/8.13.1/Submit) id iA5H4m1Z031756
	for cypherpunks-outgoing; Fri, 5 Nov 2004 11:04:48 -0600
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;         s=beta;
  d=gmail.com;        
  h=received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:references;
  b=U4w7WcbKAtbiEXRktdZVFGXKWk2TBNnCB3b15dhlQASGCsiIErQA81MqAFzaBqe9jrLaPlRwtTKTVE8M2LyElmsDF+j688u303+2BSPBbHmG7M+q/rJGhWfAPHyuqvDIOyZTuCYJbh+cCkVnKpRjhQNpmE7pSytQcNv0v3Fl63E=
Message-ID: <91981b3e041105083727015040@mail.gmail.com>
Date: Fri, 5 Nov 2004 09:37:00 -0700
From: Chris Kuethe <chris.kuethe@gmail.com>
To: Tyler Durden <camera_lumina@hotmail.com>
Subject: Re: Your source code, for sale
Cc: ben@algroup.co.uk, cypherpunks@al-qaeda.net
In-Reply-To: <BAY24-F32DAmwtyL8130002e334@hotmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <BAY24-F32DAmwtyL8130002e334@hotmail.com>
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
X-Keywords:                  
X-UID: 10916
Status: O
Content-Length: 2402
Lines: 51

On Fri, 05 Nov 2004 10:01:41 -0500, Tyler Durden
<camera_lumina@hotmail.com> wrote:
> ...
> My photo-bundle receives the releases and opens, and then shoots off a
> message that activates the pre-release on your end, giving you the cash.
> 
> Is a 3rd party necessary here? I don't see it, but then again I could be
> wrong.

What if I block the outbound "release the money" message after I
unbundle the images. Sure, I've already committed my money, but you
can't get to it. In effect I've just ripped you off, because I have
usable product and you don't have usable money. The proof of delivery
comes in handy here, so that as soon as I can prove to the bank that
my product has arrived within your administrative area, they'll pay
me. And the bank sends me a key to unlock the product as soon as it
sends you the money.

And what *GUARANTEE* do I have that the blob of bits you sent me with
the Geri Ryan photos on the outside isn't something from goatse.cx or
tubgirl...? Let's say there are 24000 items in the tarball of the IOS
code. Do you want to pay $24K for all of them (once) or $12K for half
of them (twice) or $1 per file or directory (24000 times)? Do you want
to pay per committed bit or character? How can you protect yourself
from me committing to sell you /dev/random?

I'm sure everyone has this bit committed to memory, but the beginning
of Applied Crypto, chapter 2 says:

=============================================
Protocols have other characteristics as well:
-- Everyone involved in the protocol must know the protocol and all of
the steps to follow in advance.
-- Everyone involved in the protocol must agree to follow it.
-- The protocol must be unambiguous; each step must be well defined
and there must be no chance of a misunderstanding.
-- The protocol must be complete; there must be a specified action for
every possible situation.

... The whole point of using cryptography in a protocol is to prevent
or detect eavesdropping and cheating.
=============================================

That last property is critical: what does the protocol do when someone
isn't playing by the rules? Of course, there's nothing that crypto can
do to prevent you from selling me garbage, only the fact that you
intentionally did so can be proven. Comment about bribing the dockside
worker at the shipping line deleted.

-- 
GDB has a 'break' feature; why doesn't it have 'fix' too?

