From owner-cypherpunks@jfet.org  Sun Jan  1 21:53:24 2006
Return-Path: <owner-cypherpunks@jfet.org>
Received: from proton.jfet.org (localhost [127.0.0.1])
	by proton.jfet.org (8.13.5/8.13.5/Debian-3) with ESMTP id k022rHTl029506
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Sun, 1 Jan 2006 21:53:17 -0500
Received: (from majordomo@localhost)
	by proton.jfet.org (8.13.5/8.13.5/Submit) id k022rHHl029504
	for cypherpunks-outgoing; Sun, 1 Jan 2006 21:53:17 -0500
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;         s=beta;
  d=gmail.com;        
  h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
  b=POfL38K3XDbkThHAl2rwetarjfrfBpcyAqDWnzgGtaZxzmYPtasuFDqhCqQFqwQk3C9DWEqqUqa1RC67VMyavxAEKMgvHf+vKHAB9yvCxw7O9WZJeHhYvcGQEO5pbKEjXHHwc5Qmj3hb7rXzbplCS5EceE/4qMtKqMthqppu+Es=
Message-ID: <4ef5fec60601011853ra5dfc9eve0c4ed60c104647f@mail.gmail.com>
Date: Sun, 1 Jan 2006 18:53:13 -0800
From: coderman <coderman@gmail.com>
To: "J.A. Terranson" <measl@mfn.org>
Subject: Re: [dave@farber.net: [IP] more on AP Story Justice Dept.
  Probing Domestic Spyin
Cc: Tyler Durden <camera_lumina@hotmail.com>, jya@cryptome.net,
        cypherpunks@jfet.org
In-Reply-To: <20060101120136.T4153@ubzr.zsa.bet>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
References: <BAY103-F1648027F09E126E0E502769B2A0@phx.gbl> 	
  <20060101120136.T4153@ubzr.zsa.bet>
Content-Transfer-Encoding: 7bit
X-MIME-Autoconverted: from quoted-printable to 8bit by proton.jfet.org
  id k022rG0h029469
Sender: owner-cypherpunks@jfet.org
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 2536
Lines: 57

On 1/1/06, J.A. Terranson <measl@mfn.org> wrote:
> (1) We are describing encryptedmessage sent over the public internet -
> granted, it's in "pieces", yet it's still sent into the public cloud;

yeah, follow tcp stream in ethereal is a good example of how trivial
it is to recreate a session of communication given an archive of its
component datagrams.


> (2) These various pieces are all "record" communications as far as
> NSA/Echelon is concerned, and therefore we should expect that they will
> draw significant attention - and end up in permanent archives;

right.  hence my fetish for one time pads for key exchange and
previous comment about quantum computers / fast GNFS / etc.  they are
up to 8 qubits, only a few thousand more to go.  ;)


> (3) Since all off the pieces have been stored - including both the
> encrypted messagetexts and the decryptors, what is to prevent a
> time-faking attack against this message?  After all, if you have all the
> parts, you can just "reinstantiate" the network as it was was the messages
> were originally sent.

this is particular to the method TD mentioned i think...

i am assuming the following:
- the operating system is installed on a loop-aes volume so that
integrity of the kernel, libraries and utilities is protected via
passphrase.
- the one time pads are stored encrypted in a similar manner so that
access to them requires external keys (like the gpg encrypted keys
used for loop-aes volumes)
- the passphrase used to authenticate a user for access to the pads is
coupled with external storage (usb) of the keys used to access the
pads.

to recover the plaintext communication from the encrypted datagrams
the attacker would need to obtain the encrypted pad, the keys on
external storage (usb), and the passphrase to access the keys.


> (4) For any form of time-destruction messaging to really work, the keying
> information would have to be tied to a physical <something> that cannot be
> reclaimed, and which decays at a fixed, known, and closely approximatable
> rate (a radiodecay probably doesn't meet this criteria);
>
> Every time-sensitive auto-destructing system Ive seen discussed here fails
> these weaknesses.

this doesn't provide time destruction so i assume this is in reference
to Tyler's description.  you could couple the user authentication with
a physically hardened token of some sort for access to the pads but
even this would require manual destruction.

do they make physically hardened authentication tokens with timed self
destruction built in?

