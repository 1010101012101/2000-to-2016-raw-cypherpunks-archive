Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t8H3ksrg007878;
	Wed, 16 Sep 2015 23:46:54 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=hUfLFy/p;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: from mail-ig0-f175.google.com (mail-ig0-f175.google.com
 [209.85.213.175])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t8H3kpm6007874
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Wed, 16 Sep 2015 23:46:53 -0400
Received: by igcpb10 with SMTP id pb10so3982156igc.1
 for <cypherpunks@cpunks.org>; Wed, 16 Sep 2015 20:46:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:from:date:message-id:subject:to
 :content-type:content-transfer-encoding;
 bh=Gxz2WBH7ATC6ToxuWl12OhzunRxwJ7yx+VPqSpXrqq8=;
 b=hUfLFy/pR13VPISNEeZMIDBg/AZGbma59LrguF+Ud8MKx0YHsrGDyooySPrkJSEqpO
 FRn10aW56jBGbFZe6XWu/HE/2KrEElKsKd6V0fYbd/6mPrTQGxhw3cjHxAF4oZKpM4ae
 S3v209twQdSuP0gL45sinJb6tmg21eJ1itku2h67tPyg6yIwhZhIgskZZ6TPaJG5OMXA
 jivlCYI6HJ2H2nqVuRC3xklGbgnXK36BgaPylxnm3/UIgNIR6x0ub8L5pUpARFcrXjYu
 XHap9nZXQNiI3X2jKDpKqVP73Sr0I/DzHANc/B8Ic1cRvhJozyVdNIa6d6nx4QQ8f3e/
 lvSg==
X-Received: by 10.50.62.112 with SMTP id x16mr20884505igr.23.1442461606230;
 Wed, 16 Sep 2015 20:46:46 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.36.77.77 with HTTP; Wed, 16 Sep 2015 20:46:26 -0700 (PDT)
In-Reply-To: <720222154.588327.1442433834350.JavaMail.yahoo@mail.yahoo.com>
References: <20150916090105.GA2571@sivokote.iziade.m$>
 <720222154.588327.1442433834350.JavaMail.yahoo@mail.yahoo.com>
From: grarpamp <grarpamp@gmail.com>
Date: Wed, 16 Sep 2015 23:46:26 -0400
Message-ID: <CAD2Ti2_kHhhMQ9yYcoHbOqDxCb9X3oq_JWgRzPh5mySZ8i9UdA@mail.gmail.com>
Subject: Re: How much/what hardware does the rowhammer DRAM bug affects?
To: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by antiproton.jfet.org id
 t8H3kpm6007874
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 53

On Wed, Sep 16, 2015 at 4:03 PM, jim bell <jdb10987@yahoo.com> wrote:
>>From: Georgi Guninski <guninski@guninski.com>
>>This is old, but haven't seen it here.
>>https://googleprojectzero.blogspot.com/2015/03/exploiting-dram-rowhammer-bug-to-gain.html
>
>>Rowhammer” is a problem with some recent DRAM devices in which
>>repeatedly accessing a row of memory can cause bit flips in adjacent
>>rows.
>>It was able to use this to gain write access to its own page table, and
>>hence gain read-write access to all of physical memory.
>>There is POC.
>>Variant via javascript:
>>https://github.com/IAIK/rowhammerjs
>>How much/what hardware does this bug affect?
>
> This brings me back to my stint at Intel, 1980-82, as a new Product Engineer
> for the 2186, an 8kx8 pseudostatic (self-refreshing dynamic) RAM. (One of
> the first DRAMs to use redundancy to increase yield.)  I may have been the
> first engineer in the world to see, through a microscope focused on a DRAM
> chip, a very quick series of flashes, evidence of the programming (blowing)
> silicon fuses on the chip, to program the row- and column-redundancy
> information.
>
>  Product engineers were, and presumably still are, responsible for writing
> test programs to run chips through their paces, in Intel's case using a
> Teradyne computer.
> http://www.teradyne.com/products/semiconductor-test/magnum-v
>
> I don't think the concept of this kind of weakness is new:  Even in 1980,
> DRAMs were tested for such repeated accesses, to ensure that such errors
> would not occur.  This was particularly true for a process called "device
> characterization", in which chips were attacked in all manner of
> electronically-abusive ways, to uncover these weaknesses, and fix the
> circuit design should such flaws be uncovered.
> One way these techniques could be thwarted is to return to the use of
> parity-bits (8+1 parity) in memory access, in DRAM module and computer
> design, to whatever extent they are no longer used.  Any (successful)
> attempt to modify bits in a DRAM would quickly end up causing a parity
> error, which would at least show which manufacturer's DRAM chips are
> susceptible to this kind of attack.  A person who was forced to use a
> no-parity computer could, at least,  limit his purchases of such modules to
> those populated with DRAMs not susceptible to the problem.
>            Jim Bell


Some paper has said systems using ECC RAM are resistant / immune
to rowhammer.

There is still a fair bump in cost for ECC system
however once you've seen your first syslog entry
you forget about the cost. Regardless of rowhammer.

