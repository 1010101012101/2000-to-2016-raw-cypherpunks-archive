From cypherpunks-bounces@cpunks.org  Thu Feb 27 08:11:14 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s1RD8W6E032743;
	Thu, 27 Feb 2014 08:08:50 -0500
Received: from remailer.privacy.at (remailer.privacy.at [212.124.141.99])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s1RD8RL4032739
 for <cypherpunks@cpunks.org>; Thu, 27 Feb 2014 08:08:29 -0500
Received: from localhost (unknown [127.0.0.1])
 by remailer.privacy.at (Postfix) with ESMTP id B04437F51C
 for <cypherpunks@cpunks.org>; Thu, 27 Feb 2014 14:08:24 +0100 (CET)
From: "Anonymous Remailer (austria)" <mixmaster@remailer.privacy.at>
Comments: This message did not originate from the Sender address above.
 It was remailed automatically by anonymizing remailer software.
 Please report problems or inappropriate use to the
 remailer administrator at <abuse@remailer.privacy.at>.
To: cypherpunks@cpunks.org
Subject: Red Pike cipher
Message-ID: <92e6e17e1f1db50b11c13c4a4ca9c25c@remailer.privacy.at>
Date: Thu, 27 Feb 2014 14:08:24 +0100 (CET)
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 763
Lines: 46


/* Red Pike cipher source code */

#include <stdint.h>

typedef uint32_t word;

#define CONST 0x9E3779B9
#define ROUNDS 16

#define ROTL(X, R) (((X) << ((R) & 31)) | ((X) >> (32 - ((R) & 31))))
#define ROTR(X, R) (((X) >> ((R) & 31)) | ((X) << (32 - ((R) & 31))))

void encrypt(word * x, const word * k)
{
  unsigned int i;
  word rk0 = k[0];
  word rk1 = k[1];

  for (i = 0; i < ROUNDS; i++)
  {
    rk0 += CONST;
    rk1 -= CONST;

    x[0] ^= rk0;
    x[0] += x[1];
    x[0] = ROTL(x[0], x[1]);

    x[1] = ROTR(x[1], x[0]);
    x[1] -= x[0];
    x[1] ^= rk1;
  }

  rk0 = x[0]; x[0] = x[1]; x[1] = rk0;
}

void decrypt(word * x, const word * k)
{
  word dk[2] =
  {
    k[1] - CONST * (ROUNDS + 1),
    k[0] + CONST * (ROUNDS + 1)
  };

  encrypt(x, dk);
}

