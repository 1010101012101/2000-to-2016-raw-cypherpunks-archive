From cypherpunks-bounces@cpunks.org  Thu Apr 10 20:07:14 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s3B06JFw006941;
	Thu, 10 Apr 2014 20:06:37 -0400
Received: from slinafirinne.net ([217.115.118.49])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s3B06E2k006932
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 10 Apr 2014 20:06:16 -0400
DomainKey-Signature: a=rsa-sha1;  q=dns; c=nofws; s=default; d=petermalone.org;
 b=gepJJqSRFTPOMebkDfMvcv3VPCBSbbpIvq7vj3DZCeztumo9qMm6CIB6oOf5mm31PPnQx796o2+vGIRojgEalcOmM8r1/1DYoMozYtTUIPg3Kn4LHZqz0QM6jVwRCzcC;
 h=Received:Received:Message-ID:Subject:From:To:Cc:Date:In-Reply-To:References:Content-Type:X-Mailer:Mime-Version:Content-Transfer-Encoding;
Received: (qmail 26024 invoked from network); 11 Apr 2014 01:05:38 +0100
Received: from c-75-67-42-251.hsd1.nh.comcast.net (HELO ?10.0.0.4?)
 (75.67.42.251)
 by petermalone.org with ESMTPSA (AES256-SHA encrypted, authenticated);
 11 Apr 2014 01:05:38 +0100
Message-ID: <1397174772.1729.44.camel@shire>
Subject: Re: Re:Two possible vulnerabilities in OpenSSL?
From: Peter Malone <peter@petermalone.org>
To: tpb-crypto@laposte.net
Date: Thu, 10 Apr 2014 20:06:12 -0400
In-Reply-To: <1198250046.208428.1397135786224.JavaMail.www@wwinf8311>
References: <1397126438.1729.11.camel@shire>
 <1198250046.208428.1397135786224.JavaMail.www@wwinf8311>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.4.4-3 
Mime-Version: 1.0
Content-Transfer-Encoding: 8bit
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 2012
Lines: 57

It's no longer implemented in OpenSSL, however some of the versions
which were not vulnerable to Heartbleed are impacted.

Also the latest version of Ruby and Android implement it.

https://android.googlesource.com/platform/external/openssl/+/android-4.4.2_r2/ssl/ssl_lib.c



On Thu, 2014-04-10 at 15:16 +0200, tpb-crypto@laposte.net wrote:
> 
> > Message du 10/04/14 13:11
> > De : "Peter Malone" 
> 
> > A : "cypherpunks@cpunks.org" 
> > Copie Ã  : 
> > Objet : Two possible vulnerabilities in OpenSSL?
> >
> 
> > Hey there,
> > 
> > I was auditing OpenSSL last night. I looked at several files and found
> > the following:
> > 
> > https://github.com/openssl/openssl/blob/master/ssl/t1_lib.c#L2893
> > /* Determine if we need to see RI. Strictly speaking if we want to 
> > * avoid an attack we should *always* see RI even on initial server 
> > * hello because the client doesn't see any renegotiation during an 
> > * attack. However this would mean we could not connect to any server 
> > * which doesn't support RI so for the immediate future tolerate RI 
> > * absence on initial connect only. 
> > */ 
> > 
> > Well that's awful coding.
> > 
> > Unless I'm mistaken, the following memcmp is vulnerable to a remote
> > timing attack.
> > https://github.com/openssl/openssl/blob/master/ssl/ssl_lib.c#L1974
> > static int ssl_session_cmp(const SSL_SESSION *a,const SSL_SESSION *b) 
> > { 
> > if (a->ssl_version != b->ssl_version) 
> > return(1); 
> > if (a->session_id_length != b->session_id_length) 
> > return(1); 
> > return(memcmp(a->session_id,b->session_id,a->session_id_length)); 
> > } 
> > 
> > I posted both of these findings to the full disclosure list last night.
> > I figured someone on this list might find it interesting as well.
> > 
> > Cheers,
> > Peter.
> > 
> > 
> 
> Your best bet would be to make an automated exploit for proof-of-concept. If it allows skiddies to prank systems, people will rush to correct it and your name will be in the headlines for your 15 minutes of fame.


