From owner-cypherpunks@Algebra.COM  Sat Jan 13 18:12:09 2001
Received: from MIT.EDU (SOUTH-STATION-ANNEX.MIT.EDU [18.72.1.2])
	by positron.mit.edu (8.9.3/8.9.3) with SMTP id SAA02061
	for <kwantam@positron.mit.edu>; Sat, 13 Jan 2001 18:12:09 -0500
Received: from ak47.algebra.com by MIT.EDU with SMTP
	id AA00175; Sat, 13 Jan 01 18:10:53 EST
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f0DN8jc03075
	for cypherpunks-outgoing; Sat, 13 Jan 2001 17:08:45 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from waste.minder.net (fw.minder.net [216.25.149.98])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f0DN8im03039
	for <cypherpunks@algebra.com>; Sat, 13 Jan 2001 17:08:44 -0600
Received: (from cpunks@localhost)
	by waste.minder.net (8.9.3/8.9.3) id PAA24667
	for cypherpunks@algebra.com; Sat, 13 Jan 2001 15:08:11 -0500
Received: from einstein.ssz.com (cpunks@einstein.ssz.com [204.96.2.99])
	by waste.minder.net (8.9.3/8.9.3) with ESMTP id PAA24654
	for <cpunks@minder.net>; Sat, 13 Jan 2001 15:08:09 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id OAA00707
	for cpunks@minder.net; Sat, 13 Jan 2001 14:14:39 -0600
Received: from domains.invweb.net (root@domains.invweb.net [198.182.196.32])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id OAA00703
	for <cpunks@einstein.ssz.com>; Sat, 13 Jan 2001 14:14:37 -0600
Received: (from openpgp@localhost)
	by domains.invweb.net (8.9.3/8.9.3) id PAA06032;
	Sat, 13 Jan 2001 15:01:27 -0500
Date: Sat, 13 Jan 2001 15:01:27 -0500
Message-Id: <3.0.6.32.20010113114410.007e8b80@pop.sprynet.com>
Reply-To: cypherpunks@openpgp.net
Originator: cypherpunks@openpgp.net
From: David Honig <honig@sprynet.com>
To: Multiple recipients of list <cypherpunks@openpgp.net>
Old-Subject: Re: Consensus Actions in Cipherspace?
X-Listprocessor-Version: 6.0 -- ListProcessor by Anastasios Kotsikonas
X-Comment: All list traffic is being monitored by the FEDS!!
Content-Type: text/plain; charset="us-ascii"
References: <3.0.6.32.20010112170626.007db100@pop.sprynet.com>
In-Reply-To: <Pine.OSF.4.05.10101130010410.28940-100000@hcs.harvard.edu>
X-Loop: openpgp.net
Old-Subject:  Re: Consensus Actions in Cipherspace?
Subject:   Re: Consensus Actions in Cipherspace?
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1865
Lines: 61


At 12:23 AM 1/13/01 -0500, dmolnar wrote:
>
>On Fri, 12 Jan 2001, David Honig wrote:
>
>> (Thinking out loud) Maybe the actions require access to a distributed
>> N-of-M database?   How do you prevent someone from reusing the
>> reconstructed database?  Or uncooperatives refusing to update their slice
>> of the DB?  
>
>One way to address this problem is to use secret sharing. Everyone gets
>a share. Only a certain threshold need to cooperate to reconstruct.
>Everyone's secret counts the same, so in order to deny service you need to
>have fewer than threshold non-cooperatives. 
>
>You never reconstruct the database in one place. Instead, you figure out a
>clever way to do a distributed query on the database shares, such that at
>the end of the protocol, out pops the result. There are plausibility
>results due to Ben-Or, Goldwasser, Goldreich, Wigderson, and others about
>this under the name "secure multiparty computation." Briefly, if you can
>express a boolean F function with n inputs, then n parties can get
>together and evaluate F(x1,x2,...,xn) such that
>	
>	* everyone learns the output
>	* no one learns anything about an xi not their own
>

Suppose the action to be voted on is an update of the distributed
DB [1].  How do you enforce an *update* on the shares?  Wouldn't
that require the cooperation of all shareholders?  I would think that
enough noncooperative shareholders could fork off their own
group, diverging from the point where they didn't update their shares.

[1] For instance, the DB could be the list of members, the
action could be to add or drop a member.

Also, some group actions might compromise the DB itself, and so it seems to
me that you'd often need a trusted server which accepts
votes on its actions.  Though I realize this implies a central
point of attack/control (the Napster problem).









 






  





