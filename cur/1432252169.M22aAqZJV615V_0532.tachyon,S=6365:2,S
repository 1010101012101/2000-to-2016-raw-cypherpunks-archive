From owner-cypherpunks@Algebra.COM  Wed Jan 31 01:44:28 2001
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id BAA03376
	for <kwantam@positron.mit.edu>; Wed, 31 Jan 2001 01:44:28 -0500
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id BAA17582
	for <rsw@mit.edu>; Wed, 31 Jan 2001 01:44:22 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f0V5EqP08893
	for cypherpunks-outgoing; Tue, 30 Jan 2001 23:14:52 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@einstein.ssz.com [204.96.2.99])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f0V5EnV08878
	for <cypherpunks@algebra.com>; Tue, 30 Jan 2001 23:14:49 -0600
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id XAA22455
	for cypherpunks@algebra.com; Tue, 30 Jan 2001 23:25:54 -0600
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id XAA22449
	for cypherpunks-outgoing; Tue, 30 Jan 2001 23:25:52 -0600
Received: from mail5.registeredsite.com (mail5.registeredsite.com [64.224.9.14])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id XAA22445
	for <cypherpunks@einstein.ssz.com>; Tue, 30 Jan 2001 23:25:49 -0600
Received: from mail.toucancapital.com (mail.toucancapital.com [64.224.107.190])
	by mail5.registeredsite.com (8.11.1/8.11.1) with ESMTP id f0V5Eeo08346;
	Wed, 31 Jan 2001 00:14:40 -0500
Received: from chimera [151.200.27.131] by mail.toucancapital.com
  (SMTPD32-6.00) id AEA5FBD40108; Wed, 31 Jan 2001 00:12:05 -0500
From: "Phillip H. Zakas" <pzakas@toucancapital.com>
To: <cypherpunks@einstein.ssz.com>, "Declan McCullagh" <declan@well.com>
Cc: "Me" <commerce@home.com>, <cypherpunks@einstein.ssz.com>
Old-Subject: CDR: RE: Absolutely not a joke.
Date: Wed, 31 Jan 2001 00:11:10 -0500
Message-ID: <GBELJJCAPDDMIIAANOCJIEONCEAA.pzakas@toucancapital.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
In-Reply-To: <Pine.LNX.4.21.0101301746170.28753-100000@bolt.sonic.net>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-Unsubscription-Info: http://einstein.ssz.com/cdr
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Acceptable-Languages: English, Russian, German, French, Spanish
Subject:  RE: Absolutely not a joke.
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 3471
Lines: 81



I'm not sure re: the 'trusted download applications' scenario.  I have not
stepped-through the microsoft capi code material, but I believe a more
reasonable assumption is that law enforcement is more interested in
"dummying-down" the strength of ssl (and e-mail, and .pst file key) sessions
rather than trying to mask a trojan.

Here's why I think this: your isp is capable of delivering a trojan, already
provides updates to dialer apps, etc. and isp downloads are generally
unchecked by end users.  And, your isp is very likely to respond to a
warrant to download a trojan to a user machine (this happens every day.)  In
contrast, Microsoft is unable to comply with a warrant to enable such a
download on demand...the alternative is to purposefully lie to the entire
world about pre-weakend 128-bit key strength, easily attracting lawsuits...I
seriously doubt any rational us company would accept this level of exposure
just to comply with a warrant (don't forget the #1 opponents of us crypto
export laws are us companies, not individuals...shows us companies are more
money driven than 'gee lets help law enforcement at the expense of our
business' driven).  Plus, microsoft doesn't have a huge session-tracking
system which enables them to detect when a particular user logs into the
net, etc....an isp does have this kind of info though and could target
specific users in response to a warrant.  I think the scenario I've outlined
above is probably a legal and reasonable explanation (though I'm not a
lawyer).

As for multiple keys in the microsoft crypto stuff, don't forget about
server-gated crypto.  that particular technology, created by microsoft,
relies on a different set of key generation/management rules than normal
ssl.  this is probably where the 'extra keys' come from.

Phillip



-----Original Message-----
From: owner-cypherpunks@Algebra.COM
[mailto:owner-cypherpunks@Algebra.COM]On Behalf Of Ray Dillinger
Sent: Tuesday, January 30, 2001 8:56 PM
To: Declan McCullagh
Cc: Me; cypherpunks@einstein.ssz.com
Subject: Re: Absolutely not a joke.





On Tue, 30 Jan 2001, Declan McCullagh wrote:

>On Tue, Jan 30, 2001 at 11:45:43AM -0800, Ray Dillinger wrote:
>> Windows is also built to be insecure; there are backdoor keys for
>> law-enforcement types to stick "trusted" trojans on the system,
>
>Everything else is true, but I'm not sure about the above.
>You're talking about the NSA key, I assume.

Yes:  Windows has one documented public key that it uses to
check software that gets, eg, mailed to it via outlook, or
downloads in a webpage via Explorer, or etc, to decide whether
it is "trusted" software or not.  If it is trusted software
(presumably from Microsoft) then it can be run without
popping up a dialog box and getting the user's attention/
permission. Otherwise, "normal" security methods apply.

People with debuggers long since discovered that there is more
than one key ( though there are conflicting reports about
whether there are two or three), but had no idea why there
would be more than one unless  Microsoft wanted to enable
some third party to create "trusted" applications without
Microsoft's knowledge or review.

Recently when a windows system was made available in a debug
build (ie, with the symbolic names etc still in the code), it
was discovered that one of the "extra" keys was named NSA_key,
which gives at least a strong hint as to who else is allowed
to create "trusted" downloadable software.

				Bear




