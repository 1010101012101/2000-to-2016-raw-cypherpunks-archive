From owner-cypherpunks-outgoing@EINSTEIN.ssz.com  Mon Nov 20 16:13:28 2000
Received: from MIT.EDU (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.69.0.28])
	by positron.mit.edu (8.9.3/8.9.3) with SMTP id QAA00598
	for <kwantam@positron.mit.edu>; Mon, 20 Nov 2000 16:13:28 -0500
Received: from einstein.ssz.com by MIT.EDU with SMTP
	id AA12848; Mon, 20 Nov 00 16:14:44 EST
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id PAA10617
	for cypherpunks-outgoing; Mon, 20 Nov 2000 15:14:31 -0600
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id PAA10594
	for cypherpunks@ssz.com; Mon, 20 Nov 2000 15:14:24 -0600
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id PAA10584
	for <cpunks@ssz.com>; Mon, 20 Nov 2000 15:14:18 -0600
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id NAA24240; Mon, 20 Nov 2000 13:06:16 -0800 (PST)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id NAA24234 for <cpunks@sirius.infonex.com>; Mon, 20 Nov 2000 13:06:09 -0800 (PST)
Received: from corp-temp-121.axcelerant.com (smtp.axcelerant.com [204.182.175.97]) by cyberpass.net (8.8.8/8.7.3) with SMTP id NAA18067 for <cypherpunks@cyberpass.net>; Mon, 20 Nov 2000 13:08:27 -0800 (PST)
From: cgripp@axcelerant.com
Received: from imap.axcelerant.com by corp-temp-121.axcelerant.com
          via smtpd (for cyberpass.net [216.34.245.3]) with SMTP; 20 Nov 2000 21:06:03 UT
Received: from monolith.helfrich.com (monolith.axcelerant.com [204.182.175.121])
	by smtp.axcelerant.com (8.11.0/8.11.0) with SMTP id eAKL6pe28781;
	Mon, 20 Nov 2000 13:06:51 -0800
To: <cryptography@c2.net>, <cypherpunks@cyberpass.net>
Received: from pawn.tac.axcelerant.com by monolith.helfrich.com
          via smtpd (for smtp.axcelerant.com [204.182.175.97]) with SMTP; 20 Nov 2000 21:04:53 UT
Subject: CDR: RE: Public Key Infrastructure: An Artifact...
Date: Mon, 20 Nov 2000 13:06:09 -0800
Message-Id: <ICELIGPEPHDDBHBJEOOBIEGICAAA.cgripp@axcelerant.com>
Mime-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-Msmail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
In-Reply-To: <Pine.LNX.4.21.0011201124040.17900-100000@bolt.sonic.net>
Importance: Normal
X-Mimeole: Produced By Microsoft MimeOLE V5.50.4133.2400
Sender: owner-cypherpunks@EINSTEIN.ssz.com
Precedence: bulk
Reply-To: cypherpunks@EINSTEIN.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Language: English, Russian, German
Status: O
Content-Length: 2167
Lines: 56

So what is the acceptable threshold of errors?  1 in a 1000000?  What if
that 1 is the invalid certificate that allows your bank account to be
compromised.  CA's should either be 100% or 0% trustworthy.  I do agree that
there needs to be a protocol to allow CA's to compare databases of
certificates for mismatches etc that might reveal an attempt at publishing a
fraudulent certificate.

Gripp

-----Original Message-----
From: owner-cryptography@c2.net [mailto:owner-cryptography@c2.net]On
Behalf Of Ray Dillinger
Sent: Monday, November 20, 2000 11:41 AM
Cc: cryptography@c2.net; cypherpunks@cyberpass.net
Subject: Re: Public Key Infrastructure: An Artifact...




On Mon, 20 Nov 2000 Lynn.Wheeler@firstdata.com wrote:

>as pure asside ... any SSL server certificate signed by any CA
> in my browswer's CA list is acceptable.
>
>my broswer makes no distinction on which CA signed what ...
> and/or even what they signed. If I get a certificate signed
> by any CA in my browswers list that says foo.bar ...


I think that one of the major problems with PKI is the "binary-ness"
of it.  Everything gets shoveled into "acceptable" or "not acceptable"
at the end of the process, but I don't think it's appropriate in
trust decisions to have stuff shoveled into "acceptable" and "not
acceptable" piles at the very beginning.

We can't give a numeric score to the degree of trust we place in a
CA.  There's no protocol for exchanging information about breaches
in trust regarding particular certs, so we can't have a policy for
auto-updating our trust model.  If I get a spoofed cert from a CA,
and notice it, I ought to be able to downgrade the trust in that CA
- without necessarily removing ALL trust in that CA.  Furthermore,
my system ought to pass along the news about the spoofed cert, along
with the signature that proves it came from that CA, so that other
systems can do the same.

"Gossip" is really the only way a robust trust model can work.
systems have to at least be ABLE to notify and inform one another
when there's a breach of trust involving a CA, and different
people have to be able to set the threshold for trust at different
points.


				Bear




