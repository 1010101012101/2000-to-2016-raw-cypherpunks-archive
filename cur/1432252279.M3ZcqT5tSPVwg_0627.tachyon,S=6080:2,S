From owner-cypherpunks@Algebra.COM  Sat Jan 13 18:25:32 2001
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id SAA02171
	for <kwantam@positron.mit.edu>; Sat, 13 Jan 2001 18:25:27 -0500
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id SAA17340
	for <rsw@mit.edu>; Sat, 13 Jan 2001 18:25:22 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f0DNMUH17530
	for cypherpunks-outgoing; Sat, 13 Jan 2001 17:22:30 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from waste.minder.net (root@fw.minder.net [216.25.149.98])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f0DNMSm17500
	for <cypherpunks@algebra.com>; Sat, 13 Jan 2001 17:22:28 -0600
Received: (from cpunks@localhost)
	by waste.minder.net (8.9.3/8.9.3) id AAA14619
	for cypherpunks@algebra.com; Sat, 13 Jan 2001 00:33:39 -0500
Received: from einstein.ssz.com (cpunks@einstein.ssz.com [204.96.2.99])
	by waste.minder.net (8.9.3/8.9.3) with ESMTP id AAA14607
	for <cpunks@minder.net>; Sat, 13 Jan 2001 00:33:37 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id XAA29555
	for cpunks@minder.net; Fri, 12 Jan 2001 23:40:06 -0600
Received: from domains.invweb.net (root@domains.invweb.net [198.182.196.32])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id XAA29551
	for <cpunks@einstein.ssz.com>; Fri, 12 Jan 2001 23:40:04 -0600
Received: (from openpgp@localhost)
	by domains.invweb.net (8.9.3/8.9.3) id AAA18292;
	Sat, 13 Jan 2001 00:30:23 -0500
Date: Sat, 13 Jan 2001 00:30:23 -0500
Message-Id: <Pine.LNX.4.21.0101122103330.18893-100000@bolt.sonic.net>
Reply-To: cypherpunks@openpgp.net
Originator: cypherpunks@openpgp.net
From: Ray Dillinger <bear@sonic.net>
To: Multiple recipients of list <cypherpunks@openpgp.net>
Old-Subject: Re: Consensus Actions in Cipherspace?
X-Listprocessor-Version: 6.0 -- ListProcessor by Anastasios Kotsikonas
X-Comment: All list traffic is being monitored by the FEDS!!
Content-Type: TEXT/PLAIN; charset=US-ASCII
MIME-Version: 1.0
In-Reply-To: <3.0.6.32.20010112170626.007db100@pop.sprynet.com>
X-Loop: openpgp.net
Old-Subject:  Re: Consensus Actions in Cipherspace?
Subject:   Re: Consensus Actions in Cipherspace?
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 3470
Lines: 107




On Fri, 12 Jan 2001, David Honig wrote:

>the server could simply use a voting protocol to get (or timeout) 
>permission to do proposed actions.  We are assuming that the server
>is trusted, right?  

Actually, no.  That creates a single priveleged machine, which is 
also a point of failure, which is also a point of attack, which is 
also subject to subpeonas or outright theft.  Ideally, this is 
something that runs on the distributed machines of the participants.
I think that's the only way to be safe from the "lawsuit attack".


>Perhaps I'm not clear on what constitutes an action that could
>be distributed without relying on a trusted actor (server).  


For example, consider a robo-moderated mailing list formed by 
cat owners.  They have a "posting protocol" that requires you 
to submit a digital coin worth a dollar or two along with your 
letter.  If enough people click on the "this is spam" button, 
the group agents donate the coin to an animal shelter and you 
can't spend it. Otherwise, you get your coin back when your 
message expires.  

The posting protocols etc. are wrapped in scripts, of course; 
on your end you get a message box that says "Are you willing 
to post a two-dollar bond that says most of the people on the 
list don't think this is spam?"  and yes/no buttons.  The 
subscribers just have another little button on their mail 
reader - So it goes Next message, delete, reply, reply all, 
spam.

I'd really like it if somebody has figured out a way for a 
group to form consensus and act on that consensus as though 
it were a single individual -- capable of participating in 
general protocols.  

But individual solutions to problems like the above would 
be a great start. 

				Bear




>At 06:01 PM 1/12/01 -0500, Ray Dillinger wrote:
>>
>>Crucial facts about a protocol that does the right thing would be: 
>>
>>1) DOES NOT create any single priveleged user or machine. 
>>
>>2) Resistant to denial-of-service attacks and attempts to 
>>   "stack the vote." (Requires user authentication)
>>
>>3) No altered versions of the agent ought to be able to gather
>>   enough information to force an action as long as at least 
>>   the majority of agents are unaltered.
>>
>>4) Once a consensus is reached, a majority of the agents acting
>>   together should be able to take whatever action is found
>>   even if the dissenters' agents don't cooperate with them.
>>   (a consensus reassembles a key?  But then that key can't 
>>   be used again, what's the next key?)
>>
>
>Interesting idea.  Starting with 1 user who can admit (by virtue 
>of having 100% of the vote) and then letting the users vote
>to add others.  
>
>I don't think reassembling the key is the final stage.  I think
>the server could simply use a voting protocol to get (or timeout) 
>permission to do proposed actions.  We are assuming that the server
>is trusted, right?  

>The server could send signed PGP-encrypted email to all members saying: 
>"The following script has been proposed to be run by GroupServer for your
>Group.. to vote yes or no, sign a yes or no message and encrypt and send it
>to GroupServer.  This vote closes in 3 days, and votes are acknowleged
>immediately."
>
>
>(Thinking out loud) Maybe the actions require access to a distributed
>N-of-M database?   How do you prevent someone from reusing the
>reconstructed database?  Or uncooperatives refusing to update their slice
>of the DB?  
>
>
>
>
> 
>
>
>
>
>
>
>  
>
>
>
>
>


