Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id u3RKc1RJ001402;
	Wed, 27 Apr 2016 16:38:03 -0400
Received: from cajat.pair.com (cajat.pair.com [209.68.5.126])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id u3RKbwl5001392
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Wed, 27 Apr 2016 16:38:00 -0400
Received: from [192.168.1.7] (unknown [71.180.1.121])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by cajat.pair.com (Postfix) with ESMTPSA id 34107D53BF
 for <cypherpunks@cpunks.org>; Wed, 27 Apr 2016 16:37:53 -0400 (EDT)
Subject: Re: Needs more hardware hacking dox
References: <572101A7.3010402@pilobilus.net>
 <CAKtE3zfvO-jda2xbGoTpaUQWjvOcxGwZdVY=K=7LpX2VUm47uA@mail.gmail.com>
To: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
From: Steve Kinney <admin@pilobilus.net>
Message-ID: <5721231D.8060901@pilobilus.net>
Date: Wed, 27 Apr 2016 16:37:49 -0400
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.6.0
MIME-Version: 1.0
In-Reply-To: <CAKtE3zfvO-jda2xbGoTpaUQWjvOcxGwZdVY=K=7LpX2VUm47uA@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 72

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1



On 04/27/2016 03:03 PM, Travis Biehn wrote:
> I'm working on influencing security in embedded, e.g., writing and 
> designing secure systems (comprehensively, starting with arch &
> code.) It's an educational effort with embedded ISVs and OEMs at
> every step, you can presume the market, if they're thinking of
> security at all, is currently buying into 'fire-walling' and
> 'obfuscation' approaches.
> 
> There are some interesting groups like We Are the Cavalry working
> on that as well.
> 
> Some fun uses of Raspberry Pi computers as air-gapped PGP /
> KeyStores and Hardware Tor routers. DIY info-theoretic secure
> communications platforms (opto-isolators and so on.)
> 
> On the topic of HWSec, I'm interested in detecting in-sil
> modification, allowing end-users to simply and easily verify their
> hardware in the same way that the OS community has become entranced
> with 'deterministic verifiable builds'.
> 
> -Travis

I was thinking about step by step walk-throughs on things like:

* Generic and model-specific methods of reversibly (and not) disabling
automotive ECM radio.

* Positively preventing laptop WiFi signals from being broadcast
before the MAC address has been scrambled.

* Disabling built in microphones in computers and other network
capable devices

etc.

Most of the necessary info is on the networks, IF one knows the
applicable language and which sources to focus searches on.  Right now
I don't have the time for a new project but it's on my long term to-do
list until or unless somebody else does it.  Field testing - actually
doing the things described - makes a huge usability difference,
especially when writing for end users who do not have a background in
tinkering with electronics.  Things technologists take for granted and
would not mention can pop up as unbeatable obstacles when first timers
are trying to follow "simple" instructions.

A great example:  http://www.turnpoint.net/wireless/cantennahowto.html

:o)






-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAEBAgAGBQJXISMcAAoJEECU6c5Xzmuqj0sIAK5BrO1RfW3hJYyYu2V7eqfM
FcuMwRYjWenprNZwyB7CneNX9jSDT7xU0ApmkPzfzBckJfCKqliqQ/4qj6dgoyRr
2Kc6/AjH7R9oHrsdnaot3wrGvdBfv14TgSPqHBnZnY60qqvl938T0j/lySD1lS05
EeGixB2MgKQxQbHU4sjDyJyYfyibR37QG8rTYvmnveMRlbZdN9SY02i7+AfzizIp
3Wo7JYk8nQgAt8fwE3MZnVLsWvz23wq77SaqoTXbKEA/We4oqAN1RiqH2bYCZVHd
UqJjbeuGPEBLUsGJkuPTMylY/KSquhL+LpOecLH/5l2+KNVJgLOHGS4KjwPaCZk=
=zI8b
-----END PGP SIGNATURE-----

