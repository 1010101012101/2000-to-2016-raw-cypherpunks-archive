From owner-cypherpunks@lne.com  Fri Dec 12 15:43:03 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p3/8.11.6-03-31-03) with ESMTP id hBCKh1Y10813
	for <rsw@jfet.org>; Fri, 12 Dec 2003 15:43:02 -0500
Received: from slack.lne.com (slack.lne.com [127.0.0.1])
	by slack.lne.com (8.12.10/8.12.10) with ESMTP id hBCKT8Qw016420
	(version=TLSv1/SSLv3 cipher=EDH-DSS-DES-CBC3-SHA bits=168 verify=NO)
	for <cypherpunks-goingout345@slack.lne.com>; Fri, 12 Dec 2003 12:29:09 -0800
Received: (from majordom@localhost)
	by slack.lne.com (8.12.10/8.12.10/Submit) id hBCKT88M016419
	for cypherpunks-goingout345; Fri, 12 Dec 2003 12:29:08 -0800
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Date: Fri, 12 Dec 2003 21:28:13 +0100 (CET)
From: Thomas Shaddack <shaddack@ns.arachne.cz>
To: cypherpunks@algebra.com
Old-Subject: Re: Idea: Using GPG signatures for SSL certificates
In-Reply-To: <504028ab917f6b095fe447132fd5a5f2@paranoici.org>
Message-ID: <0312122112520.-1244848736@somehost.domainz.com>
References: <504028ab917f6b095fe447132fd5a5f2@paranoici.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Spam-Status: No, hits=-20.2 required=10.0
  tests=IN_REP_TO,QUOTED_EMAIL_TEXT,QUOTE_TWICE_1,REFERENCES,
  REPLY_WITH_QUOTES autolearn=ham version=2.53
X-Spam-Checker-Version: SpamAssassin 2.53 (1.174.2.15-2003-03-30-exp)
Subject: Re: Idea: Using GPG signatures for SSL certificates
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 2726
Lines: 58

> Thomas Shadduck writes:
         ^^^^^^^^ - cute :) Though I am more often called Shaddup.

> > The problem that makes me feel uneasy about SSL is the vulnerability of
> > the certification authorities when they get compromised, everything
> > they signed gets compromised too.
>
> Technically this is true, but the only thing that the CA signs is
> other keys.  So it merely means that the CA can create certificates on
> behalf of anyone the compromisers choose.  It doesnt "compromise" any
> existing key or previously issued certificate or even any newly created
> key.

By "compromised" I meant "the signature confirming the authenticity of the
certificate can't be trusted anymore". Sorry if it wasn't obvious.

> In any case, you dont need a CA to use SSL.  (Or more accurately, you
> dont need anyone elses CA to use SSL just create your own CA and
> issue yourself a certificate. This can be done without a lot of effort
> using openssl, for example.)

I am aware of this.

Using the GPG/SSL approach, you can have your own in-house CA for SSL
purposes, and at the same time be able to prove to external users that the
certificate is really yours. One more factor for establishing trust, one
more obstacle for the Adversary to pass.

> > However, the system could be for some applications potentially get
> > hardened to certain degree, using the web-of-trust approach.
>
> What exactly does this buy you?  The SSL certification authority system
> has as its only (but useful) redeeming value that one can connect to
> www.somecompany.com and have some level of confidence that the SSL
> certificate presented by that site was actually issued to
> www.somecompany.com and was issued by a "reputable" certification
> authority -- one that presumably will not hand out a certificate stamped
> www.somecompany.com to creditcardscammer@blackhat.net.

It won't buy me anything "new". It only strengthens the confidence level
by providing a CA-independent, alternative method of verifying the
certificate.

> If the certificate presented is not from one of the recognized
> "reputable" CAs built into your web browser, SSL itself will still work
> but your web browser will pop up a box saying that the CA is not in its
> list of "reputable" CAs (and BTW "would you like to connect anyway?
> yesno").

What I'd like is one more button, "Attempt to verify by GPG". Though that
can be easily done by an external application; browser integration is
nothing more than mere comfort.

> I dont understand the mindless worship of the "web of trust".  PGP
> (/GPG) is a useful tool, but the "web of trust" is simply a way of
> "certifying" a key in a non-centralized, non-hierarchical way.

YES! Which is what I want to achieve.

