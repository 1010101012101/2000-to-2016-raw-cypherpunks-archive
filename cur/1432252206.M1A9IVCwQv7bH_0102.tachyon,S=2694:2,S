From rsw@jfet.org Wed Mar  9 13:12:10 2005
Date: Wed, 9 Mar 2005 13:12:10 -0600
From: "Riad S. Wahby" <rsw@jfet.org>
To: cypherpunks@al-qaeda.net
Subject: Re: SHA1 broken?
Message-ID: <20050309191210.GB410@positron.jfet.org>
Mail-Followup-To: cypherpunks@al-qaeda.net
References: <20050308192648.GA4762@positron.jfet.org> <BAY24-F405BC7F24C44B981246DF79B510@phx.gbl>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <BAY24-F405BC7F24C44B981246DF79B510@phx.gbl>
X-key-url: http://web.jfet.org/pgp.asc
X-url: http://web.jfet.org
X-keyserver: cryptonomicon.mit.edu
X-key-fingerprint: B1CD 1262 0B82 47B1 BB4E  15D3 920D 1BEF 3D38 5585
X-Habeas-SWE-1: winter into spring
X-Habeas-SWE-2: brightly anticipated
X-Habeas-SWE-3: like Habeas SWE (tm)
X-Habeas-SWE-4: Copyright 2002 Habeas (tm)
X-Habeas-SWE-5: Sender Warranted Email (SWE) (tm). The sender of this
X-Habeas-SWE-6: email in exchange for a license for this Habeas
X-Habeas-SWE-7: warrant mark warrants that this is a Habeas Compliant
X-Habeas-SWE-8: Message (HCM) and not spam. Please report use of this
X-Habeas-SWE-9: mark in spam to <http://www.habeas.com/report/>.
X-red-meat: shower from the clocktower
X-rand-ascii: Pom\ml0OQgTDQLZ=xD]J"jQBh(vNapAbx#3!Q4<8wmxCjy{#$Y~S:|WcCuIEOIL9
X-NSA: Uzi Nazi strategic ARKANSIDE TASK FORCE 160 CONSTITUTION
X-bofh: Flat tire on station wagon with tapes.  ("Never underestimate the bandwidth of a station wagon full of tapes hurling down the highway" Andrew S. Tannenbaum)
User-Agent: Mutt/1.5.6+20040907i
Status: RO
Content-Length: 1094
Lines: 22

Tyler Durden <camera_lumina@hotmail.com> wrote:
> Then again, if you're looking for sheer, brute performance and design cycle 
> times are not a limiting factor, ASICs are often the way to go. Even in a 
> Variola Suitcase, however, I'd bet some of the trivial functions are 
> off-loaded to an FPGA, though, for reasons above.

Oh, sure.  Buy yourself the flexibility of the FPGA, e.g., by putting an
FPGA on a huge DMA pipe.  But don't count on the FPGA to do the brunt of
the crunching once you've settled on an implementation.

Note also that you can probably buy yourself lots of performance without
increasing the design cycle time all that much by simply synthesizing
(via Synopsys or the like) the same Verilog with which you would have
programmed the FPGA.  Buy (or pirate if you can; it's not like you're
selling these things, so who cares about the IP issues?) a set of
standard logic cells in the smallest process you can afford so that even
the lion's share of the layout can be done in a completely automated
fashion, and you're basically all set.

-- 
Riad S. Wahby
rsw@jfet.org

