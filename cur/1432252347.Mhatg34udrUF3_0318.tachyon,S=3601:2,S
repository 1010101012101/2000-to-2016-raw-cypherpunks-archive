From owner-cypherpunks@lne.com  Fri Dec 12 08:13:38 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p3/8.11.6-03-31-03) with ESMTP id hBCDDbY06863
	for <rsw@jfet.org>; Fri, 12 Dec 2003 08:13:37 -0500
Received: from slack.lne.com (slack.lne.com [127.0.0.1])
	by slack.lne.com (8.12.10/8.12.10) with ESMTP id hBCCtIQw013982
	(version=TLSv1/SSLv3 cipher=EDH-DSS-DES-CBC3-SHA bits=168 verify=NO)
	for <cypherpunks-goingout345@slack.lne.com>; Fri, 12 Dec 2003 04:55:18 -0800
Received: (from majordom@localhost)
	by slack.lne.com (8.12.10/8.12.10/Submit) id hBCCtH22013981
	for cypherpunks-goingout345; Fri, 12 Dec 2003 04:55:17 -0800
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
From: Anonymous <nobody@paranoici.org>
Comments: This message did not originate from the Sender address above.
  It was remailed automatically by anonymizing remailer software. Please
  report problems or inappropriate use to the remailer administrator at
  <abuse@paranoici.org>.
To: cypherpunks@algebra.com
Old-Subject: Re: Idea: Using GPG signatures for SSL certificates
Message-ID: <504028ab917f6b095fe447132fd5a5f2@paranoici.org>
Date: Fri, 12 Dec 2003 13:52:01 +0100 (CET)
X-Virus-Scanned: by amavisd-new-20030616-p5 (Debian) at autistici.org
X-Spam-Status: No, hits=-9.7 required=10.0
  tests=EMAIL_ATTRIBUTION,QUOTED_EMAIL_TEXT autolearn=ham version=2.53
X-Spam-Checker-Version: SpamAssassin 2.53 (1.174.2.15-2003-03-30-exp)
Subject: Re: Idea: Using GPG signatures for SSL certificates
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1817
Lines: 38

Thomas Shadduck writes:
> The problem that makes me feel uneasy about SSL is the vulnerability of
> the certification authorities when they get compromised, everything
> they signed gets compromised too.

Technically this is true, but the only thing that the CA signs is
other keys.  So it merely means that the CA can create certificates on
behalf of anyone the compromisers choose.  It doesnt "compromise" any
existing key or previously issued certificate or even any newly created
key.  

In any case, you dont need a CA to use SSL.  (Or more accurately, you
dont need anyone elses CA to use SSL just create your own CA and
issue yourself a certificate. This can be done without a lot of effort
using openssl, for example.)

> However, the system could be for some applications potentially get
> hardened to certain degree, using the web-of-trust approach.

What exactly does this buy you?  The SSL certification authority system
has as its only (but useful) redeeming value that one can connect to
www.somecompany.com and have some level of confidence that the SSL
certificate presented by that site was actually issued to
www.somecompany.com and was issued by a "reputable" certification
authority -- one that presumably will not hand out a certificate stamped
www.somecompany.com to creditcardscammer@blackhat.net.

If the certificate presented is not from one of the recognized
"reputable" CAs built into your web browser, SSL itself will still work
but your web browser will pop up a box saying that the CA is not in its
list of "reputable" CAs (and BTW "would you like to connect anyway?
yesno").

I dont understand the mindless worship of the "web of trust".  PGP
(/GPG) is a useful tool, but the "web of trust" is simply a way of
"certifying" a key in a non-centralized, non-hierarchical way.

-- Frondeur

