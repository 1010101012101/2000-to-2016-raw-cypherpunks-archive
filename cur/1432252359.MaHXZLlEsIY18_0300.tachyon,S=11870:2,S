From cypherpunks-bounces@cpunks.org  Mon Sep  2 17:46:41 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r82LkEP9028182;
	Mon, 2 Sep 2013 17:46:15 -0400
Received: from elasmtp-mealy.atl.sa.earthlink.net
 (elasmtp-mealy.atl.sa.earthlink.net [209.86.89.69])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r82LkBqW028171
 for <cypherpunks@cpunks.org>; Mon, 2 Sep 2013 17:46:13 -0400
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=dk20050327; d=pipeline.com;
 b=ZSy1miQ7roBmjFd9j68mouR9c6mICULphxFKLw/zs/u3D7oBjN14RCE/ah0ZxOJP;
 h=Received:X-Mailer:Date:To:From:Subject:In-Reply-To:References:Mime-Version:Content-Type:Message-ID:X-ELNK-Trace:X-Originating-IP;
Received: from [64.131.137.44] (helo=JY17.jya@pipeline.com)
 by elasmtp-mealy.atl.sa.earthlink.net with esmtpa (Exim 4.67)
 (envelope-from <jya@pipeline.com>)
 id 1VGbwk-0007a4-47; Mon, 02 Sep 2013 17:46:06 -0400
X-Mailer: QUALCOMM Windows Eudora Version 7.1.0.9
Date: Mon, 02 Sep 2013 17:49:37 -0400
To: cypherpunks@cpunks.org, cryptography@randombit.net, cryptome@freelists.org
From: John Young <jya@pipeline.com>
Subject: Eccentricity: How Hard to Crack a Cryptosystem
In-Reply-To: <CAJVRA1TskK73JApcgR20mWZ01_VDgrkZarC2E6UktX058NUc_g@mail.g
 mail.com>
References: <AB86E59A-012A-4AE3-A5B8-794B70AE44B8@me.com>
 <CAJVRA1TskK73JApcgR20mWZ01_VDgrkZarC2E6UktX058NUc_g@mail.gmail.com>
Mime-Version: 1.0
Content-Type: multipart/alternative;
 boundary="=====================_74826718==.ALT"
Message-ID: <E1VGbwk-0007a4-47@elasmtp-mealy.atl.sa.earthlink.net>
X-ELNK-Trace: 32f9438f2940907f3757dce5cd59c68163258e929229ad63babe660aa67ac722a7ce0e8f8d31aa3f350badd9bab72f9c350badd9bab72f9c350badd9bab72f9c
X-Originating-IP: 64.131.137.44
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 9324
Lines: 211

--=====================_74826718==.ALT
Content-Type: text/plain; charset="us-ascii"; format=flowed

One of the many eccentricities of crypto is speculating on how
long and how much computing power would be needed to crack
a particular cryptosystem, its algorithm or "implementation."
A favorite of popular writing on the topic, it is likely these
claims are pure fiction fabricated to satisfy headlines and
deadlines -- and, as always, to market or rididule a competitor's
piece of shit.

No Wikipedia entry on the phrase "crypto implementation,"
the all-time favorite excuse for the shit's absolute certain failure.

Some examples among hundreds:

No. 1

http://www.digicert.com/TimeTravel/math.htm

[No date]

DigiCert's base standard is to use 2048-bit keys in secure SSL 
certificates - that is enormously stronger than anything Lenstra et 
al attempted, in fact, it would require factoring a 617-digit number. 
RSA Labs claim (see: http://www.rsa.com/rsalabs/node.asp?id=2004) 
that 2048-bit keys are 2^32 (2 to the power of 32) times harder to 
break using NFS, than 1024-bit keys. 2^32 = 4,294,967,296 or almost 
4.3 billion, therefore breaking a DigiCert 2048-bit SSL certificate 
would take about 4.3 billion times longer (using the same standard 
desktop processing) than doing it for a 1024-bit key. It is therefore 
estimated, that standard desktop computing power would take 
4,294,967,296 x 1.5 million years to break a DigiCert 2048-bit SSL 
certificate. Or, in other words, a little over 6.4 quadrillion years.

In putting together our video, we estimated the age of the Universe 
to be 13,751,783,021 years or a little over 13.75 billion years, 
therefore if you tried to break a DigiCert 2048-bit SSL certificate 
using a standard modern desktop computer, and you started at the 
beginning of time, you would have expended 13 billion years of 
processing by the time you got back to today, and you would still 
have to repeat that entire process 468,481 times one after the other 
into our far far distant future before there was a good probability 
of breaking the certificate. In fact the Universe itself would grow 
dark before you even got close.

-----

No. 2

http://www.eetimes.com/document.asp?doc_id=1279619

How secure is AES against brute force attacks?

Mohit Arora, Sr. Systems Engineer & Security Architect, Freescale Semiconductor

5/7/2012 05:29 PM EDT

Even with a supercomputer, it would take 1 billion billion years to 
crack the 128-bit AES key using brute force attack. This is more than 
the age of the universe (13.75 billion years). If one were to assume 
that a computing system existed that could recover a DES key in a 
second, it would still take that same machine approximately 149 
trillion years to crack a 128-bit AES key.

-----

No. 3

http://www.computerworld.com/s/article/354997/The_Clock_Is_Ticking_for_Encryption

The clock is ticking for encryption

The tidy world of cryptography may be upended by the arrival of 
quantum computers.

By Lamont Wood

March 21, 2011 06:00 AM ET

Today's encryption algorithms can be broken. Their security derives 
from the wildly impractical lengths of time it can take to do so.

Let's say you're using a 128-bit AES cipher. The number of possible 
keys with 128 bits is 2 raised to the power of 128, or 3.4x1038, or 
340 undecillion. Assuming no information on the nature of the key is 
available (such as the fact that the owner likes to use his or her 
children's birthdays), a code-breaking attempt would require testing 
each possible key until one was found that worked.

Assuming that enough computing power was amassed to test 1 trillion 
keys per second, testing all possible keys would take 10.79 
quintillion years. This is about 785 million times the age of the 
visible universe (13.75 billion years). On the other hand, you might 
get lucky in the first 10 minutes.

But using quantum technology with the same throughput, exhausting the 
possibilities of a 128-bit AES key would take about six months. If a 
quantum system had to crack a 256-bit key, it would take about as 
much time as a conventional computer needs to crack a 128-bit key.

A quantum computer could crack a cipher that uses the RSA or EC 
algorithms almost immediately.

-----

No. 4

https://xkcd.com/538/

Thanks, XKCD



--=====================_74826718==.ALT
Content-Type: text/html; charset="us-ascii"

<html>
<body>
One of the many eccentricities of crypto is speculating on how<br>
long and how much computing power would be needed to crack<br>
a particular cryptosystem, its algorithm or &quot;implementation.&quot;
<br>
A favorite of popular writing on the topic, it is likely these<br>
claims are pure fiction fabricated to satisfy headlines and<br>
deadlines -- and, as always, to market or rididule a competitor's<br>
piece of shit.<br><br>
No Wikipedia entry on the phrase &quot;crypto implementation,&quot; <br>
the all-time favorite excuse for the shit's absolute certain
failure.<br><br>
Some examples among hundreds:<br><br>
No. 1<br><br>
<a href="http://www.digicert.com/TimeTravel/math.htm" eudora="autourl">
http://www.digicert.com/TimeTravel/math.htm</a><br><br>
[No date]<br><br>
DigiCert's base standard is to use 2048-bit keys in secure SSL
certificates - that is enormously stronger than anything Lenstra et al
attempted, in fact, it would require factoring a 617-digit number. RSA
Labs claim (see: http://www.rsa.com/rsalabs/node.asp?id=2004) that
2048-bit keys are 2^32 (2 to the power of 32) times harder to break using
NFS, than 1024-bit keys. 2^32 = 4,294,967,296 or almost 4.3 billion,
therefore breaking a DigiCert 2048-bit SSL certificate would take about
4.3 billion times longer (using the same standard desktop processing)
than doing it for a 1024-bit key. It is therefore estimated, that
standard desktop computing power would take 4,294,967,296 x 1.5 million
years to break a DigiCert 2048-bit SSL certificate. Or, in other words, a
little over 6.4 quadrillion years.<br><br>
In putting together our video, we estimated the age of the Universe to be
13,751,783,021 years or a little over 13.75 billion years, therefore if
you tried to break a DigiCert 2048-bit SSL certificate using a standard
modern desktop computer, and you started at the beginning of time, you
would have expended 13 billion years of processing by the time you got
back to today, and you would still have to repeat that entire process
468,481 times one after the other into our far far distant future before
there was a good probability of breaking the certificate. In fact the
Universe itself would grow dark before you even got close. <br><br>
-----<br><br>
No. 2<br><br>
<a href="http://www.eetimes.com/document.asp?doc_id=1279619" eudora="autourl">
http://www.eetimes.com/document.asp?doc_id=1279619</a><br><br>
How secure is AES against brute force attacks?<br><br>
Mohit Arora, Sr. Systems Engineer &amp; Security Architect, Freescale
Semiconductor<br><br>
5/7/2012 05:29 PM EDT<br><br>
Even with a supercomputer, it would take 1 billion billion years to crack
the 128-bit AES key using brute force attack. This is more than the age
of the universe (13.75 billion years). If one were to assume that a
computing system existed that could recover a DES key in a second, it
would still take that same machine approximately 149 trillion years to
crack a 128-bit AES key.<br><br>
-----<br><br>
No. 3<br><br>
<a href="http://www.computerworld.com/s/article/354997/The_Clock_Is_Ticking_for_Encryption" eudora="autourl">
http://www.computerworld.com/s/article/354997/The_Clock_Is_Ticking_for_Encryption</a>
<br><br>
The clock is ticking for encryption<br><br>
The tidy world of cryptography may be upended by the arrival of quantum
computers.<br><br>
By Lamont Wood<br><br>
March 21, 2011 06:00 AM ET<br><br>
Today's encryption algorithms can be broken. Their security derives from
the wildly impractical lengths of time it can take to do so.<br><br>
Let's say you're using a 128-bit AES cipher. The number of possible keys
with 128 bits is 2 raised to the power of 128, or 3.4x1038, or 340
undecillion. Assuming no information on the nature of the key is
available (such as the fact that the owner likes to use his or her
children's birthdays), a code-breaking attempt would require testing each
possible key until one was found that worked.<br><br>
Assuming that enough computing power was amassed to test 1 trillion keys
per second, testing all possible keys would take 10.79 quintillion years.
This is about 785 million times the age of the visible universe (13.75
billion years). On the other hand, you might get lucky in the first 10
minutes.<br><br>
But using quantum technology with the same throughput, exhausting the
possibilities of a 128-bit AES key would take about six months. If a
quantum system had to crack a 256-bit key, it would take about as much
time as a conventional computer needs to crack a 128-bit key.<br><br>
A quantum computer could crack a cipher that uses the RSA or EC
algorithms almost immediately.<br><br>
-----<br><br>
No. 4<br><br>
<a href="https://xkcd.com/538/" eudora="autourl">https://xkcd.com/538/<br>
<br>
</a>
<img src="https://micahflee.com/wp-content/uploads/2013/01/security.png" width=448 height=274 alt="Thanks, XKCD">
&nbsp;<br><br>
</body>
</html>

--=====================_74826718==.ALT--


