Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t6GFdjGc026057;
	Thu, 16 Jul 2015 11:39:47 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=phRy+KTQ;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: from mail-qg0-f42.google.com (mail-qg0-f42.google.com
 [209.85.192.42])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t6GFdg1m026053
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 16 Jul 2015 11:39:43 -0400
Received: by qged69 with SMTP id d69so4940969qge.0
 for <cypherpunks@cpunks.org>; Thu, 16 Jul 2015 08:39:36 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:sender:in-reply-to:references:from:date:message-id
 :subject:to:cc:content-type;
 bh=vKQUSHHg1qxri/F80iJDfSN7dyaTzmJKoBluVozjVaI=;
 b=phRy+KTQxPwSzFTcJlsTSDWuLMywqvA7hVdfR8doXXiuzz6SvEOKGvrPdqfmh23Xdk
 3UEh6ObZ3Ge54/Of8s+TTZ5habeNP5wZB9YAA3aCyKcnnzMFM9zqEdc7pbiKbARDPjrd
 jYkxGjVbYlFdlZyZYN6WabyC7doEX2KNRLuqxZXcwBJvooE0HQDt+j1AUwDYTHhto6mc
 OO0p9uxFB0vjj5NXIwKZJSnUUKiVnH24QPlv3HD0VHH3NJFYEqabIb2XhEx0OQFR+e6H
 0ogdUSpy4p+d6XlfW+xVuvjpphxn53yqDPZJAE3vmgJP3xHd+K2wqC8JlaC6P8wl1yOQ
 E73g==
X-Received: by 10.140.38.167 with SMTP id t36mr17820175qgt.69.1437061176682;
 Thu, 16 Jul 2015 08:39:36 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.140.30.70 with HTTP; Thu, 16 Jul 2015 08:39:17 -0700 (PDT)
In-Reply-To: <CADy1Ce6+v15R1sc1wa4kqyek+kupYjgFU-8tmkAGOQTAbwwjVQ@mail.gmail.com>
References: <20150714155203.826F52282E2@palinka.tinho.net>
 <55A540A7.6080808@lig.net>
 <CADy1Ce6+v15R1sc1wa4kqyek+kupYjgFU-8tmkAGOQTAbwwjVQ@mail.gmail.com>
From: =?UTF-8?Q?Lodewijk_andr=C3=A9_de_la_porte?= <l@odewijk.nl>
Date: Fri, 17 Jul 2015 00:39:17 +0900
X-Google-Sender-Auth: rNmauzv5uXT_MaKSF2MG0JNAz8Y
Message-ID: <CAHWD2rJ6DotrvFyWJhtpnW7JsYVn_gCySNoOdNoCmP=nY2bGxg@mail.gmail.com>
Subject: Re: an ominous comment
To: Kurt Buff <kurt.buff@gmail.com>
Content-Type: multipart/alternative; boundary=001a11c12ce4f4ef12051affe00b
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 184

--001a11c12ce4f4ef12051affe00b
Content-Type: text/plain; charset=UTF-8

2015-07-15 2:20 GMT+09:00 Kurt Buff <kurt.buff@gmail.com>:

> On Tue, Jul 14, 2015 at 10:02 AM, Stephen D. Williams <sdw@lig.net> wrote:
> > Everything will be run in the cloud and browser because it is, overall, a
> > better computation model.
>
> Certainly that's the current bias, but web  browser as platform isn't
> really all that it's cracked up to be, IMHO - all browsers suck, and I
> don't see them getting better any time soon, especially if they run
> javascript and plugins.
>

"All browsers suck"?.. They run HTML pretty darn well. I'd say HTML is a
document language, not an application language, and now it's trying to be
both and it's a pretty psychotic fit. But it still works pretty darn much
better than anything else out there. I'd like there to be an "all settled
standards compliant fast and secure browser", but the secure is usually
omitted (and there's a rush to support the not-quite-settled standards).

Not much wrong with JavaScript, but I hope they'll soon support several
other languages too. Like perhaps LLVM's intermediary format - so we can
compile whatever into a near-metal language that will run really fast. (and
saving a lot of people the effort of writing/maintaining to-js compilers)

But the cloud is a better computational platform because of:
 * Economies of scale for computer electronics, power, network connections
 * Time sharing on the cloud's hardware
 * Sometimes architecture advantages

But, pushing back, there's:
 * Latency/bandwidth to user
 * Loss of end user's control over essential hardware
 * Massive trust and security issues

We're looking at the following:

- micropower devices; IoT and thinner smartphones (less power usage as
batteries do not seem to develop fast), home automation panels, extra
body-mounted-displays, in-car panels, home-appliance panels (refrigerator
to mixer), televisions, alarm clocks, some tablets and laptops
anything with power or financial constraints. These machines are that which
the user interacts with. Their entire design gives way to human preference
and comfort. They do not compute much, and might contain nothing but a
video-stream-decoder and a "window manager" that decodes simple graphics
statements (hopefully simpler than HTML).

- computers; workstations, desktop pc's, laptops, stand-alone "videocards"
with generic computing support, servers, gaming-appliances
fast computers that are positioned somewhere in the house. Low latency to
the user and with very good price/performance relationships (desktops now
are miracles). Given the single-core-ceiling these machines will typically
fare better than ideal cloud setups for many applications. They can be
rented out to remote users dynamically.

- remote processing; the cloud, the neighbors' computers, etc
time-shared computing that is not in-house. Typically high latency,
extremely high maximum power and lowest cost. Latency constraints force it
to be used only for very expensive operations - such as rendering tasks and
machine learning (for business intelligence or otherwise). If the
set-up-time for such an operation is 2000ms many tasks are still better ran
locally - the application-support-system (OS?) will have to make choices
about this rather fast.


> >  However, that doesn't preclude you from running a
> > cloud locally.
>
> Certainly better than public/commercial clouds - at least until proven
> encryption becomes the norm.


What I've described above is a sort of multi-tier architecture. At the
moment remote or local computing is a wild west with exclusively homebrewed
solutions. At some point we will integrate all our devices, and software's
locality will be managed better as well. Encryption will be applied
automatically at the appropriate places. I think the largest desired
capability is the inaptly named "homomorphic encryption", which should be
optimized and packaged such that heavy processing can be remotely executed
in a safe and trustless manner.



What is to be done? Well, I hope we can avoid the situation where we run
the browsers and they run the software. We're going there now because the
architecture I mentioned does not exist - and because it's a simpler model.
A business could be made out of making hardware that follows the above
model, that would probably be the best way to make it happen. Elsewise
we're all along for the ride that the unknowing public is buying us into.

--001a11c12ce4f4ef12051affe00b
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote">2015=
-07-15 2:20 GMT+09:00 Kurt Buff <span dir=3D"ltr">&lt;<a href=3D"mailto:kur=
t.buff@gmail.com" target=3D"_blank">kurt.buff@gmail.com</a>&gt;</span>:<br>=
<blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-=
left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;p=
adding-left:1ex"><span class=3D"">On Tue, Jul 14, 2015 at 10:02 AM, Stephen=
 D. Williams &lt;<a href=3D"mailto:sdw@lig.net">sdw@lig.net</a>&gt; wrote:<=
br>
&gt; Everything will be run in the cloud and browser because it is, overall=
, a<br>
&gt; better computation model.<br>
<br>
</span>Certainly that&#39;s the current bias, but web=C2=A0 browser as plat=
form isn&#39;t<br>
really all that it&#39;s cracked up to be, IMHO - all browsers suck, and I<=
br>
don&#39;t see them getting better any time soon, especially if they run<br>
javascript and plugins.<br></blockquote><div><br></div><div>&quot;All brows=
ers suck&quot;?.. They run HTML pretty darn well. I&#39;d say HTML is a doc=
ument language, not an application language, and now it&#39;s trying to be =
both and it&#39;s a pretty psychotic fit. But it still works pretty darn mu=
ch better than anything else out there. I&#39;d like there to be an &quot;a=
ll settled standards compliant fast and secure browser&quot;, but the secur=
e is usually omitted (and there&#39;s a rush to support the not-quite-settl=
ed standards).</div><div><br></div><div>Not much wrong with JavaScript, but=
 I hope they&#39;ll soon support several other languages too. Like perhaps =
LLVM&#39;s intermediary format - so we can compile whatever into a near-met=
al language that will run really fast. (and saving a lot of people the effo=
rt of writing/maintaining to-js compilers)</div><div><br></div><div>But the=
 cloud is a better computational platform because of:<br>=C2=A0* Economies =
of scale for computer electronics, power, network connections</div><div>=C2=
=A0* Time sharing on the cloud&#39;s hardware</div><div>=C2=A0* Sometimes a=
rchitecture advantages</div><div><br></div><div>But, pushing back, there&#3=
9;s:<br>=C2=A0* Latency/bandwidth to user</div><div>=C2=A0* Loss of end use=
r&#39;s control over essential hardware</div><div>=C2=A0* Massive trust and=
 security issues</div><div><br></div><div>We&#39;re looking at the followin=
g:</div><div><br></div><div>- micropower devices; IoT and thinner smartphon=
es (less power usage as batteries do not seem to develop fast), home automa=
tion panels, extra body-mounted-displays, in-car panels, home-appliance pan=
els (refrigerator to mixer), televisions, alarm clocks, some tablets and la=
ptops</div><div>anything with power or financial constraints. These machine=
s are that which the user interacts with. Their entire design gives way to =
human preference and comfort. They do not compute much, and might contain n=
othing but a video-stream-decoder and a &quot;window manager&quot; that dec=
odes simple graphics statements (hopefully simpler than HTML).</div><div>=
=C2=A0</div><div>- computers; workstations, desktop pc&#39;s, laptops, stan=
d-alone &quot;videocards&quot; with generic computing support, servers, gam=
ing-appliances</div><div>fast computers that are positioned somewhere in th=
e house. Low latency to the user and with very good price/performance relat=
ionships (desktops now are miracles). Given the single-core-ceiling these m=
achines will typically fare better than ideal cloud setups for many applica=
tions. They can be rented out to remote users dynamically.</div><div><br></=
div><div>- remote processing; the cloud, the neighbors&#39; computers, etc<=
/div><div>time-shared computing that is not in-house. Typically high latenc=
y, extremely high maximum power and lowest cost. Latency constraints force =
it to be used only for very expensive operations - such as rendering tasks =
and machine learning (for business intelligence or otherwise). If the set-u=
p-time for such an operation is 2000ms many tasks are still better ran loca=
lly - the application-support-system (OS?) will have to make choices about =
this rather fast.</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" s=
tyle=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rg=
b(204,204,204);border-left-style:solid;padding-left:1ex"><span class=3D"">&=
gt;=C2=A0 However, that doesn&#39;t preclude you from running a<br>
&gt; cloud locally.<br>
<br>
</span>Certainly better than public/commercial clouds - at least until prov=
en<br>
encryption becomes the norm.</blockquote></div><br>What I&#39;ve described =
above is a sort of multi-tier architecture. At the moment remote or local c=
omputing is a wild west with exclusively homebrewed solutions. At some poin=
t we will integrate all our devices, and software&#39;s locality will be ma=
naged better as well. Encryption will be applied automatically at the appro=
priate places. I think the largest desired capability is the inaptly named =
&quot;homomorphic encryption&quot;, which should be optimized and packaged =
such that heavy processing can be remotely executed in a safe and trustless=
 manner.</div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extr=
a"><br></div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra=
">What is to be done? Well, I hope we can avoid the situation where we run =
the browsers and they run the software. We&#39;re going there now because t=
he architecture I mentioned does not exist - and because it&#39;s a simpler=
 model. A business could be made out of making hardware that follows the ab=
ove model, that would probably be the best way to make it happen. Elsewise =
we&#39;re all along for the ride that the unknowing public is buying us int=
o.</div></div>

--001a11c12ce4f4ef12051affe00b--

