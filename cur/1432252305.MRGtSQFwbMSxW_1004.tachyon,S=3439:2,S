From owner-cryptography+rsw=mit.edu@wasabisystems.com  Fri Nov  8 00:47:22 2002
Return-Path: <owner-cryptography+rsw=mit.edu@wasabisystems.com>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id gA85lLs10106
	for <rsw@opamp.org>; Fri, 8 Nov 2002 00:47:21 -0500
Received: from mononoke.wasabisystems.com (mononoke.wasabisystems.com [166.84.0.13])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id AAA01459
	for <rsw@mit.edu>; Fri, 8 Nov 2002 00:47:20 -0500 (EST)
Received: by mononoke.wasabisystems.com (Postfix, from userid 96)
	id 4C3C35E6AF; Fri,  8 Nov 2002 00:38:37 -0500 (EST)
Delivered-To: cryptography@wasabisystems.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by mononoke.wasabisystems.com (Postfix) with ESMTP id A15FD5E646
	for <cryptography@wasabisystems.com>; Fri,  8 Nov 2002 00:38:36 -0500 (EST)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id 670CDD97FB; Fri,  8 Nov 2002 00:38:35 -0500 (EST)
Received: from mta02-srv.alltel.net (mta02.alltel.net [166.102.165.144])
	by mononoke.wasabisystems.com (Postfix) with ESMTP id E08EA5E65C
	for <cryptography@wasabisystems.com>; Thu,  7 Nov 2002 19:54:52 -0500 (EST)
Received: from PATRICK.loom.cc ([162.39.200.5]) by mta02-srv.alltel.net
          with ESMTP
          id <20021108005452.DDLW9103.mta02-srv.alltel.net@PATRICK.loom.cc>;
          Thu, 7 Nov 2002 18:54:52 -0600
Message-Id: <5.1.1.6.0.20021107194436.042ece58@loom.cc>
X-Sender: patrick@loom.cc
X-Mailer: QUALCOMM Windows Eudora Version 5.1.1
Date: Thu, 07 Nov 2002 19:54:57 -0500
To: Digital Bearer Settlement List <dbs@philodox.com>
From: Patrick Chkoreff <patrick@loom.cc>
Subject: Re: Did you *really* zeroize that key?
Cc: cryptography@wasabisystems.com, cypherpunks@lne.com
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-cryptography@wasabisystems.com
Precedence: bulk
Status: O
Content-Length: 1405
Lines: 34


>>From: "Trei, Peter" <ptrei@rsasecurity.com>
>>
>>[Moderator's note: FYI: no "pragma" is needed. This is what C's
>>"volatile" keyword is for. Unfortunately, not everyone writing in C
>>knows the language. --Perry]
>
>Thanks for the reminder about "volatile."  It is an ancient and valuable 
>feature of C and I suppose it's implemented correctly under gcc and some 
>of the Windoze compilers even with high optimization options like -O2.

Oops, I missed your real point, which is that "volatile" ought to suffice 
as a compiler guide and there is no need for an additional pragma.  By 
declaring a variable as volatile, the compiler would also leave untouched 
any code which refers to that variable.

Too bad that volatile is not guaranteed to work in all major ANSI-compliant 
compilers.  Oh well.  I wonder how gcc does with it?

[Moderator's note: I've quoted chapter and verse -- if it follows the
current standards, it is required to honor "volatile". It isn't
compliant by definition if it does not. gcc does indeed honor
"volatile", as do almost all other C compilers I have access to. --Perry]

I guess we should stick with either the recursive routine trick or the 
var-arg trick.

-- Patrick
http://fexl.com


---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@wasabisystems.com

