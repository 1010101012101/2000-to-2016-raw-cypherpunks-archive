From rswatjfet.org+caf_=rsw=jfet.org@gmail.com  Wed Sep 17 17:19:54 2014
Return-Path: <rswatjfet.org+caf_=rsw=jfet.org@gmail.com>
Received: from mail-pd0-f182.google.com (mail-pd0-f182.google.com [209.85.192.182])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s8HLJq7A025064
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <rsw@jfet.org>; Wed, 17 Sep 2014 17:19:54 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=iu/B+5vu;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: by mail-pd0-f182.google.com with SMTP id w10so2922675pde.41
        for <rsw@jfet.org>; Wed, 17 Sep 2014 14:16:32 -0700 (PDT)
X-Received: by 10.68.243.70 with SMTP id ww6mr338974pbc.3.1410988592372;
        Wed, 17 Sep 2014 14:16:32 -0700 (PDT)
X-Forwarded-To: rsw@jfet.org
X-Forwarded-For: rswatjfet.org@gmail.com rsw@jfet.org
Delivered-To: rswatjfet.org@gmail.com
Received: by 10.70.92.9 with SMTP id ci9csp990867pdb;
        Wed, 17 Sep 2014 14:16:31 -0700 (PDT)
X-Received: by 10.68.115.48 with SMTP id jl16mr456250pbb.78.1410988591376;
        Wed, 17 Sep 2014 14:16:31 -0700 (PDT)
Received: from localhost (antiproton.jfet.org. [209.141.47.85])
        by mx.google.com with ESMTPS id bu3si36677954pdb.127.2014.09.17.14.16.30
        for <rswATjfet.org@gmail.com>
        (version=TLSv1.2 cipher=RC4-SHA bits=128/128);
        Wed, 17 Sep 2014 14:16:31 -0700 (PDT)
Received-SPF: neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) client-ip=209.141.47.85;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net;
       dkim=fail header.i=@gmail.com;
       dmarc=fail (p=NONE dis=NONE) header.from=gmail.com
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s8HLHeT7025033;
	Wed, 17 Sep 2014 17:17:58 -0400
Received: from mail-vc0-f169.google.com (mail-vc0-f169.google.com
 [209.85.220.169])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s8HLHWSi025029
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Wed, 17 Sep 2014 17:17:34 -0400
Received: by mail-vc0-f169.google.com with SMTP id ij19so1922299vcb.14
 for <cypherpunks@cpunks.org>; Wed, 17 Sep 2014 14:14:11 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :cc:content-type;
 bh=b2PZroFOtH/HeEGXazreVzk9GBA7kFeF+NOGmYzu0Zs=;
 b=iu/B+5vuyEIE85XAwvrEBeUYq7mX17+BNOgv4OhVEAmHIccjrpC+25VwCXRgq7v226
 7t0D/g/ykbluELT05CfCJqJA4qaOGuUrDuzqswl3M2r6kkbIbqXtKBmYjpR6sJ20Qiye
 QUjS5scbQafsWTfWLDukYfaYv/LhZwPyIWJiLTNNfZBuwttpKTtuFldEU8seEBOHtoyt
 A0egQ4FEXRCoc9Pvj+eL3unhQE0Z+lssMJOpBQD3I74EeaG4j170iFRJwdbZqWPzSWyk
 fECFbGMxlw+ccQrx40/Gnc0d7Ism7FGwcwrD01mviwS7xnatL6YhDTy32M0Sa97eoIDZ
 r/uA==
MIME-Version: 1.0
X-Received: by 10.52.179.161 with SMTP id dh1mr2285705vdc.78.1410988451740;
 Wed, 17 Sep 2014 14:14:11 -0700 (PDT)
Received: by 10.221.64.74 with HTTP; Wed, 17 Sep 2014 14:14:11 -0700 (PDT)
In-Reply-To: <CABU-GB37qpwUuTtK15VmykzuR4_-AVQvSFUYXO=W8VC3J2hEFA@mail.gmail.com>
References: <CABU-GB37qpwUuTtK15VmykzuR4_-AVQvSFUYXO=W8VC3J2hEFA@mail.gmail.com>
Date: Wed, 17 Sep 2014 17:14:11 -0400
Message-ID: <CAD2Ti29NreOO75KPNE3a5P6Fg-A7+O1H4NLRRQM4t7_QAwebaA@mail.gmail.com>
Subject: Re: [cryptography] Email encryption for the wider public
To: p2p-hackers@zim.maski.org, cryptography@randombit.net
Content-Type: text/plain; charset=UTF-8
Cc: cypherpunks@cpunks.org, cryptography@metzdowd.com
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
From: grarpamp <grarpamp@gmail.com>
X-Gspam-Loop: antiproton.jfet.org
Status: O
Content-Length: 2257
Lines: 43

On Wed, Sep 17, 2014 at 9:43 AM, Henry Augustus Chamberlain
<henryaugustuschamberlain@gmail.com> wrote:
> I propose that we use the local part of the email address to store the public key,
> ...
> my email address would be (64 random letters)@gmail.com
> ...
> Somebody not using encrypted emails could still click on your "mailto"
> link and send you an email, although it will be unencrypted

Putting keys into some_encoding@example.com might cover
some bases related to offline key lookup and message validation.
Most user and system mail tools would need changes to handle
string width and keytype, addressbooks updated, etc. Totally burying
OpenPGP, passphrase and key lookup/use behind a fully integrated
MUA GUI for grandma would work just as similarly well right now today
with no such encoding.

But in the end, all you're doing is covering the message body, and in today's
world that's clearly not enough. No one's yet solving the huge issues
with leaving mail exposed to what is essentially open-for-all-to-inspect central
storage and mail routing. The "who's IP talking to who", "From To Subject,
daemon headers, etc" metadata, when, how much/often, provider logs, someone
sending you unencrypted mail, you giving up your private keys to the
provider or running blobs they provide to you, etc. This is all unfixable with
traditional "Email" models.

This is why that to really solve anything more than the message body,
you need to go completely nextgen and turn that 'email address' into
an anonymous P2P overlay network node address, run your overlay
client [which supplies a mail/messaging front end] and send/receive
mail through that from/to your usual MTA/MUA/messaging toolchain.

The real work there is in pushing the P2P node count up...
- Research how many users globally might leave their messaging
node up 24x7 for a direct realtime overlay connection with the far
end "user@node"... 1/10/100/n*1000 million?
- Develop message storage [and forward/poll/expiry] within the
overlay for those that aren't in online mode.
- Determine any hardware limitations and thin client models.

There is an ongoing thread with the subject
 "The next gen P2P secure email solution"
that contains various people's initial thoughts/framework on this.

