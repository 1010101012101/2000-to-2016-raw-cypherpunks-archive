From owner-cryptography+rsw=mit.edu@wasabisystems.com  Sat Nov  9 17:55:12 2002
Return-Path: <owner-cryptography+rsw=mit.edu@wasabisystems.com>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id gA9MtCe20530
	for <rsw@opamp.org>; Sat, 9 Nov 2002 17:55:12 -0500
Received: from mononoke.wasabisystems.com (mononoke.wasabisystems.com [166.84.0.13])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id NAA06097
	for <rsw@mit.edu>; Sat, 9 Nov 2002 13:38:34 -0500 (EST)
Received: by mononoke.wasabisystems.com (Postfix, from userid 96)
	id 2AAA75E6C8; Sat,  9 Nov 2002 13:35:57 -0500 (EST)
Delivered-To: cryptography@wasabisystems.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by mononoke.wasabisystems.com (Postfix) with ESMTP id 7FC585E69C
	for <cryptography@wasabisystems.com>; Sat,  9 Nov 2002 13:35:56 -0500 (EST)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id 467D4D97FE; Sat,  9 Nov 2002 13:35:56 -0500 (EST)
Received: from anchor-post-32.mail.demon.net (anchor-post-32.mail.demon.net [194.217.242.90])
	by mononoke.wasabisystems.com (Postfix) with ESMTP id 9F3F35E69C
	for <cryptography@wasabisystems.com>; Sat,  9 Nov 2002 13:28:39 -0500 (EST)
Received: from hawkswing.demon.co.uk ([193.237.236.173] helo=davehowe)
	by anchor-post-32.mail.demon.net with smtp (Exim 3.35 #1)
	id 18AaLT-000LFj-0W; Sat, 09 Nov 2002 18:28:36 +0000
Message-ID: <01a601c2881d$ce65c380$01c8a8c0@davehowe>
From: "Dave Howe" <DaveHowe@gmx.co.uk>
To: <cryptography@wasabisystems.com>, <cypherpunks@lne.com>
References: <v03110701b9f215367c1e@[192.168.1.5]>
Subject: Re: Did you *really* zeroize that key?
Date: Sat, 9 Nov 2002 18:28:22 -0000
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
Sender: owner-cryptography@wasabisystems.com
Precedence: bulk
Status: O
Content-Length: 1305
Lines: 27

Bill Frantz wrote:
> There is a common example of this corner case where the memory is
> paged. The page containing the key is swapped out, then it is read
> back in and the key is overwritten, and then the page is deallocated.
> Many OSs will not zero the disk copy of the key.
Given the nature of this problem, perhaps a *better* solution would be to
work on getting the spec updated to include a "security-sensitive"
declaration for variables in c/c++? such variables could be held in such a
way that they (where the os permits)
a) are never swapped to disk
b) are automagically wiped with three passes of pseudo-random data when
destroyed
c) are in a "security data" area of memory that can't be accessed by
programs not owning the data there
d) are register variables when possible (for security, not speed)

the "always wipe when the variable is discarded" functionality shouldn't be
that hard to impliment, and would remove the only real reason we don't want
optimisation for those variables - that we want to be able to blank them.

not sure a #pragma Leave_This_Intact_You_Bastard is the right solution
though :)


---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@wasabisystems.com

