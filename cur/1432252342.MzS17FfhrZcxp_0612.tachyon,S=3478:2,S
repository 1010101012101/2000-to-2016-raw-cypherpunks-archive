From owner-cypherpunks@al-qaeda.net  Tue Aug 19 20:23:08 2008
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from proton.jfet.org (majordomo@localhost [127.0.0.1])
	by proton.jfet.org (8.14.1/8.14.1/Debian-9) with ESMTP id m7K0Mado002568
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Tue, 19 Aug 2008 20:22:36 -0400
Received: (from majordomo@localhost)
	by proton.jfet.org (8.14.1/8.14.1/Submit) id m7K0Maek002567
	for cypherpunks-outgoing; Tue, 19 Aug 2008 20:22:36 -0400
X-Authority-Analysis: v=1.0 c=1 a=fpZ4qPE4AAAA:8 a=OzSqGtDSAAAA:8 
  a=hqaSkvWfAAAA:8 a=uOwaWUgCo7wSiMNv90oA:9 a=lhv11eHPkoILn5Zv4iEA:7 
  a=e0o9K1GW8FuTy4WFFAfB37r1ZBkA:4 a=sXQqmFPb3Z4A:10 a=nS7hf6rJOiYA:10 
  a=c5zHXd76wwQA:10
Message-Id: <E07A6BD1-7F06-4E80-91B8-D2E37905BFCA@shipwright.com>
From: "R.A. Hettinga" <rah@shipwright.com>
To: cypherpunks@al-qaeda.net, gold-silver-crypto@rayservers.com
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Subject: Fwd: Keyczar
Mime-Version: 1.0 (Apple Message framework v926)
Date: Tue, 19 Aug 2008 20:22:22 -0400
References: <48A2B7F5.1080905@links.org>
X-Mailer: Apple Mail (2.926)
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 2126
Lines: 56

Begin forwarded message:

From: Ben Laurie <ben@links.org>
Date: August 13, 2008 6:31:17 AM GMT-04:00
To: Cryptography <cryptography@metzdowd.com>
Subject: Keyczar

http://www.links.org/?p=374

When I joined Google over two years ago I was asked to find a small  
project to get used to the way development is done there. The project  
I chose was one that some colleagues had been thinking about, a key  
management library. I soon realised that unless the library also  
handled the crypto it was punting on the hard problem, so I extended  
it to do crypto and to handle key rotation and algorithm changes  
transparently to the user of the library.

About nine months later I handed over my "starter project" to Steve  
Weis, who has worked on it ever since. For a long time we've talked  
about releasing an open source version, and I'm pleased to say that  
Steve and intern Arkajit Dey did just that, earlier this week:  
Keyczar[1].

    "Keyczar is an open source cryptographic toolkit designed to make  
it easier and safer for developers to use cryptography in their  
applications. Keyczar supports authentication and encryption with both  
symmetric and asymmetric keys. Some features of Keyczar include:

        * A simple API
        * Key rotation and versioning
        * Safe default algorithms, modes, and key lengths
        * Automated generation of initialization vectors and  
ciphertext signatures"

When we say simple, by the way, the code for loading a keyset and  
encrypting some plaintext is just two lines. Likewise for decryption.  
And the user doesn't need to know anything about algorithms or modes.

Great work, guys! I look forward to the "real" version (C++, of  
course!).

[1] http://www.keyczar.org/

Cheers,

Ben.

-- 
http://www.apache-ssl.org/ben.html           http://www.links.org/

"There is no limit to what a man can do or how far he can go if he
doesn't mind who gets the credit." - Robert Woodruff

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@metzdowd.com

