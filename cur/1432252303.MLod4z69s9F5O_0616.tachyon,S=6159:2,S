From owner-cypherpunks@Algebra.COM  Sat Jul 13 15:53:26 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g6DJrQF25849
	for <rsw@opamp.org>; Sat, 13 Jul 2002 15:53:26 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id PAA06878
	for <rsw@mit.edu>; Sat, 13 Jul 2002 15:52:24 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g6DJG9o8030778
	for <cypherpunks-outgoing@ak47.algebra.com>; Sat, 13 Jul 2002 14:16:09 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g6DJG9Ta030777
	for cypherpunks-outgoing; Sat, 13 Jul 2002 14:16:09 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@[207.200.56.4])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g6DJG8o8030763
	for <cypherpunks@algebra.com>; Sat, 13 Jul 2002 14:16:08 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id OAA21640
	for cypherpunks@algebra.com; Sat, 13 Jul 2002 14:22:15 -0500
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id OAA21622
	for cypherpunks-outgoing; Sat, 13 Jul 2002 14:20:41 -0500
Received: from localhost (ravage@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) with SMTP id OAA21616
	for <cypherpunks@ssz.com>; Sat, 13 Jul 2002 14:20:38 -0500
Date: Sat, 13 Jul 2002 14:20:38 -0500 (CDT)
From: Jim Choate <ravage@einstein.ssz.com>
To: cypherpunks@einstein.ssz.com
Old-Subject: CDR: Re: Finding encrytion algorithm
In-Reply-To: <Pine.GSU.4.44.0207131145370.5102-100000@eskimo.com>
Message-ID: <Pine.LNX.3.96.1020713140047.7895E-100000@einstein.ssz.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-Unsubscription-Info: http://einstein.ssz.com/cdr
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Acceptable-Languages: English, Russian, German, French, Spanish
Subject:  Re: Finding encrytion algorithm
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 3671
Lines: 85



Perhaps a simpler example. Let's look at a 'fair' coin and what that means
in the real world.

A normal coin (or any nDx for that matter [1]) for short sequences is
random. In other words if you record a game sequence and then replay the
game the die sequence won't have any statistical correlation. Knowing what
happened last time won't help you this time, the 'window of opportunity'
with respect to statistical bias isn't large enough, so the game is
'fair'.

But!, if you throw that coin once a second for a billion years you will
find that -no- coin is really -fair-. This goes back to k-sequences and
Knuth. Go back and then start throwing it again, and if your sequence is
long enough you can use this known bias from the first experiment to
increase your percentage of 'hits' in the second sequence. In other words
you can now prove experimentaly the coin isn't fair and what that bias is.

This is related to 'Hypothesis Testing'. It's rather strange, but I happen
to be rereading a book, "The Mathematical Sciences: A Collection of
Essays" (LoC# 69-12750) put out by some group called COSRIMS in about
1969. I remember the book because somebody gave it to me (I was about 9 or
10 at the time) to read, and it has an insane bright yellow cover. I
recently came across it again in a used bookstore for $10 so I bought it.
It's basically a bunch of chapters on various issues of math research with
the intent of focusing high school and undergrads to pursue mathematical
careers by giving examples of what you might be working on. The chapter
"Statistical Inference" (by J. Kiefer) uses an example of a coin and a
3-run sequence to determine the actual bias of the coin (the example is
very simple, the coin is very biased). You should be able to still find
the book in public libraries and college libraries. I'm sure more modern
texts on hypothesis testing will be just as relevant.

The vast majority of RNG's that we use are really PRNG's, we just don't
collect enough data on them to be able to demonstrate that. Or the
sequence of interest is so short we dont' care.

[1] A coin is a 1D2, two coins would be 2D2, for example. Who said
    wargaming was worthless ;)


On Sat, 13 Jul 2002, Mike Rosing wrote:

> On Sat, 13 Jul 2002, gfgs pedo wrote:
> 
> > can u pls explain how they have statistical
> > signatures,pls-
> >
> >
> >  may be using SPN's, i have tried ANSI X9.17 key
> > generation with GOST-it did have a negligably small
> > skew-it makes me wonder what statistical signature
> > they have.The negligable skew is a weakness but not
> > high enough to compramise the security of the key used
> > from the ANSI x9.17 key gen method.
> > pls explain.
> > thank u veru much.
> >
> 
> You're on the right track.  Take several encryption algorithms
> of your choice, then use a fixed IV, and the same sets of keys,
> and encrypt blocks of 0's.  For each algorithm, compute several sets of
> staticstics (a la NIST or DIEHARD).  With 100 blocks of 10 Megabytes
> (100 different keys) you should see some interesting differences.
> 
> Remember, your question originally was "how can you tell which algorithm",
> not "how do you find the key".  Let us know what you find out :-)
> 
> Patience, persistence, truth,
> Dr. mike
> 
> 


 --
    ____________________________________________________________________

              When I die, I would like to be born again as me.

                                            Hugh Hefner
     ravage@ssz.com                                         www.ssz.com
     jchoate@open-forge.org                          www.open-forge.org

    --------------------------------------------------------------------

