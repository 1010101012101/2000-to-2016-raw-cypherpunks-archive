From owner-cypherpunks@Algebra.COM  Fri Jul  5 05:05:27 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g6595QC18406
	for <rsw@opamp.org>; Fri, 5 Jul 2002 05:05:26 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id JAA11395
	for <rsw@mit.edu>; Fri, 5 Jul 2002 09:08:40 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g65Atm4l031975
	for <cypherpunks-outgoing@ak47.algebra.com>; Fri, 5 Jul 2002 05:55:48 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g65AtmFa031974
	for cypherpunks-outgoing; Fri, 5 Jul 2002 05:55:48 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from locust.minder.net (locust.minder.net [66.92.53.74])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g65Atk4l031959
	for <cypherpunks@algebra.com>; Fri, 5 Jul 2002 05:55:46 -0500
Received: from waste.minder.net (daemon@waste [66.92.53.73])
	by locust.minder.net (8.11.6/8.11.6) with ESMTP id g65AtfE06910
	for <cypherpunks@algebra.com>; Fri, 5 Jul 2002 06:55:42 -0400 (EDT)
	(envelope-from cpunks@waste.minder.net)
Received: (from cpunks@localhost)
	by waste.minder.net (8.11.6/8.11.6) id g65AtfC22812
	for cypherpunks@algebra.com; Fri, 5 Jul 2002 06:55:41 -0400
Received: from locust.minder.net (locust.minder.net [66.92.53.74])
	by waste.minder.net (8.11.6/8.11.6) with ESMTP id g65Atau22801
	for <cpunks@minder.net>; Fri, 5 Jul 2002 06:55:36 -0400
Received: from einstein.ssz.com (cpunks@[207.200.56.4])
	by locust.minder.net (8.11.6/8.11.6) with ESMTP id g65AtZE06904
	for <cpunks@minder.net>; Fri, 5 Jul 2002 06:55:35 -0400 (EDT)
	(envelope-from cpunks@einstein.ssz.com)
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id FAA05175
	for cpunks@minder.net; Fri, 5 Jul 2002 05:59:18 -0500
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id FAA05146
	for cypherpunks-outgoing; Fri, 5 Jul 2002 05:57:33 -0500
Received: from zork.zork.net (mail@zork.zork.net [66.92.188.166])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id FAA05136
	for <cypherpunks@einstein.ssz.com>; Fri, 5 Jul 2002 05:57:23 -0500
Received: from schoen by zork.zork.net with local (Exim 3.35 #1 (Debian))
	id 17QQho-0006L9-00; Fri, 05 Jul 2002 03:52:52 -0700
Date: Fri, 5 Jul 2002 03:52:52 -0700
From: Seth David Schoen <schoen@eff.org>
To: Hadmut Danisch <hadmut@danisch.de>
Cc: Bill Stewart <bill.stewart@pobox.com>,
   Lucky Green <shamrock@cypherpunks.to>, daw@mozart.cs.berkeley.edu,
   cypherpunks@einstein.ssz.com, cryptography@wasabisystems.com
Old-Subject: CDR: Re: Ross's TCPA paper
Message-ID: <20020705105252.GC5551@zork.net>
References: <afecsf$ba3$1@abraham.cs.berkeley.edu> <5.1.1.6.2.20020703225147.0b94ecd0@idiom.com> <20020704205410.GA8220@danisch.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20020704205410.GA8220@danisch.de>
User-Agent: Mutt/1.3.28i
X-Accept-Language: en,la,eo
X-Broadcast-Flag: 1
X-Consensus-at-Lawyerpoint: http://bpdg.blogs.eff.org/
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-Unsubscription-Info: http://einstein.ssz.com/cdr
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Acceptable-Languages: English, Russian, German, French, Spanish
Old-Subject: Re: Ross's TCPA paper
Subject:  Re: Ross's TCPA paper
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 3558
Lines: 73


Hadmut Danisch writes:

> You won't be able to enter a simple shell script through the
> keyboard. If so, you could simple print protected files as
> a hexdump or use the screen (or maybe the sound device or any
> LED) as a serial interface.
> 
> Since you could use the keyboard to enter a non-certified
> program, the keyboard is to be considered as a nontrusted
> device. This means that you either
> 
> * have to use a certified keyboard which doesn't let 
>   you enter bad programs
> 
> * don't have a keyboard at all
> 
> * or are not able to use shell scripts (at least not in
>   trusted context). This means a 
>   strict separation between certified software and data.

The latter is closest to what's intended in Palladium.  Individual
programs using Palladium features are able to prevent one another from
reading their executing or stored state.  You can write your own
programs, but somebody else can also write programs which can process
data in a way that your programs can't interact with.

The Palladium security model and features are different from Unix, but
you can imagine by rough analogy a Unix implementation on a system
with protected memory.  Every process can have its own virtual memory
space, read and write files, interact with the user, etc.  But
normally a program can't read another program's memory without the
other program's permission.

The analogy starts to break down, though: in Unix a process running as
the superuser or code running in kernel mode may be able to ignore
memory protection and monitor or control an arbitrary process.  In
Palladium, if a system is started in a trusted mode, not even the OS
kernel will have access to all system resources.  That limitation
doesn't stop you from writing your own application software or scripts.

Interestingly, Palladium and TCPA both allow you to modify any part of
the software installed on your system (though not your hardware).  The
worst thing which can happen to you as a result is that the system
will know that it is no longer "trusted", or will otherwise be able to
recognize or take account of the changes you made.  In principle,
there's nothing wrong with running "untrusted"; particular applications
or services which relied on a trusted feature, including sealed
storage (see below), may fail to operate.

Palladium and TCPA both allow an application to make use of
hardware-based encryption and decryption in a scheme called "sealed
storage" which uses a hash of the running system's software as part of
the key.  One result of this is that, if you change relevant parts of
the software, the hardware will no longer be able to perform the
decryption step.  To oversimplify slightly, you could imagine that the
hardware uses the currently-running OS kernel's hash as part of this
key.  Then, if you change the kernel in any way (which you're
permitted to do), applications running under it will find that they're
no longer able to decrypt "sealed" files which were created under the
original kernel.  Rebooting with the original kernel will restore the
ability to decrypt, because the hash will again match the original
kernel's hash.

(I've been reading TCPA specs and recently met with some Microsoft
Palladium team members.  But I'm still learning about both systems and
may well have made some mistakes in my description.)

-- 
Seth Schoen
Staff Technologist                                schoen@eff.org
Electronic Frontier Foundation                    http://www.eff.org/
454 Shotwell Street, San Francisco, CA  94110     1 415 436 9333 x107

