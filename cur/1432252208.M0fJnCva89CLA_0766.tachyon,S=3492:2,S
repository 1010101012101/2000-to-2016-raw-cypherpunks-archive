From owner-cypherpunks-outgoing@ssz.com  Wed Nov  8 08:54:42 2000
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id IAA13629
	for <kwantam@positron.mit.edu>; Wed, 8 Nov 2000 08:54:42 -0500
Received: from einstein.ssz.com (mdom@einstein.ssz.com [204.96.2.99])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id IAA14484
	for <rsw@MIT.EDU>; Wed, 8 Nov 2000 08:54:40 -0500 (EST)
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id HAA02309
	for cypherpunks-outgoing; Wed, 8 Nov 2000 07:53:14 -0600
Received: from kruuna.Helsinki.FI (root@kruuna.helsinki.fi [128.214.205.14])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id HAA02305
	for <cypherpunks@EINSTEIN.ssz.com>; Wed, 8 Nov 2000 07:53:10 -0600
Received: from localhost (ssyreeni@localhost)
	by kruuna.Helsinki.FI (8.10.1/8.10.1) with ESMTP id eA8D55Q05427
	for <cypherpunks@EINSTEIN.ssz.com>; Wed, 8 Nov 2000 15:05:05 +0200 (EET)
X-Authentication-Warning: kruuna.Helsinki.FI: ssyreeni owned process doing -bs
Date: Wed, 8 Nov 2000 15:05:05 +0200 (EET)
From: Sampo A Syreeni <ssyreeni@cc.helsinki.fi>
To: cypherpunks@einstein.ssz.com
Subject: CDR: Re: Minesweeper and defeating modern encryption technology
In-Reply-To: <Pine.LNX.3.96.1001104171216.295j-100000@einstein.ssz.com>
Message-ID: <Pine.SOL.4.20.0011081442090.25671-100000@kruuna.Helsinki.FI>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=ISO-8859-1
Content-Transfer-Encoding: 8BIT
Sender: owner-cypherpunks@ssz.com
Precedence: bulk
Reply-To: cypherpunks@ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Language: English, Russian, German
Status: O
Content-Length: 1742
Lines: 29

On Sat, 4 Nov 2000, Jim Choate wrote:

>As to Cooks assertion, it is possible to create logical statements which
>are irresolvable, irrespective of time or algorithm. So it is clear that
>there are in fact statements which can't be resolved so there must be at
>least some class of NP that are not resolvable to P.

You are talking about two very different problems, here. Gödel/Turing sorta
things are about problems where quantifiers over an infinite set are
permitted. Gödel is about verifying a given formula for all natural numbers
(a countable infinity), Turing about deciding whether any given algorithm
(there are a countable infinity of these) halts. An instance of SAT, on the
other hand, quantifies only over a sequence of fixed length vectors of truth
values (the list of all the possible combinations of truth values to be
assigned to the variables of the boolean function being tested). If you
think of these vectors as binary words, there are always a finite number of
these. This number is exponential in the number of variables of the
function. So a valid exp-time algorithm to solve SAT is to list all the
possible combinations of input values to the multivariate boolean formula,
feed them through it (I seem to think that around n^2 time is needed for
this) and see whether one of them really satistified it.

The latter strategy does not work for Turing/Gödel-kinda situations because
the computation would not halt, regardless of the function chosen. It is 
easy to see that the logic structure of Gödel's and Turing's theorem is far
deeper than that of SAT, while SAT is the only one which admits any kind of
computational complexity analysis.

Sampo Syreeni <decoy@iki.fi>, aka decoy, student/math/Helsinki university

