From owner-cypherpunks@jfet.org  Mon Nov 14 09:56:13 2005
Return-Path: <owner-cypherpunks@jfet.org>
Received: from proton.jfet.org (localhost [127.0.0.1])
	by proton.jfet.org (8.13.5/8.13.5/Debian-3) with ESMTP id jAEEtwZg020086
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Mon, 14 Nov 2005 09:55:59 -0500
Received: (from majordomo@localhost)
	by proton.jfet.org (8.13.5/8.13.5/Submit) id jAEEtwhd020085
	for cypherpunks-outgoing; Mon, 14 Nov 2005 09:55:58 -0500
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain; 	charset="iso-8859-1"
Subject: RE: On Digital Cash-like Payment Systems
Date: Mon, 14 Nov 2005 09:47:42 -0500
Message-ID: <9DC3EBEFB87A97498A7D25F130DE27E4206404@ohthree.jjj-i.com>
Thread-Topic: On Digital Cash-like Payment Systems
Thread-Index: AcXpJ3ucIWxE9JsgTv29eKqXsErzBwAAnPcg
From: "Whyte, William" <WWhyte@ntru.com>
To: "Travis H." <solinym@gmail.com>, "cyphrpunk" <cyphrpunk@gmail.com>
Cc: <cryptography@metzdowd.com>, <cypherpunks@jfet.org>
Content-Transfer-Encoding: 7bit
X-MIME-Autoconverted: from quoted-printable to 8bit by proton.jfet.org
  id jAEEtvAw020050
Sender: owner-cypherpunks@jfet.org
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 1311
Lines: 29

> > Don't ever encrypt the same message twice that way, or you're likely to
> > fall to a common modulus attack, I believe.
> 
> Looks like it (common modulus attack involves same n, 
> different (e,d) pairs).
> 
> However, you're likely to be picking a random symmetric key as the
> "message", and Schneier even suggests picking a random r in Z_n and
> encrypting hash(r) as the symmetric key.
> 
> More generally, I wonder about salting all operations to prevent using
> the same value more than once.  It seems like it's generally a bad
> idea to reuse values, as a heuristic, and applying some kind of
> uniquification operation to everything, just as it's a good idea to
> pad/frame values in such a way that the output of one stage cannot be
> used in another stage of the same protocol.

I forget the beginning of this conversation... but if you're
salting all public-key encryption operations you may as well
just use a standard RSA encryption scheme, such as OAEP or
RSA-KEM. OAEP is specified in PKCS#1, available from 
http://www.rsasecurity.com/rsalabs/node.asp?id=2125; it's well-
studied and has a proof of security, and should certainly be
used in preference to any home-grown system.

If you were talking about salting something other than public
key operations, accept my apologies...

William

