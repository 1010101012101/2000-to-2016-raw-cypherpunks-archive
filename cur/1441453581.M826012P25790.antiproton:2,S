Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t85BjJHP025756;
	Sat, 5 Sep 2015 07:45:23 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=auckland.ac.nz header.i=@auckland.ac.nz header.b=LRRtGWQZ;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: from mx4.auckland.ac.nz (mx4.auckland.ac.nz [130.216.125.248])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t85BjFf4025748
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES256-SHA bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Sat, 5 Sep 2015 07:45:17 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
 d=auckland.ac.nz; i=@auckland.ac.nz; q=dns/txt; s=mail;
 t=1441453517; x=1472989517;
 h=from:to:cc:subject:date:message-id:references:
 in-reply-to:content-transfer-encoding:mime-version;
 bh=FXFLHovG4vKGmOqa8fqVaEFWNKKn85xiCJ1eEypGtTY=;
 b=LRRtGWQZVj2isuGRe8xFZCG3VnxOYuxqe4Enxse/kuDv/ka1bXH1qs6g
 kzSvu3ubTRnKi+Dyfo/kYJDopzNW5r5X33zv4xF1TEVm/S7Rs9OkOBkGM
 gxqmJ38RBbq/mV/H1mSDupgWsFf3ZApauUAtjfCugvzdCE7tbgaw/hWEC
 v9zV96dKdR3mQRuRG117nCuaIkGv5oc2UlzzUWc5QObP6b58iOa8ifish
 ObZWj3oF522ZuH/Ww+B13+9i2QwMRvU4o/VBIqNev7mOvLCMUY+CTchG2
 2lrj19FCerhupGo38Ub991NWslRxDergbGCVKxra0lMrsnpAm21CrKxWI A==;
X-IronPort-AV: E=Sophos;i="5.17,474,1437393600"; d="scan'208";a="39600579"
X-Ironport-HAT: MAIL-SERVERS - $RELAYED
X-Ironport-Source: 130.216.4.112 - Outgoing - Outgoing
Received: from 409d112pmoo044.uoa.auckland.ac.nz (HELO
 uxchange10-fe1.UoA.auckland.ac.nz) ([130.216.4.112])
 by mx4-int.auckland.ac.nz with ESMTP/TLS/AES128-SHA; 05 Sep 2015 23:45:08 +1200
Received: from UXCN10-5.UoA.auckland.ac.nz ([169.254.5.48]) by
 uxchange10-fe1.UoA.auckland.ac.nz ([130.216.4.112]) with mapi id
 14.03.0174.001; Sat, 5 Sep 2015 23:45:08 +1200
From: Peter Gutmann <pgut001@cs.auckland.ac.nz>
To: Alfonso De Gregorio <alfonso.degregorio@gmail.com>,
        Georgi Guninski
 <guninski@guninski.com>
Subject: RE: Possible crypto backdoor in RFC-2631 Diffie-Hellman Key
 Agreement Method
Thread-Topic: Possible crypto backdoor in RFC-2631 Diffie-Hellman Key
 Agreement Method
Thread-Index: AQHQ5jxeQUhJkThzcEq0dJQlGdFQCJ4qsjpugACO0YCAADStgIAACWcAgAEig4CAABNOgIAACJKAgAAJUoCAAQyn8A==
Date: Sat, 5 Sep 2015 11:45:07 +0000
Message-ID: <9A043F3CF02CD34C8E74AC1594475C73F4AF36EE@uxcn10-5.UoA.auckland.ac.nz>
References: <20150903112721.GA2732@sivokote.iziade.m$>
 <9A043F3CF02CD34C8E74AC1594475C73F4AF0463@uxcn10-5.UoA.auckland.ac.nz>
 <20150904082605.GA2705@sivokote.iziade.m$>
 <20150904113437.GB2705@sivokote.iziade.m$>
 <20150904120816.GC2705@sivokote.iziade.m$>
 <20150905052803.GA2661@sivokote.iziade.m$>
 <CA+bTbPDoQi030MN4j8E4fmx_KOQP48xsbJjGM4X2rk=_E3zgZQ@mail.gmail.com>
 <20150905070749.GC2661@sivokote.iziade.m$>,
 <CA+bTbPCHKm_n8ei9qw6yx=VVbHh+z8jQ1GNYa+gs6ZLC0AfxyQ@mail.gmail.com>
In-Reply-To: <CA+bTbPCHKm_n8ei9qw6yx=VVbHh+z8jQ1GNYa+gs6ZLC0AfxyQ@mail.gmail.com>
Accept-Language: en-NZ, en-GB, en-US
Content-Language: en-NZ
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [130.216.158.4]
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by antiproton.jfet.org id
 t85BjFf4025748
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 49

Alfonso De Gregorio <alfonso.degregorio@gmail.com> writes:

>Sure, the questions are: What is the origin of the current wording of the
>standard, that opens an avenue for lax checks for group parameters? Or, if,
>as you correctly pointed out, an implementation MAY NOT check group
>parameters, which entity deserves credit for it?

You need to go back to the original source of all the DLP stuff, which is DSA
/ FIPS 186.  Now that didn't require any validation of anything until FIPS
186-3 came along in June 2009, and that in turn points to SP 800-89, which has
a section 4 "Assurance of Domain Parameter Validity".  This one gets really
complicated because you can get the domain parameters from all over the place
(generated yourself, provided for you by a third party, found at the bottom of
a locked filing cabinet stuck in a disused lavatory with a sign on the door
saying 'Beware of the Leopard', ...).

So if you generate them yourself, you're OK.  If you get them from a CA then
you don't need to care because if the CA wants to attack you then they can
just issue a forged cert in your name and don't need to worry about
backdooring the params (in any case using shared params is a bad idea because
they allow forgery of signatures on certificates. Suppose that the certificate
contains a copy of the certificate signer's DSA parameters, and the verifier
of the certificate has a copy of the signer's public key but not the signer's
DSA parameters (which are shared with other keys). If the verifier uses the
DSA parameters from the certificate along with the signer's public key to
verify the signature on the certificate, then an attacker can create bogus
certificates by choosing a random u and finding its inverse v modulo q (uv is
congruent to 1 modulo q).  Then take the certificate signer's public key g^x
and compute g' = (g^x)^u. Then g'^v = g^x.  Using the DSA parameters p, q, g',
the signer's public key corresponds to the private key v, which the attacker
knows.  The attacker can then create a bogus certificate, put parameters (p,
q, g') in it, and sign it with the DSA private key v to create an apparently
valid certificate).

Finally, if you get them from the disused lavatory then you deserve everything
you get^H^H^H^H^H^H^H^HFIPS 186-3 has validation requirements that use the
optional j and seed parameters, but I've never seen them used anywhere so even
though the validation requirements exist, you can't apply them.

The real question though is, why would anyone use parameters they didn't
generate themselves?  All DSA implementations I've seen (apart from some
experimental code from the 1990s, which also encoded the j/seed values)
generate all the parameters themselves, it's not like ECDSA where everyone
ends up using some shared values that a "trusted" external party provides
them.

Peter.

