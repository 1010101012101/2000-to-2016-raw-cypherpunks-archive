From owner-cryptography+rsw=mit.edu@wasabisystems.com  Wed Sep 18 15:00:22 2002
Return-Path: <owner-cryptography+rsw=mit.edu@wasabisystems.com>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g8IJ0KG16051
	for <rsw@opamp.org>; Wed, 18 Sep 2002 15:00:21 -0400
Received: from lion.ninthwonder.com (lion.ninthwonder.com [151.199.66.147])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id PAA29452
	for <rsw@mit.edu>; Wed, 18 Sep 2002 15:00:19 -0400 (EDT)
Received: by lion.ninthwonder.com (Postfix, from userid 96)
	id D57B43073C; Wed, 18 Sep 2002 14:53:06 -0400 (EDT)
Delivered-To: cryptography@wasabisystems.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by lion.ninthwonder.com (Postfix) with ESMTP id 66FAB3070B
	for <cryptography@wasabisystems.com>; Wed, 18 Sep 2002 14:53:05 -0400 (EDT)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id E32ECD9808; Wed, 18 Sep 2002 14:53:04 -0400 (EDT)
Received: from hotmail.com (dav67.sea1.hotmail.com [207.68.162.202])
	by lion.ninthwonder.com (Postfix) with ESMTP id 4594C3070B
	for <cryptography@wasabisystems.com>; Wed, 18 Sep 2002 12:16:33 -0400 (EDT)
Received: from mail pickup service by hotmail.com with Microsoft SMTPSVC;
	 Wed, 18 Sep 2002 09:16:32 -0700
X-Originating-IP: [208.12.26.90]
From: "Peter" <PeterNBiddle@hotmail.com>
To: "Nathaniel Daw" <daw@cs.cmu.edu>, <cryptography@wasabisystems.com>
Cc: "Cypherpunks" <cypherpunks@minder.net>
References: <Pine.LNX.4.33L.0209171754150.9111-100000@gs120.sp.cs.cmu.edu>
Subject: Re: but _is_ the pentium securely virtualizable? (Re: Cryptogram: Palladium Only for DRM)
Date: Wed, 18 Sep 2002 09:15:12 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
Message-ID: <DAV67oLoINLEjQT9wnY00010011@hotmail.com>
X-OriginalArrivalTime: 18 Sep 2002 16:16:32.0380 (UTC) FILETIME=[C0932BC0:01C25F2E]
Sender: owner-cryptography@wasabisystems.com
Precedence: bulk
Status: O
Content-Length: 3931
Lines: 83

The issue isn't whether or not the architeture as it existed in the past is
or isn't able to securely isolate user and kernel mode processes in an OS
which may not exist. If an OS can be written to securely isolate user and
kernel mode processes then I am sure that someone clever will find a way to
use it to do such a thing and may have an excellent security solution for
that OS which runs on current chips. I wish whomever tries to do this the
best of luck.

[Moderator's Obnoxious Note: I believe such an operating system is
called "Unix"...]

In Windows there are a number of reasons we can't use the current isolation
model for absolute enforcement of isolation. The biggest business reasons
are backwards compatibility for applications and kernel mode drivers, both
of which count on the current architecture and all of it's strengths (and
quirks). As we have stated before, we designed Pd with the assumption that
we couldn't break apps and we couldn't break device drivers.

Arbitrary Windows code which runs today must continue to run and function in
Pd as it does today, and yet Pd must still be able to provde protection.
Someone with a niche OS who doesn't care about breaking things may use a
different approach - they don't have gazllions of lines of 3rd party code
counting on version to version compatibility. We do.

>From a technical perspective, there are also a number of reasons that the
current isolation models don't work My guess is that a hard core Linux or
Unix kernel dev could probably explain this just as well as MS could,
however I will see if I can get someone on our end to outline the issues as
we see them.

I think that you are talking about separating user-mode processes in VMWare
(right?). What about SCSI controllers? The BIOS? Option ROMS? Kernel mode
device drivers? DMA devices? Random kernel foo.sys? What if the attack uses
SMM to attack VMWare itself? How does VMWare prove that the environment it
inherited when it booted is valid?

Lastly - Pd is only partially about process isolation. Nothing in the
current architecture even attmempts to address SW attestation, delegated
evaluation, authentication, or the sealing of data.

P


----- Original Message -----
From: "Nathaniel Daw" <daw@cs.cmu.edu>
To: <cryptography@wasabisystems.com>
Cc: "Cypherpunks" <cypherpunks@minder.net>
Sent: Tuesday, September 17, 2002 3:01 PM
Subject: Re: but _is_ the pentium securely virtualizable? (Re: Cryptogram:
Palladium Only for DRM)


>
> > The fact that VMWare works just means they used some tricks to make it
> > practically virtualize some common OSes, not that it is no longer
> > possible to write malicious software to run as user or privileged
> > level inside the guest OS and have it escape the virtualization.
>
> I spoke with someone who had evaluated the appropriateness of the VMWare
> internals for security sandboxing with respect to just this point. He
> seemed to believe that it is simply not possible for processes in the
> guest to escape the sandbox (perhaps, in light of the paper you
> cite, this signals inefficiencies in VMWare). Other people on this list
> were, I believe, involved in porting VMWare to be hosted under the BSD
> architecture and may be able to speak further about this. In any case,
> the broader point that has been made repeatedly is that even if the
> Pentium is not efficiently, securely virtualizable due to quirks in its
> instruction set, clearly there are architectures which are but which avoid
> the objectionable, user-hostile, aspects of the Pd scheme.
>
> n
>
>
>
> ---------------------------------------------------------------------
> The Cryptography Mailing List
> Unsubscribe by sending "unsubscribe cryptography" to
majordomo@wasabisystems.com
>

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@wasabisystems.com

