From owner-cryptography+rsw=mit.edu@metzdowd.com  Tue Jun 10 09:06:42 2003
Return-Path: <owner-cryptography+rsw=mit.edu@metzdowd.com>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h5AD6g622925
	for <rsw@opamp.org>; Tue, 10 Jun 2003 09:06:42 -0400
Received: from red.metdow.com (72.muf123.nycm.n54ny05r18.dsl.att.net [12.103.123.72])
	by fort-point-station.mit.edu (8.12.4/8.9.2) with ESMTP id h5AD6gSC014065
	for <rsw@mit.edu>; Tue, 10 Jun 2003 09:06:42 -0400 (EDT)
Received: by red.metdow.com (Postfix, from userid 1002)
	id 609AC182FA0; Tue, 10 Jun 2003 13:02:24 +0000 (UTC)
X-Original-To: cryptography@metzdowd.com
Delivered-To: cryptography@metzdowd.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by red.metdow.com (Postfix) with ESMTP id D0B8B182F59
	for <cryptography@metzdowd.com>; Tue, 10 Jun 2003 13:02:22 +0000 (UTC)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id 0BFFDD97C5; Tue, 10 Jun 2003 09:02:20 -0400 (EDT)
X-Original-To: cryptography@metzdowd.com
Received: from mail.zedz.net (outpost.zedz.net [194.109.206.210])
	by red.metdow.com (Postfix) with ESMTP id A34EE182F8C
	for <cryptography@metzdowd.com>; Tue, 10 Jun 2003 05:00:28 +0000 (UTC)
Received: from localhost (outpost.zedz.net [127.0.0.1])
	by mail.zedz.net (Postfix) with ESMTP
	id 512AB5F20C; Tue, 10 Jun 2003 07:00:27 +0200 (CEST)
Received: by mail.zedz.net (Postfix, from userid 1009)
	id 09EEF5F247; Tue, 10 Jun 2003 07:00:08 +0200 (CEST)
From: Nomen Nescio <nobody@dizum.com>
Comments: This message did not originate from the Sender address above.
	It was remailed automatically by anonymizing remailer software.
	Please report problems or inappropriate use to the
	remailer administrator at <abuse@dizum.com>.
To: cryptography@metzdowd.com, cypherpunks@lne.com
Subject: Re: An attack on paypal --> secure UI for browsers
Message-ID: <29fb8c384fa72cbe9f6bbb0ca30c918a@dizum.com>
Date: Tue, 10 Jun 2003 07:00:08 +0200 (CEST)
X-Virus-Scanned: by outpost.zedz.net (amavis-20020300)
Sender: owner-cryptography@metzdowd.com
Precedence: bulk
Status: O
Content-Length: 2869
Lines: 55

Tim Dierks wrote:
>  - Get browser makers to design better ways to communicate to users that 
> UI elements can be trusted. For example, a proposal I saw recently which 
> would have the OS decorate the borders of "trusted" windows with facts or 
> images that an attacker wouldn't be able to predict: the name of your 
> dog, or whatever. (Sorry, can't locate a link right now, but I'd 
> appreciate one.)

It was none other than Microsoft's NGSCB, nee Palladium.  See
http://news.com.com/2100-1012_3-1000584.html?tag=fd_top:

   NEW ORLEANS--Microsoft is trying to make security obvious.

   The software giant plans to visually alter document or application
   windows that contain private information that's secured through
   Microsoft's Next-Generation Secure Computing Base (NGSCB), formerly
   known as Palladium. Secure windows will look different than regular,
   unsecured windows in order to remind users that they are looking
   at confidential material, Peter Biddle, product unit manager for
   Microsoft, said Thursday at the Windows Hardware Engineering Conference
   (WinHEC) here.
   ...
   The border of a secured page may contain information--such as the
   names of all the dogs that someone has ever owned--to make the data
   instantly recognizable as sound to the individual owner, as well as
   difficult to replicate. A hacker can create a spoof page with dogs'
   names running along the border but, in all likelihood, not one reading
   "Buffy, Skip and Jack Daniels--and in that order," Biddle said.
   ...
   Information on secured windows will vanish if another window is placed
   on top of it or shifted to the background. Erasing the information
   will prevent certain types of attacks and remind people that they're
   dealing with confidential material, Biddle said.

   When the secure window returns to the top of the stack, the information
   will reappear, he said.

I don't see how this is going to work.  The concept seems to assume
that there is a distinction between "trusted" and "untrusted" programs.
But in the NGSCB architecture, Nexus Computing Agents (NCAs) can be
written by anyone.  If you've loaded a Trojan application onto your
machine, it can create an NCA, which would presumably be eligible to
put up a "trusted" window.

So either you have to configure a different list of doggie names for
every NCA (one for your banking program, one for Media Player, one for
each online game you play, etc.), or else each NCA gets access to your
Secret Master List of Doggie Names.  The first possibility is unmanageable
and the second means that the trustedness of the window is meaningless.

So what good is this?  What problem does it solve?

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@metzdowd.com

