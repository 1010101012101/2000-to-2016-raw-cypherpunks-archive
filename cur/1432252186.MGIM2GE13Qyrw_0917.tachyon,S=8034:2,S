From owner-cypherpunks@Algebra.COM  Mon Jan 15 09:22:00 2001
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id JAA11707
	for <kwantam@positron.mit.edu>; Mon, 15 Jan 2001 09:21:55 -0500
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id JAA10077
	for <rsw@mit.edu>; Mon, 15 Jan 2001 09:21:55 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f0FEB6s31849
	for cypherpunks-outgoing; Mon, 15 Jan 2001 08:11:06 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f0FEB5m31835
	for <cypherpunks@algebra.com>; Mon, 15 Jan 2001 08:11:05 -0600
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id GAA10911; Mon, 15 Jan 2001 06:11:01 -0800 (PST)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id GAA10907 for <cpunks@sirius.infonex.com>; Mon, 15 Jan 2001 06:10:50 -0800 (PST)
Received: from Mailserver-4.ricardo.de (root@henry.ricardo.de [62.197.4.171]) by cyberpass.net (8.8.8/8.7.3) with ESMTP id GAA01338 for <cypherpunks@cyberpass.net>; Mon, 15 Jan 2001 06:13:24 -0800 (PST)
Received: from exchange.office.ricardo.de (stargate.ricardo.de [62.197.4.1]) 
          by Mailserver-4.ricardo.de (8.8.8/HENRY-frank-1.4) with ESMTP 
          id PAA22625; Mon, 15 Jan 2001 15:10:16 +0100
Received: from ricardo.de (www.lemuria.org [62.197.4.112]) by exchange.office.ricardo.de with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2650.21)
	id C7D95S26; Mon, 15 Jan 2001 15:10:16 +0100
Message-ID: <3A63042E.F2A6CCA@ricardo.de>
Date: Mon, 15 Jan 2001 15:07:42 +0100
From: Tom <tom@ricardo.de>
X-Mailer: Mozilla 4.61 [en] (X11; I; Linux 2.2.16 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: Jim Choate <ravage@EINSTEIN.ssz.com>, cypherpunks@cyberpass.net
Old-Subject: authenticating Real Life(tm)  [was: More on G3s]
References: <Pine.LNX.3.96.1010112184700.446Q-100000@einstein.ssz.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Subject:  authenticating Real Life(tm)  [was: More on G3s]
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 5444
Lines: 141



ok, let's try to tackle this problem seriously, for the crypto value (or
lack thereof):



Jim Choate wrote:
> > > What makes 'your friend' an authority?
> >
> > he had the weapon in question in hand pretty much every day for several
> > years.
> 
> Yeah, says who? Does your friend even exist? Even if he does how does one
> go about proving his assertions? And why should we trust whatever
> 'reference' he passes us to?

that is a different problem that has, in fact, been answered by me
below.




> Again, you're asking for 'trust' based on authority. How would one go
> about 'authenticating' who you are? If I 'trusted' you why would I want to
> authenticate you?

you will have to trust something. then you use that something to verify
something else, that is what:

> > web-of-trust.

means.

> 
> Which doesn't work since I don't already know you. If I have trust why am
> I using the encryption? How do I know that the key you gave Fred, and that
> Fred then gave me is the key you gave Fred or the key Fred gave me?

see above. or check what web-of-trust means. for for this problem, we
have the following steps (in no specific order):

1.) verify that my friend is an authority on the issue
2.) verify that my friend actually exists
3.) verify the information exchange between you and and my friend

everything else is parts of that. for example, my person only enters the
picture as a middle man between you and my friend. if you trust me
(which you don't) then I can make steps 1 and 2 for you and all that's
left is to make sure that you receive the correct information from me,
which could be solved by signing the mail cryptographically.

since you don't trust me, you will have to either establish trust to me,
or proceed to verify these steps on your own.



> > I will authenticate my friend by having a face-to-face
> > meeting.
> 
> Really? This is based upon your assumption that the person you are meeting
> is the person who you think you are. But how do you know a MITM attack
> wasn't executed prior to your first meeting? Have you known this person
> for many years, intimitely involved in their life? If you only know them
> from the occassional party, or weekend football game then you could be
> scammed.

I've known this person for over 10 years. I'm pretty confident that any
attempts to replace him with someone else in such a way as to fool me
would be several orders of magnitude more expensive than the gain is
worth.

how you do this depends mostly on your threat-model. for this example,
the threat is small - it's not like any TLA would throw a couple million
dollars at this in order to fool you, right? ergo I can assume that a
replacement by someone who can fool me for several hours is extremely
unlikely.



> > you can authenticate my words via PGP if you want to, I can
> > sign the mail.
> 
> Which means nothing, your PGP key is no more trustworthy than your words.

dumb jim. :)
it's not meant to be any more trustworthy than my words. in fact, it's
sole purpose (in this case) is to ensure that my words are really my
words. it's part of step 3 above.



> > now as to how to authenticate whether or not my friend is what I claim
> > he is - well, I'm sure he has the appropriate documents that could be
> > checked for forgery, etc. if you insist (and pay the costs) that could
> > surely be arranged.
> 
> Which again proves nothing. I have no way to tie a packet of documents to
> a person, even if they had a photograph on them. Even if they were stamped
> with an official seal. The only way they would prove anything is if I
> authenticated not only their source but the process by which they were
> generated.

if they are stamped with an official seal (which in the case of the
military I'm quite sure they are) then you can be sure that any of 3
cases is true:

a) they are valid
b) the government (or other place of origin of the seals) is in on the
conspiracy
c) a forger with more skill than your forgery-detection method is in on
the conspiracy

in the case of a question about ammunition, both b) and c) are highly
unlikely. again, you have applied the highest possible threat model to a
case where even a medium one would be paranoia.



> Bottem line, there is no fundamentally functional authentication protocol.
> They all require a level of trust that is not appropriate if one is
> already concerned enought to use encryption.

wrong. we can solve your problem IF you present us with a list of those
things that you DO trust. from there on, trust can be extended. e.g. if
you trust your own eyes, then visiting both Tim and me can assure you
that there are two DIFFERENT entities claiming to be Tim and Tom. you
can then verify whether they really are what they claim, the method of
verification again depending on what instances you trust. for example,
if you trust the german government to keep correct records, you could
check those on me (birth certificate, etc) to verify that I am who I
claim to be.

you have also got to take the threat model into account. in the worst
case, there is no trust because you're living in The Matrix and what you
see with your own eyes doesn't even exist.

in the end, trust and verification aren't binary if you meet real life.
you can never be 100% sure that I am who I claim to be. however, you can
gradually increase your verification/trust factor by any of the
processes outlined above and/or an unlimited number of other ones.

