From cypherpunks-bounces@cpunks.org  Mon Nov 11 11:43:54 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rABGh5Ub011299;
	Mon, 11 Nov 2013 11:43:11 -0500
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=UJ7Gq3gg;
	dkim-adsp=none (insecure policy); dkim-atps=neutral
Received: from mail-wi0-f181.google.com (mail-wi0-f181.google.com
 [209.85.212.181])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rABGh1XU011293
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Mon, 11 Nov 2013 11:43:03 -0500
Received: by mail-wi0-f181.google.com with SMTP id m19so2454839wiv.14
 for <cypherpunks@cpunks.org>; Mon, 11 Nov 2013 08:42:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :cc:content-type;
 bh=OR4U/3gSDC/sIvzpXnkrO27TcPJLyUMHwa1tdZtp+kM=;
 b=UJ7Gq3ggROPJXGibxFFsMBOrlLLNc0dSRZrDuQbZDB6aQN9iUhiouRHlN5MNeJ3DxS
 /zoo4OnsZ8UP924zbTUCJ6k4i+hYZuMnYEXa2gwlUdxxN6d4zhA3T5mF+EaXIDyolS6a
 BH9Jn2vhPP0SaSHKaVUGR7dQVoUNgOaSTkOo64EqFDi1Sxi9fz5gLcOARkZjQJVr5ySV
 W6HuiNC5MKH5Kuo0uF69zIp3d5ZlpfeK1cxCkDlXMUSXWJdhfkYe1BC7Yrhc1v24IQ06
 sCOFcppSehL+WtecO3vTZ1aFQs9cI+iBjPMyYAmz0bqhiAfGZ0n50VjMpdb94DMO3M9P
 1mfw==
MIME-Version: 1.0
X-Received: by 10.194.122.99 with SMTP id lr3mr22651156wjb.21.1384188174674;
 Mon, 11 Nov 2013 08:42:54 -0800 (PST)
Received: by 10.217.91.72 with HTTP; Mon, 11 Nov 2013 08:42:54 -0800 (PST)
In-Reply-To: <20131110085401.GA18544@hexapodia.org>
References: <527F0B61.7060700@comcast.net>
 <20131110085401.GA18544@hexapodia.org>
Date: Mon, 11 Nov 2013 17:42:54 +0100
Message-ID: <CAK9dnSws6a9zeQLJbVzhjE=dsspdr8dNYgG3_H2MTA2DOX9-QA@mail.gmail.com>
Subject: Re: NIST Randomness Beacon
From: CodesInChaos <codesinchaos@gmail.com>
To: Andy Isaacson <adi@hexapodia.org>
Content-Type: text/plain; charset=UTF-8
Cc: cpunks <cypherpunks@cpunks.org>,
        Cryptography Mailing List <cryptography@metzdowd.com>,
        "cryptography@randombit.net" <cryptography@randombit.net>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 642
Lines: 14

On Sun, Nov 10, 2013 at 9:54 AM, Andy Isaacson <adi@hexapodia.org> wrote:
> For example, suppose you use the low bits of the bitcoin blockchain
> hash.  An attacker with 10% of the hash power could probabilistically
> attack such a system by chosing blocks with a specific value in those
> bits;

This can be avoided by running a sequential computation based on that
hash. For example
by hashing it 2^40 times. Obvious downside is that verifying that the
computation was performed
correctly is just as expensive (but parallelizable).

Perhaps there is a function that's sequential and slow in one
direction and fast in the reverse direction.

