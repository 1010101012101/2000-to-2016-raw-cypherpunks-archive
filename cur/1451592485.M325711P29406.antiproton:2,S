Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id tBVK77nm029344;
	Thu, 31 Dec 2015 15:07:11 -0500
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=TrJE0xPe;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: from mail-yk0-f169.google.com (mail-yk0-f169.google.com
 [209.85.160.169])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id tBVK73hx029336
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 31 Dec 2015 15:07:04 -0500
Received: by mail-yk0-f169.google.com with SMTP id x67so185948616ykd.2
 for <cypherpunks@cpunks.org>; Thu, 31 Dec 2015 12:07:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:from:date:message-id:subject:to
 :cc:content-type;
 bh=AxRzGRuv19wP7FYLGz94uJ0YZEoa1DIfRABHiZHUU9A=;
 b=TrJE0xPeLxrziqqyjSH3pb3cSzYcmDx2pgQFoww9fkJyguOCs13lW5QDDgMRfNJf4Q
 A/sJbbH670cG7r97Aa542uW30R/i/f5+bv8QZJJU5dvHsXhA17KWihhrP5RbBm26uj2D
 XQQOgszEFrK8CSyiiYuxZjkWrpUaayv1daV/NeE6i43KRjRx1qxW7pSiPpAzhV36o2A5
 A/KLmPzXwSnSj5FR6FYcUheXRqRshYOrKE0WjzF4ehk1a2fqAmJBVI87tofCA3WaHq0d
 VaAm6HfjIXBX/KTwlSDBMxGOHsO96WONByYaKE0fYaDT9i1PB0DEiF/draRcek9Mu+cY
 /+fg==
X-Received: by 10.129.155.14 with SMTP id s14mr51315573ywg.317.1451592417162; 
 Thu, 31 Dec 2015 12:06:57 -0800 (PST)
MIME-Version: 1.0
Received: by 10.37.102.66 with HTTP; Thu, 31 Dec 2015 12:06:37 -0800 (PST)
In-Reply-To: <20151231174114.GF19662@nl.grid.coop>
References: <CAJVRA1R=Rj0-VYB4midZMBu-r1=ifdEEoh+C9Nh9vTe=aaTTwA@mail.gmail.com>
 <CAJVRA1TnQy0XGz9kFuA9q9NdavLkFSRLMMbMGx8m5KuYQ+tqXg@mail.gmail.com>
 <20151231094155.GA2515@sivokote.iziade.m$>
 <CAJVRA1RX9kZx7ks1=cp3LDVm3DN-UcaFCaZM=5N0sdQLmgaLXQ@mail.gmail.com>
 <20151231174114.GF19662@nl.grid.coop>
From: Travis Biehn <tbiehn@gmail.com>
Date: Thu, 31 Dec 2015 15:06:37 -0500
Message-ID: <CAKtE3zcHyPH+a4oLbbY7Kecp-zbU-vg7fKL296mkcBbew1cYUA@mail.gmail.com>
Subject: Re: De-anonymizing Programmers via Code Stylometry
To: Troy Benjegerdes <hozer@hozed.org>
Content-Type: multipart/alternative; boundary=94eb2c0b8d04623e5705283732f9
Cc: Georgi Guninski <guninski@guninski.com>,
        "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 118

--94eb2c0b8d04623e5705283732f9
Content-Type: text/plain; charset=UTF-8

Decisions in application architecture, class, method/function, IPC/RPC &
other data-flow are fairly unique between coders. Also, very difficult to
loose those characteristics with obfuscation routines.

The generation of equivalent functional code, and higher-level
understanding of these concepts in code by the obfuscating engine would be
required. That's not trivial.

Of course, if you are unskilled, that is, if you don't use 'patterns' at
all - it is trivial to make you look like everyone else.

-Travis

On Thu, Dec 31, 2015 at 12:41 PM, Troy Benjegerdes <hozer@hozed.org> wrote:

> On Thu, Dec 31, 2015 at 04:49:53AM -0800, coderman wrote:
> > On 12/31/15, Georgi Guninski <guninski@guninski.com> wrote:
> > > ...
> > > Have they tried it on perl or assembler (or whitespace or brainfuck and
> > > other esoteric languages)?
> >
> > yes, even intentionally obfuscated disasm resistant mungifications of
> > compiled programs.
> >
> >
> > > Obfuscated perl appears hard (in case it significantly different than
> > > the preimage ;) )
> >
> > the key aspect is that it is well distinguished among obfuscated perl
> > programs written by other coders, especially architecturally complex
> > perl programs (of any variety)
>
> Seems like if you have code that is both complex and has good performance
> characteristics, then this leaves signals in the code that come from the
> collective experience of the neural network(s) that created said code.
>
> Obfuscation works by adding noise, and performance overhead.
>
> Now the real question on my mind is how much of what I see in bitcoin's
> main.cpp is obfuscation by Satoshi, or is someone going to run this
> analysis on code running at banks and figure out who he really is?
>



-- 
Twitter <https://twitter.com/tbiehn> | LinkedIn
<http://www.linkedin.com/in/travisbiehn> | GitHub <http://github.com/tbiehn>
| TravisBiehn.com <http://www.travisbiehn.com> | Google Plus
<https://plus.google.com/+TravisBiehn>

--94eb2c0b8d04623e5705283732f9
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Decisions in application architecture, class, method/funct=
ion, IPC/RPC &amp; other data-flow are fairly unique between coders. Also, =
very difficult to loose those characteristics with obfuscation routines.<di=
v><br></div><div>The generation of equivalent functional code, and higher-l=
evel understanding of these concepts in code by the obfuscating engine woul=
d be required. That&#39;s not trivial.</div><div><br></div><div>Of course, =
if you are unskilled, that is, if you don&#39;t use &#39;patterns&#39; at a=
ll - it is trivial to make you look like everyone else.</div><div><br></div=
><div>-Travis</div></div><div class=3D"gmail_extra"><br><div class=3D"gmail=
_quote">On Thu, Dec 31, 2015 at 12:41 PM, Troy Benjegerdes <span dir=3D"ltr=
">&lt;<a href=3D"mailto:hozer@hozed.org" target=3D"_blank">hozer@hozed.org<=
/a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:=
0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><span class=3D"">On=
 Thu, Dec 31, 2015 at 04:49:53AM -0800, coderman wrote:<br>
</span><span class=3D"">&gt; On 12/31/15, Georgi Guninski &lt;<a href=3D"ma=
ilto:guninski@guninski.com">guninski@guninski.com</a>&gt; wrote:<br>
&gt; &gt; ...<br>
&gt; &gt; Have they tried it on perl or assembler (or whitespace or brainfu=
ck and<br>
&gt; &gt; other esoteric languages)?<br>
&gt;<br>
&gt; yes, even intentionally obfuscated disasm resistant mungifications of<=
br>
&gt; compiled programs.<br>
&gt;<br>
&gt;<br>
&gt; &gt; Obfuscated perl appears hard (in case it significantly different =
than<br>
&gt; &gt; the preimage ;) )<br>
&gt;<br>
&gt; the key aspect is that it is well distinguished among obfuscated perl<=
br>
&gt; programs written by other coders, especially architecturally complex<b=
r>
&gt; perl programs (of any variety)<br>
<br>
</span>Seems like if you have code that is both complex and has good perfor=
mance<br>
characteristics, then this leaves signals in the code that come from the<br=
>
collective experience of the neural network(s) that created said code.<br>
<br>
Obfuscation works by adding noise, and performance overhead.<br>
<br>
Now the real question on my mind is how much of what I see in bitcoin&#39;s=
<br>
main.cpp is obfuscation by Satoshi, or is someone going to run this<br>
analysis on code running at banks and figure out who he really is?<br>
</blockquote></div><br><br clear=3D"all"><div><br></div>-- <br><div class=
=3D"gmail_signature"><div dir=3D"ltr"> <a href=3D"https://twitter.com/tbieh=
n" target=3D"_blank">Twitter</a> | <a href=3D"http://www.linkedin.com/in/tr=
avisbiehn" target=3D"_blank">LinkedIn</a> | <a href=3D"http://github.com/tb=
iehn" target=3D"_blank">GitHub</a> | <a href=3D"http://www.travisbiehn.com"=
 target=3D"_blank">TravisBiehn.com</a>=C2=A0| <a href=3D"https://plus.googl=
e.com/+TravisBiehn" target=3D"_blank">Google Plus</a><br></div></div>
</div>

--94eb2c0b8d04623e5705283732f9--

