From cypherpunks-bounces@cpunks.org  Sat Jan 11 11:03:15 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0BG2e5T028082;
	Sat, 11 Jan 2014 11:02:44 -0500
Received: from mail-02.1984.is (mail-02.1984.is [93.95.224.7])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0BG2a6X028078
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Sat, 11 Jan 2014 11:02:38 -0500
Received: from [79.97.71.97] (helo=[192.168.0.14])
 by mail-02.1984.is with esmtpsa (TLSv1:DHE-RSA-CAMELLIA256-SHA:256)
 (Exim 4.80) (envelope-from <cathalgarvey@cathalgarvey.me>)
 id 1W2111-0008TD-El
 for cypherpunks@cpunks.org; Sat, 11 Jan 2014 16:02:27 +0000
Message-ID: <52D16B05.9010203@cathalgarvey.me>
Date: Sat, 11 Jan 2014 16:02:13 +0000
From: Cathal Garvey <cathalgarvey@cathalgarvey.me>
User-Agent: Mozilla/5.0 (X11; Linux i686;
 rv:24.0) Gecko/20100101 Thunderbird/24.2.0
MIME-Version: 1.0
To: cypherpunks@cpunks.org
Subject: Re: Curve p25519 Replacements for GnuPG?(x2 now) Re: Pretty Curved
 Privacy.. ECC Curve p25519 util(Bernstein approved curve)
References: <52CFE3E9.5040400@cypherpunks.to> <20140110122133.GG7008@ctrlc.hu>
 <52CFEC67.9090706@cypherpunks.to> <3153198.N6KqkV6bkD@lap>
 <52D00724.1030302@cypherpunks.to> <20140110150209.GO7008@ctrlc.hu>
 <52D02F64.3010006@cypherpunks.to>
 <A946555C-7420-4EF8-B5F6-F841C7EC5621@gmail.com>
In-Reply-To: <A946555C-7420-4EF8-B5F6-F841C7EC5621@gmail.com>
X-Enigmail-Version: 1.6
Content-Type: multipart/signed; micalg=pgp-sha512;
 protocol="application/pgp-signature";
 boundary="chb0ELQ0TcUI9llcrFNJA8t3QUIgIPlqU"
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--chb0ELQ0TcUI9llcrFNJA8t3QUIgIPlqU
Content-Type: multipart/mixed;
 boundary="------------020101080606090404030000"

This is a multi-part message in MIME format.
--------------020101080606090404030000
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: quoted-printable

> - base 4096 (for UTF8 channels)

I may reveal some crippling ignorance, but:

UTF8 is an encoding system to allow for effectively infinite character
extensions in binary text data. The original forms of binary encoding
for text were merely to assign characters to a large segment of the 264
possibilities of a single byte; 2^8.

To account for the fact that in early data transports many of these
codepoints were considered instructions and could therefore inject
transport-specific commands etc. (if I understand the problem
correctly)*, base64/base32 were intended to allow arbitrary binary to be
encoded into a transport that accepted text without including codepoints
likely to have control significance. Amusingly, the base32/64 alphabets
are restricted further to remove characters that might, if accidentally
rearranged, cause people to see naughty words in binary.

When it comes down to it, there are only 2^8 possibilities in binary.
UTF8's extensions are indicated by additional byte sequences that
indicate "the following bytes should be viewed as an extension". I'm not
sure how many "ensuing" bytes can be regarded as an extended encoding at
a time, but I think it's only in the range of 1-3.

If we assume it's 3, and further assume that, after declaring that the
following 3 bytes are an extension, that any arbitrary binary sequence
will be interpreted as a visible, copy/pasteable character, then you're
looking at a length penalty to encode arbitrary data of 33%. For every
three bytes, you're escaping them to random characters by prefixing with
another byte.

Yes, it's more nuanced than that; you can factor in the ascii set and
use that where possible, only escaping binary values outside the ascii
set, but one way or another you're adding length to the binary string by
messing with it, with the aim being a character-representable set of
binary data that can be copy/pasted safely and passed through diverse
transports.

So the question is what's more important; ability to transport strings
of data without a significant length penalty, ability to transport
strings of arbitrary data without affecting the transport, or ability to
copy/paste (a subset of "transport" I guess).

Given these, my personal feeling is that if your concern is
transport-related, which implies that you can't control the transport,
then stick with base64. If your concern is length, then I don't feel
UTF8 will offer a significant advantage, and you're much better off
using something like length-prefixing like bencoding does it. If your
concern is copy-pasteability, then base58 works and probably is no worse
than base-utf8, while being significantly easier to implement in code.

Spurious rant over.

* Take for example the way early email was sent, where headers were
specified and then the server awaited the body of the message, the end
of which was indicated by what amounts to a string of characters; a
newline, a period, and another newline. Easily injected by accident or
design, along with other commands.

On 11/01/14 06:27, nymble wrote:
>=20
> consistent key formats are critical, need to converge on:
> - endianness
> - coordinate representation x, x&y, x and sign =85
> or bits to show which of these =85. perhaps borrow ANSI method
> - hint / indication of cipher suite / curve=20
> - text encoding of binary format (ascii)
> - text encoding of binary format (utf8)
> - human readable format
>=20
>> ecc public key curve p25519(pcp 0.15)
> leaking crypto suite
> key should be usable in other contexts besides pcp 0.15
>=20
>=20
>> 1l0$WoM5C8z=3DyeZG7?$]f^Uu8.g>4rf#t^6mfW9(rr910
> one of several possible text encodings
> Others might include:
> - base 29=20
> - base 59
> - base 4096 (for UTF8 channels)
>=20
>=20
>=20

--------------020101080606090404030000
Content-Type: application/pgp-keys;
 name="0x988B9099.asc"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
 filename="0x988B9099.asc"

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.12 (GNU/Linux)

mQINBFES3ZMBEADjIBApyo6hm1jU2fdyCYm99nSnutjaVfwQ8egnLa6FLSyJyl96
2lGfdwb9e5isH/Tujt7VFhmU7carTVz7rtJbaCqGcgLY6IUEy4VGakZCjw6vsPUQ
NJZN7vS9wG9gUsTrw0QhtC8IQ+TAvrIERi32zab5amdw/znpa8p/tiLjEFapd0wE
Lyr9txlpPl3T+64eZ35SfneHF0OYPS79qpK3KJt3TDCYFrM41EevLVzQRosTnygk
8lMvQfqtNkdRJpmNHsjG1kFOzoEINVTyY4PeO6rRaeDp6H2KD5tu9SXsi8uF1Ayt
F0fB+1c/WHTEvtvNneGonOkWWJokzayfMRvoDhxGsrFsASvoLZ21m7U9Fdyid4Cw
iU8pAgRCq53CV+YGLv6qioPDpuba0S4cO/eUPR6APcKHcE0xU5A5yIKiCPVQQKG3
85P4BRC+GwZ2ni2/cz/jwzFi/j9CuSoU3L1fLGN5wHmmMvNOSyIgtCWx7tnxvmGE
eGbLtwfgv8pXFF9WoH1d2nvZNdgWNaGrp1zxssho62pnO9FTe6FgvIyLD4v7OyIP
kPoTjWaaZh/U0hXeQyQOXKeTFEAMblMmpDHeCYLwjtWZLo4Z8+0Ez5sk3B0OETH4
B0K7hwIhIBqp9Gcgq4haSpo+vfxRJH3ouRGfbNMCcras1s+yBmUbvR3mBQARAQAB
tI9DYXRoYWwgR2FydmV5IChPdGhlciBhY2NzOiBvbmV0cnVlY2F0aGFsQHR3aXR0
ZXIsIGNhdGhhbGdhcnZleUBnaXRodWIsIGNhdGhhbGdhcnZleUBnaXRvcmlvdXMs
IGluZGllYmlvdGVjaC5jb20pIDxjYXRoYWxnYXJ2ZXlAY2F0aGFsZ2FydmV5Lm1l
PokCSwQTAQgANQIbAwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgBAYMTI3LjAuMC4x
Ojk5OTk5BQJSeChBAhkBAAoJEL0iNgSYi5CZ3CwQAN3974eow6SnmAHdQY+Pq2La
l5YDRIqcrVO3ybDrZ0gscS9K3rqNN4VRY45RIeMaq+CVjIJYqLCOIkzFCxNCxiyp
ZjzRBOcEsH9j8sxRkUKLRSlTlb+u6SrQll16L5JLQY2tFl5dgpWgakQD7xD0iUQ4
qX/HEakQhGiCUypYKqrT5GgrIFVsf22OMxFbwflNO/QNwzZVBDxf2yqi/c40q/rZ
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
ohzRIlrk1LdGFiPy
=3DwOG4
-----END PGP PUBLIC KEY BLOCK-----

--------------020101080606090404030000--

--chb0ELQ0TcUI9llcrFNJA8t3QUIgIPlqU
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQIcBAEBCgAGBQJS0WsQAAoJEL0iNgSYi5CZUzoP/AgEO2rS9AXOTLUSU8nSr8LL
K/LvZNocCTyYfMLKtX+0AVtPI04IB34b4s+i9cP9YrZ7tttlIDQtfMDSZ1mDZ4bg
ktlrzpa7xbrTxJHc6M56/I+6LTlojxMYqXgzGSX/1Ap+y95dC4ev6r1UY3dhmZlI
Rhqzl7fTEgVQkONmdZl3KahMg953hz7txckYtMmzWpBQLQRm41si/vlMUpSJHQ6O
R0yNv+egrkwf4iUtxlKWsRG8GBrfV13hwH9ZLyVhfdKXtaZx26nsDjcEofEGZiPt
m0Odd7RTnMwLYZx/dNkMheAD8ZDKabZJc6O7tb0dOF2Ee43KIGBgmjcHwPiAKtAR
fJd9OYXtFr7wxEqKnoCzAVVhHU+zU8PiUwGBefyP6nCafd8NVibBFKeYi2FQx988
LGYLQY2H2VlFbdiRuAzEvGcJI9dNyXEJVcPrmIyhnUXdhH41UT0J1aPFB5PDisyS
LnlbJfmh1EFGaFrzgQxExLqT5H8sMCNA/Wca7R5YHqNrduQ0Of8FSGB+Rni8lttR
Xm62v0/SX2nd4UY9/6sRlA0YUhEYVjR732EG9A2bW/rOD9c3ZcaaW1ztuN8Ag3gX
J9TPdS/6ALtDsKQexIE/XpOQd0h2i7BZV/8SYDlKU5GNebSWRo1xVOufd2VKuV2b
6q61t3zIO9XpgkS+L6UK
=mydE
-----END PGP SIGNATURE-----

--chb0ELQ0TcUI9llcrFNJA8t3QUIgIPlqU--

