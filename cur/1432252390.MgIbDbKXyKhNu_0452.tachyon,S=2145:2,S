From owner-cypherpunks@lne.com  Sun Sep  7 01:17:57 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h875HtH30014
	for <rsw@jfet.org>; Sun, 7 Sep 2003 01:17:56 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h8751EjJ014419
	for cypherpunks-goingout345; Sat, 6 Sep 2003 22:01:14 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Date: Sun, 7 Sep 2003 07:00:59 +0200 (CEST)
From: Thomas Shaddack <shaddack@ns.arachne.cz>
X-X-Sender: <shad@Zeta>
To: "James A. Donald" <jamesd@echeque.com>
cc: <cypherpunks@lne.com>
Subject: Re: more SSH MITM
In-Reply-To: <3F59E2C9.5179.29687A@localhost>
Message-ID: <Pine.LNX.4.33.0309070650340.5757-100000@Zeta>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1119
Lines: 23

On Sat, 6 Sep 2003, James A. Donald wrote:
> Thus under this attack, ssh uncertified keys work far better
> than https certified keys.

Central certification authority has its risks and advantages. Remembering
the fingerprints of known keys and alerting for the new or changed ones
has its advantages too. Why we shouldn't have it all?

Why there couldn't be a system that would keep the database of known keys
and report changes and new keys, like SSH does, and at the same give the
possibility to sign the keys by several CAs? Effectively turning the
hierarchy with potentially vulnerable top to a much-less-vulnerable web
structure?

That way you could get a key certified by Verisign, Thawte, and a handful
of small private CAs of various groups and people, and its fingerprint
remembered by the clients. If one of the CAs gets compromised, no problem
as the other certificates still hold. If a server key gets changed, or
there is a confusion-attack in progress ("BankOpAmerica"), the clients are
immediately aware of it.

Could be SSL modified to allow more CAs for one certificate? If it isn't a
good idea, why?

