From cypherpunks-bounces@cpunks.org  Fri Apr 11 00:07:21 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s3B46tTr008092;
	Fri, 11 Apr 2014 00:07:05 -0400
Received: from palinka.tinho.net (palinka.tinho.net [166.84.6.13])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s3B46rCm008088
 for <cypherpunks@cpunks.org>; Fri, 11 Apr 2014 00:06:54 -0400
Received: by palinka.tinho.net (Postfix, from userid 126)
 id 884292280F8; Fri, 11 Apr 2014 00:06:50 -0400 (EDT)
Received: from palinka.tinho.net (localhost [127.0.0.1])
 by palinka.tinho.net (Postfix) with ESMTP id 79609228075;
 Fri, 11 Apr 2014 00:06:50 -0400 (EDT)
From: dan@geer.org
To: Patrick Chkoreff <pc@loom.cc>
Subject: Re: [tor-talk] [cryptography] The Heartbleed Bug is a serious
 vulnerability in OpenSSL
In-Reply-To: Your message of "Thu, 10 Apr 2014 17:59:49 EDT."
 <53471455.9010801@loom.cc>
Date: Fri, 11 Apr 2014 00:06:50 -0400
Message-Id: <20140411040650.884292280F8@palinka.tinho.net>
Cc: cypherpunks@cpunks.org
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 1377
Lines: 28


 | 
 | And time to start building from source, examining source diffs, and
 | devising one's own stress tests.
 | 


http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=1565233

Countering trusting trust through diverse double-compiling

An air force evaluation of Multics, and Ken Thompson's famous Turing
award lecture "reflections on trusting trust, " showed that compilers
can be subverted to insert malicious Trojan horses into critical
software, including themselves. If this attack goes undetected, even
complete analysis of a system's source code can not find the malicious
code that is running, and methods for detecting this particular attack
are not widely known. This paper describes a practical technique, termed
diverse double-compiling (DDC), that detects this attack and some
compiler defects as well. Simply recompile the source code twice: once
with a second (trusted) compiler, and again using the result of the
first compilation. If the result is bit-for-bit identical with the
untrusted binary, then the source code accurately represents the binary.
This technique has been mentioned informally, but its issues and
ramifications have not been identified or discussed in a peer-reviewed
work, nor has a public demonstration been made. This paper describes the
technique, justifies it, describes how to overcome practical challenges,
and demonstrates it.

