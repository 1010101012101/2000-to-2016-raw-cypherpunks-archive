From cypherpunks-bounces@cpunks.org  Mon Mar 24 11:38:15 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s2OFc8nu005115;
	Mon, 24 Mar 2014 11:38:08 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=aB53zYJE;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: from mail-qc0-f170.google.com (mail-qc0-f170.google.com
 [209.85.216.170])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s2OFc20i005103
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Mon, 24 Mar 2014 11:38:03 -0400
Received: by mail-qc0-f170.google.com with SMTP id e9so6250401qcy.1
 for <cypherpunks@cpunks.org>; Mon, 24 Mar 2014 08:37:57 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:sender:in-reply-to:references:from:date:message-id
 :subject:to:cc:content-type;
 bh=FY9OgVLct3ngEv936GXFVdZ+VHXDqQli/MGWhg4AkDo=;
 b=aB53zYJE0oUmumeHMoKKHrNQI2OMY/VYZ5CsNFOXaq6pn/J/s68fQX5q8mVupMRR/A
 Gi/M3Tubrs4V/j0ryE/xcpay48b49n+rhmkEIZvPdDEOkkUI/zQLB/rprqTtX7UwMvpq
 vTHDveYpnq7DxgTM6+CObj6LyrVZxQXL1+vl1LY0o3wnNNScSrxOZtSq13elNU/DAmak
 YoSF+P9jX6WxwnSwEkcjl/MluLEgXHtflj9gWUrWgVlBy7zJlRiDb/Q5ZChTKIrxPyEC
 7MTKcN6O98GVbF25vZcCsI7bXqCD4yjXXlUie7vWShcWQKf37NUU6idRLs39X4i7WN99
 ok5g==
X-Received: by 10.140.19.212 with SMTP id 78mr4070631qgh.84.1395675477704;
 Mon, 24 Mar 2014 08:37:57 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.229.248.133 with HTTP; Mon, 24 Mar 2014 08:37:37 -0700 (PDT)
In-Reply-To: <E1WRtyu-0002eY-90@login01.fos.auckland.ac.nz>
References: <CAFd=HCeF8_NG9d6Zx6LeAPkaphgeLhpzw+o5xe50SNpsD2jD7A@mail.gmail.com>
 <E1WRtyu-0002eY-90@login01.fos.auckland.ac.nz>
From: =?UTF-8?Q?Lodewijk_andr=C3=A9_de_la_porte?= <l@odewijk.nl>
Date: Mon, 24 Mar 2014 16:37:37 +0100
X-Google-Sender-Auth: 8EdyR22Fs4T8lC82SaqfK74SI8w
Message-ID: <CAHWD2r+VtiPJp2_9B_-vAsvtXO6E3VXkuCYPT=57MpWx+BrwPA@mail.gmail.com>
Subject: Re: "Whew, wondered where we'd put those 200,000 BTC!"
To: Peter Gutmann <pgut001@cs.auckland.ac.nz>
Content-Type: multipart/alternative; boundary=001a1134effc12221504f55c056a
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 3970
Lines: 80

--001a1134effc12221504f55c056a
Content-Type: text/plain; charset=UTF-8

2014-03-24 2:47 GMT+01:00 Peter Gutmann <pgut001@cs.auckland.ac.nz>:

> Their prime directive is that financial value can never be
> created or destroyed, so you can never have a situation in which a failure
> anywhere will result in one blob of financial value being recorded in two
> locations, or no locations.  Saying that you'll address this by rolling
> back
> transactions won't fly both because no standard database can handle the
> load
> they work at, and because the financial world isn't going to stop and wait
> while you perform a rollback.
>

So how do they do that? If there's power failure on a specific box, what
happens? Are all transactions synced to disk before commit, thus minimal
rollbacks? A minimal rollback takes a very small margin of what would
happen in case of power failure on a box. Maybe they have several boxes
advocating a single transaction, so that expectible failures would never
crash a system completely.

I can imagine mitigating this by redundantly processing everything, in
which case sequence must be kept somehow and so I can't imagine it being
ridiculously fast. Maybe you mean the throughput is insane, because that'd
make more sense given the multiple months of CPU being thrown at it. If you
didn't then caching would just slow things down (most of the time).

Finance should run better on SSDs, so I imagine this is an old story.

Overall a bit confusing, and I'd love some more details! Like, why are they
even using disks when fiber and RAM might be faster and similarly reliable?

--001a1134effc12221504f55c056a
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote">2014=
-03-24 2:47 GMT+01:00 Peter Gutmann <span dir=3D"ltr">&lt;<a href=3D"mailto=
:pgut001@cs.auckland.ac.nz" target=3D"_blank">pgut001@cs.auckland.ac.nz</a>=
&gt;</span>:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div id=3D":4zr" class=3D"a3s" style=3D"over=
flow:hidden">Their prime directive is that financial value can never be<br>
created or destroyed, so you can never have a situation in which a failure<=
br>
anywhere will result in one blob of financial value being recorded in two<b=
r>
locations, or no locations. =C2=A0Saying that you&#39;ll address this by ro=
lling back<br>
transactions won&#39;t fly both because no standard database can handle the=
 load<br>
they work at, and because the financial world isn&#39;t going to stop and w=
ait<br>
while you perform a rollback.</div></blockquote></div><br>So how do they do=
 that? If there&#39;s power failure on a specific box, what happens? Are al=
l transactions synced to disk before commit, thus minimal rollbacks? A mini=
mal rollback takes a very small margin of what would happen in case of powe=
r failure on a box. Maybe they have several boxes advocating a single trans=
action, so that expectible failures would never crash a system completely.<=
/div>

<div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">I can imagi=
ne mitigating this by redundantly processing everything, in which case sequ=
ence must be kept somehow and so I can&#39;t imagine it being ridiculously =
fast. Maybe you mean the throughput is insane, because that&#39;d make more=
 sense given the multiple months of CPU being thrown at it. If you didn&#39=
;t then caching would just slow things down (most of the time).<br>

</div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">Finan=
ce should run better on SSDs, so I imagine this is an old story.</div><div =
class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">Overall a bit co=
nfusing, and I&#39;d love some more details! Like, why are they even using =
disks when fiber and RAM might be faster and similarly reliable?</div>

</div>

--001a1134effc12221504f55c056a--

