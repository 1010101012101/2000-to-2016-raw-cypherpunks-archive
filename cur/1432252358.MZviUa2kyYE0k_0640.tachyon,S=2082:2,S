From owner-cypherpunks@lne.com  Wed Nov  5 22:13:16 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p3/8.11.6-03-31-03) with ESMTP id hA63DEY03829
	for <rsw@jfet.org>; Wed, 5 Nov 2003 22:13:15 -0500
Received: from slack.lne.com (slack.lne.com [127.0.0.1])
	by slack.lne.com (8.12.10/8.12.10) with ESMTP id hA62x6D2002733
	(version=TLSv1/SSLv3 cipher=EDH-DSS-DES-CBC3-SHA bits=168 verify=NO)
	for <cypherpunks-goingout345@slack.lne.com>; Wed, 5 Nov 2003 18:59:06 -0800
Received: (from majordom@localhost)
	by slack.lne.com (8.12.10/8.12.10/Submit) id hA62x65T002732
	for cypherpunks-goingout345; Wed, 5 Nov 2003 18:59:06 -0800
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
From: "James A. Donald" <jamesd@echeque.com>
To: cypherpunks@lne.com
Date: Wed, 5 Nov 2003 18:58:58 -0800
Subject: Deniable data storage
Message-ID: <3FA94872.10325.DEE3A0@localhost>
In-reply-to: <20030325092528.A22947@cluebot.com>
References: <3E7F8732.24885.D5EF3A@localhost>; from jamesd@echeque.com
  on Mon, Mar 24, 2003 at 10:31:14PM -0800
X-mailer: Pegasus Mail for Windows (v4.01)
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 761
Lines: 18

I want to store information deniably.

So there would be a fixed sized block of data, say one megabyte, 
increasing by multiples of 8 as needed.

This would contain various items of information that one could 
extract by supplyin a secret, symmetric, key.   A random key would 
extract a block of gibberish of random length   There would be no 
indication as to how many bits of meaningful data were stored in the 
block, though obviously they would have to add up to less than the 
size of the block.

So one could store one's password list under one key, and the 
location of the dead bodies under another key, and absent that key, 
there would be no evidence that they key, or information hidden under 
that key, existed.

What is a good algorithm for this?

