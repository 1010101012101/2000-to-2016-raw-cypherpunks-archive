From owner-cypherpunks@Algebra.COM  Thu Dec 28 20:31:13 2000
Received: from MIT.EDU (SOUTH-STATION-ANNEX.MIT.EDU [18.72.1.2])
	by positron.mit.edu (8.9.3/8.9.3) with SMTP id UAA28884
	for <kwantam@positron.mit.edu>; Thu, 28 Dec 2000 20:31:13 -0500
Received: from ak47.algebra.com by MIT.EDU with SMTP
	id AA23499; Thu, 28 Dec 00 20:30:09 EST
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id eBT1DdN17670
	for cypherpunks-outgoing; Thu, 28 Dec 2000 19:13:39 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id eBT1DcB17656
	for <cypherpunks@algebra.com>; Thu, 28 Dec 2000 19:13:38 -0600
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id RAA17978; Thu, 28 Dec 2000 17:13:33 -0800 (PST)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id RAA17974 for <cpunks@sirius.infonex.com>; Thu, 28 Dec 2000 17:13:29 -0800 (PST)
Received: from hcs.harvard.edu (hcs.harvard.edu [140.247.73.252]) by cyberpass.net (8.8.8/8.7.3) with ESMTP id RAA10071 for <cypherpunks@cyberpass.net>; Thu, 28 Dec 2000 17:16:02 -0800 (PST)
Received: from localhost (dmolnar@localhost)
	by hcs.harvard.edu (8.9.3/8.9.3) with ESMTP id UAA04859;
	Thu, 28 Dec 2000 20:13:14 -0500 (EST)
Date: Thu, 28 Dec 2000 20:13:13 -0500 (EST)
From: dmolnar <dmolnar@hcs.harvard.edu>
To: Ray Dillinger <bear@sonic.net>
Cc: Tim May <tcmay@got.net>, cypherpunks@cyberpass.net
Old-Subject: Re: That 70's Crypto Show (Remailers, science and engineering)
In-Reply-To: <Pine.LNX.4.21.0012281322040.27986-100000@bolt.sonic.net>
Message-Id: <Pine.OSF.4.05.10012282000250.648-100000@hcs.harvard.edu>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Subject:  Re: That 70's Crypto Show (Remailers, science and engineering)
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1856
Lines: 43




On Thu, 28 Dec 2000, Ray Dillinger wrote:

> Not enough energy by half has been focused on protocols. 
> I think there's probably a good set of programs to be 
> written here.  

While we're at it, check out this web page

http://www.cs.nyu.edu/cs/dept_info/course_home_pages/fall96/G22.3033.02/

Avi Rubin and Matt Franklin's course on crypto protocols.

> Basically, I'm thinking in terms of the old unix philosophy -- 
> "A good program does exactly one thing, and does it well.". 
> If somebody designs a good set of command-line programs, which 
> produce output usable by each other so that they can be piped 
> together in useful ways on a unix command line, then protocols 
> should be easy to implement as shell scripts.  But a proper 

First you need to identity a set of common building blocks! I thought
about this briefly a year or two ago. Then realized that many protocols
for, say, "digital cash" do not actually share many components with
each other. Sure, all of them may have a public-key cryptosystem, but
the exact requirements are different...and sometimes a protocol needs
specific properties of a cryptosystem in order to work.

My programming languages professor recently pointed me to a paper
describing a library for doing smart contracts and options in Haskell.
(I'll post the reference later; I'm having trouble finding it). They put
together a library of combinators, which together could be used to write
real contracts. Even have a semantics for this beast. It seems that the
reason they could do that is that the contracts they're looking at
decompose nicely into distinct parts. It's not clear to me how to do that
for crypto protocols. 

Maybe a place to start would be to go through a bunch of papers on crypto
protocols and analyse the all the "Alice sends to Bob" messages. See what
commonalities pop out. 

-David

