From owner-cypherpunks@Algebra.COM  Fri Nov 23 23:12:08 2001
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.mit.edu (8.11.6/8.9.3) with ESMTP id fAO4C7w18285
	for <kwantam@positron.mit.edu>; Fri, 23 Nov 2001 23:12:07 -0500
Received: from ak47.algebra.com (ak47.algebra.com [208.233.99.160])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id XAA07084
	for <rsw@mit.edu>; Fri, 23 Nov 2001 23:08:06 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id fAO3dFj28689
	for cypherpunks-outgoing; Fri, 23 Nov 2001 21:39:15 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (dns.lne.com [209.157.136.81])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id fAO3dCn28673
	for <cypherpunks@algebra.com>; Fri, 23 Nov 2001 21:39:12 -0600
Received: (from cpunk@localhost)
	by slack.lne.com (8.11.0/8.11.0) id fAO3d8t09214
	for cypherpunks@algebra.com; Fri, 23 Nov 2001 19:39:08 -0800
Received: (from majordom@localhost)
	by slack.lne.com (8.11.0/8.11.0) id fAO3cis09206
	for cypherpunks-goingout; Fri, 23 Nov 2001 19:38:44 -0800
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Date: Sat, 24 Nov 2001 04:38:35 +0100
From: Anonymous <nobody@mix.winterorbit.com>
Comments: This message did not originate from the Sender address above.
  It was remailed automatically by anonymizing remailer software. Please
  report problems or inappropriate use to the remailer administrator at
  <abuse@mix.winterorbit.com>.
To: cypherpunks@lne.com
Old-Subject: Re: Pricing Mojo, Integrating PGP, TAZ, and D.C. Cypherpunks
Message-ID: <e1a210abcceac2d43c5e539b2955eb0a@mix.winterorbit.com>
X-Loop: cypherpunks@lne.com
X-spam: 10 
Subject:  Re: Pricing Mojo, Integrating PGP, TAZ, and D.C. Cypherpunks
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 10 
Status: O
Content-Length: 2953
Lines: 56


Greg Broiles writes:

> And that problem seems to be at the center of Nomen Nescio's sotto voce 
> suggestion that some unnamed cypherpunks work up a currency which can be 
> used to "pay" people for providing information which is of value -

It's not a matter of unnamed cypherpunks doing a favor, but rather a
proposal offered to see if there is support.  If a few people spoke
up with agreement that such an effort were worth doing, the next step
would be to put together a project, perhaps on sourceforge, and get
some code into play.  But if you run the flag up and no one salutes,
then you should wait for a better idea.

> I get 
> the impression that s/he is imagining some magic fairy would mint up piles 
> of the currency, and assign it equally to every subscriber, who would then 
> be empowered to pay it to the content providers they liked best.
>
> That's very warm and fuzzy and hippy-like, but if these tokens are handed 
> out for free, then what, exactly, is their value?

This is the problem of initial distribution.  Ideally there would be some
way to give every person a fixed initial allocation, but in practice this
will allow people to create new identities ("nyms") and get more than
their share.  It seemed that part of MojoNation's reason for backing away
from mojo-as-money was the problem of fairly giving an initial allocation.

Here's an idea which has been proposed before: use hashcash to purchase
e-coins.  Hashcash is a hash collision generated by a certain number of
standard CPU hours of work.  To enter into the ecash economy you could
generate hashcash and send it to the server, getting ecash in exchange.

Ecash is more suitable than hashcash as a form of currency as it can
be transferred and exchanged at the bank with little effort or expense.
But the problem is acquiring the initial ecash without the overwhelming
inflation that Greg Broiles implicitly warns against.  By basing ecash
on hashcash which involves a significant expense to generate, you avoid
inflation.

In this system, the ecash "bank" would not be a bank at all.  It would
have two functions: give out some ecash given hashcash; and give out
some (fresh) ecash given other ecash.  The latter would use the double
spending database and all that.  If you received some ecash as payment
you would immediately exchange it at the bank which will simultaneously
verify that the cash is good and give you fresh coins for later spending.
The ecash server is simply an exchanger.

These are serious proposals.  With Ben Laurie's lucre library and a
berkeley db for the double spending database, a basic server could be
put together in a few hours' work.  Adam Back's hashcash software can
be used as a client to generate the initial requests.  The basic pieces
are all here, no magic fairies required.

The main question is again whether there exists an initial market which
could be enticed into trying out this package on an experimental basis.

