From cypherpunks-bounces@cpunks.org  Fri Aug 30 00:52:25 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r7U4pUHt029161;
	Fri, 30 Aug 2013 00:51:37 -0400
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="2048-bit key; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=t0ncQhlH;
	dkim-adsp=pass; dkim-atps=neutral
Received: from mail-la0-f42.google.com (mail-la0-f42.google.com
 [209.85.215.42])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r7U4pQhu029157
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Fri, 30 Aug 2013 00:51:29 -0400
Received: by mail-la0-f42.google.com with SMTP id ep20so1134747lab.15
 for <cypherpunks@cpunks.org>; Thu, 29 Aug 2013 21:51:19 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :cc:content-type;
 bh=sYwf+c+vZrbgxpBqfC5PqFF21Y18GCzBX/7NXbvFHAw=;
 b=t0ncQhlHJg6ml21VJB0QZgk+fnUbyktAMrwhWGd67zVMMIsxFMG2H5v0FNK/DhqwTC
 J/iKC/V0w9l7WbIXPhLoFIsEd37bDA3UUjoOK2nbAJXWHLWIXJpekmREph648IcgEsLQ
 1k9PDxzcY7T1fmeiHCEKfwhnrd7w+gi5i77tjxnd+F/DoylpRcJh5bjE/VA8ofUommZy
 CdkjOc7QHsVQDnVujUyBBSS2I+0i4pHaFLshklun9J7AlZuREKawE5L1jMCrSdvTkOa+
 SrzAFVU/miTXmSYv2YAC0eHER+V4IBAr59p6+U6ikpoqqWsRrO95VsnTDIFb5JbdY2aI
 5D9g==
MIME-Version: 1.0
X-Received: by 10.112.14.3 with SMTP id l3mr6195916lbc.27.1377838279638; Thu,
 29 Aug 2013 21:51:19 -0700 (PDT)
Received: by 10.112.205.132 with HTTP; Thu, 29 Aug 2013 21:51:19 -0700 (PDT)
In-Reply-To: <CAD2Ti293zbvN3zEwdu-+kd2DYUMvMDaL1CHRpCZG2BZZXAEM3A@mail.gmail.com>
References: <CAD2Ti2-C5qbR2cfffr+WN2aJFcpcnX2r5KYgh=sOmh7LgoZCaQ@mail.gmail.com>
 <CAD2Ti293zbvN3zEwdu-+kd2DYUMvMDaL1CHRpCZG2BZZXAEM3A@mail.gmail.com>
Date: Thu, 29 Aug 2013 21:51:19 -0700
Message-ID: <CAJVRA1QT9XxeXCwMzUgDj8-u_UO8SPKXF8FAnUrOTf=7wjE6yQ@mail.gmail.com>
Subject: Re: UDP/datagram/cell based networks [was: Why_can't_email_be_secure]
From: coderman <coderman@gmail.com>
To: grarpamp <grarpamp@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1
Cc: cpunks <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 6475
Lines: 140

On Thu, Aug 29, 2013 at 10:25 AM, grarpamp <grarpamp@gmail.com> wrote:
> ... because of our silly desire to not fill our pipes with chaff,
> we've made it easier in some cases for GPA's [...] to watch and
> connect the inputs/outputs across a relatively silent backbone...

active attacks are often even more effective at rapid traffic
confirmation and analysis[0]; GPA is pretty tame perhaps!


in any case the challenge you mention: thwarting or preventing traffic
analysis without a full mix of constant traffic. if the datagram based
system above existed, combine with:

- stochastic fair queuing and re-ordering of egress traffic. by
"clamping" the outbound rate of randomized, re-ordered datagrams to a
broad "size/chunk" of capacity, you deter traffic confirmation,
anonymity set reduction, and other traffic analysis attacks of various
types.

- client-side classification of application traffic into prioritized
classes[1] for ingress / dgm proxy level active shaping by classful
HTB queues before transiting the first hop and losing all visibility
into the content and priority of message payloads.

- integrate a lowest effort / unreliable background reliable multicast
like bulk transport channel for resource and key pre-caching, network
participant and performance information distribution, secure remote
archives, random performance measurement/tests across peer groups,
other low priority communications suited for this "filler" class of
traffic. (consuming more or less filler traffic helps smooth out the
effective throughput and efficiency when changing the broad
"stochastic traffic capacity range" appropriate for a given peer.)

- provide LEDBAT or AQM management of edge traffic to upstream(s) to
prevent unnecessary latency in upstream buffers. this ensures that
even at full utilization the responsiveness of the broadband link is
excellent.

- and the multi-path SCTP, IPsec, UDP NAT traversal and encapsulation,
and other user space network stacks communicating across this overlay
network as discussed above for requisite application and control
communication support.

these techniques combined allow you to use still not insignificant
"stochastic traffic capacity ranges" instead of a constant fixed
amount of traffic to protect against these attacks.  these stochastic
ranges can be adjusted up or down as network performance and capacity
dictate. this protocol provides congestion control and TCP
friendliness while greatly reducing the amount of bandwidth consumed
relative to a traditional mix.

---

at best (in theory), an attacker with local active and global passive
methods on hand could discern anonymity sets for broad categories /
scales of possible communication usage.  E.g. anon set A exhibits
traffic utilization on the order of 1Mbps to 5Mbps, while anon set B
exhibits traffic utilization on the order of 5Mbps to 50Mbps, and anon
set C exhibits traffic utilization on the order of 50Mbps to 1Gbps,
etc.

given this drawback, code a kick ass client with participation enabled
by default if sufficient connectivity and resources are available.
you've now made these broad traffic volume sets nearly useless in a
practical / actionable sense.


congratulations! you've now got a traffic analysis resistant low
latency anonymity protocol, implementation, and network that nearly
anyone can participate in and contribute to. for my next magic hand
wave, a directory / route selection method that scales to billions of
peers while leveraging geographic propinquity and social peer groups
to constrain Sybil attacks and impact of bad actors.

next grow network capacity in a way that continually applies implicit
feedback from the network overall and peers directly and your
deterrence to these attacks begins to improve further over time,
perhaps even one day hitting a tipping point of prevalence and
persistence for de-facto victory in most threat models...

we can dream!


---


perhaps someone should toss up a Bitcoin donation address to support
work on detailed technical specifications, experimental prototypes,
maintaining clouds for continuous builds, regression checks, load
tests, and traffic analysis for quality measurement and security
improvement[2],

could also use donations for bounties for identifying or exploiting
security or privacy vulnerabilities in the design and implementation
of this final generation anonymous network.  whoever sets this up
should probably use an onion to coordinate development and distribute
sources, other resources...

calling all "tup" s, ...  ;P


---


0. "From a Trickle to a Flood: Active Attacks on Several Mix Types"
  http://freehaven.net/doc/batching-taxonomy/taxonomy.pdf

1. i have mentioned the following classes before, with each in
priority order for the HTB prioritization / shaping before traffic
enters the network and becomes opaque:
 a. control and signalling traffic - always takes precedence.
 b. real-time and interactive communications, but not video.
 c. real-time video communication, if applicable.
 d. low priority bulk communication.  torrents, archives, opportunistic caching
 e. filler / last-tier best effort unreliable traffic as mentioned
above for filling in the remaining capacity at the current stochastic
rx/tx rate center point.


2.  instead of trying to research and author formal proofs of entropy
bounds for various idealized models, cut straight to the chase and
build the most aggressive, best in class developmental learning / deep
learning systems for classification and identification of nodes,
flows, protocols, identities in a test bed setup that provides full
traffic visibility and active client edge MitM capability (E.g.
simulate attack via rogue AP or cell tower for tagging? selective DoS?
others,).  malicious attacks performed by the remote end or injected
by remote's upstream are not in scope for this traffic analysis and
privacy assessment. however, passive capture of all exit
communications and ORCHID hidden endpoint communications is in scope
for analysis.

then, see how effective this best scenario and tools attack is against
a running implementation.  did it fail catastrophically in flames or
break wide open with trivial effort?  keep improving...

respectably hardened against the most aggressive machine learning and
malicious active attacks you could conceive of and build?  great! have
a beer and then find the people who see the oversights and blind spots
you don't.  keep improving... rinse, repeat, ...

