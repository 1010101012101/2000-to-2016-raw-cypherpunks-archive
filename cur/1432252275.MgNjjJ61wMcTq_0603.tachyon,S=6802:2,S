From owner-cypherpunks@Algebra.COM  Tue Jul  2 07:34:25 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g62BYO606004
	for <rsw@opamp.org>; Tue, 2 Jul 2002 07:34:24 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id GAA09949
	for <rsw@mit.edu>; Tue, 2 Jul 2002 06:27:42 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g62A2HeR013223
	for <cypherpunks-outgoing@ak47.algebra.com>; Tue, 2 Jul 2002 05:02:17 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g62A2Hsu013222
	for cypherpunks-outgoing; Tue, 2 Jul 2002 05:02:17 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from locust.minder.net (locust.minder.net [66.92.53.74])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g62A2GeR013208
	for <cypherpunks@algebra.com>; Tue, 2 Jul 2002 05:02:16 -0500
Received: from waste.minder.net (daemon@waste [66.92.53.73])
	by locust.minder.net (8.11.6/8.11.6) with ESMTP id g62A2FE79248
	for <cypherpunks@algebra.com>; Tue, 2 Jul 2002 06:02:15 -0400 (EDT)
	(envelope-from cpunks@waste.minder.net)
Received: (from cpunks@localhost)
	by waste.minder.net (8.11.6/8.11.6) id g62A2E102575
	for cypherpunks@algebra.com; Tue, 2 Jul 2002 06:02:14 -0400
Received: (from majordom@localhost)
	by waste.minder.net (8.11.6/8.11.6) id g62A20g02550
	for cypherpunks-outgoing; Tue, 2 Jul 2002 06:02:00 -0400
Received: from locust.minder.net (locust.minder.net [66.92.53.74])
	by waste.minder.net (8.11.6/8.11.6) with ESMTP id g62A20u02546
	for <cypherpunks@minder.net>; Tue, 2 Jul 2002 06:02:00 -0400
Received: from web21204.mail.yahoo.com (web21204.mail.yahoo.com [216.136.131.77])
	by locust.minder.net (8.11.6/8.11.6) with SMTP id g62A1oE79240
	for <cypherpunks@minder.net>; Tue, 2 Jul 2002 06:01:50 -0400 (EDT)
	(envelope-from jtrjtrjtr2001@yahoo.com)
Message-ID: <20020702100144.74166.qmail@web21204.mail.yahoo.com>
Received: from [61.1.254.189] by web21204.mail.yahoo.com via HTTP; Tue, 02 Jul 2002 03:01:44 PDT
Date: Tue, 2 Jul 2002 03:01:44 -0700 (PDT)
From: gfgs pedo <jtrjtrjtr2001@yahoo.com>
Old-Subject: Man in middle attack
To: cypherpunks@minder.net
In-Reply-To: <004101c22038$1ab76840$a36e9cd9@mark>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Old-Subject:  Man in middle attack
Subject:   Man in middle attack
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 3929
Lines: 155


hi,

> The only thing that might, as far as I can see,
> succeed (with a high
> probability) would be for everyone to hash the
> *next* half - meaning that,
> together with half 2 of message N, there will be the
> hash of half one of
> message N + 1. However, I don't see how this would
> be possible for an
> interactive communication...

As far as i can extend the previous attack,i.e faking
1 packet for interlock protocol in the above 1 you
propose,extending the same attack it only takes
Mallory
one and a half faked packets to launch a succefull
attack on the above proposal.

let 
A=Alice
M=Mallory
B=Bob

let 
1:1  indicate 1 st packet ,1st half
1:2  indicate 1 st packet , 2nd half

2:1  indicate 2 nd packet, 1st half
2:2  indicate 2nd packet , 2nd half 

and so on


so we are now have  1:2 and 2:1 as one complete
message
and so on

No:     A               M                B



1                    A->1:1           M->1:1   

2    M->1:1          B->1:1           

3                    A->1:2           M->1:2 

4    M->1:2          B->1:2          

5                    A->2:1           M->2:1

6    M->2:1          B->2:1

7                    A->2:2           ******
 


The blank spaces corresponding to each row indicates
that it is a sender and the other 2 are receivers.

Once Mallory receives A->2:2 ,he has 2 full packets in
hand and has faked 1 and a half packets(Step 7)

**** indicates that it is now the earler packet Bob
receives of Alice after Mallory's manupilation.
I hope that table will give some clarity.

now he can send Bob the original message of Alice.

So I think the above suggested protocol will not work.
Mallory can still get away with his scheme


Regards Data.


--- Marcel Popescu <mdpopescu@subdimension.com> wrote:
> From: "gfgs pedo" <jtrjtrjtr2001@yahoo.com>
> 
> > One solution suggested against the man in the
> middle
> > attack is using the interlock protocol
> 
> This is the one I vaguely recalled, thank you.
> 
> > All mallory would have to do is send the half of
> the
> > (n th) packet when he receives the half of (n+1)th
> > packet since the 1 st packet was faked by mallory.
> 
> Interesting attack... assuming that a one-block
> delay doesn't look
> suspicious.
> 
> What if every message except the very first one has
> a hash of the previously
> received message?
> 
> A -> (M ->) B: half 1 of message A1
> B -> (M ->) A: half 1 of message B1 | hash (half 1
> of message A1)
> A -> (M ->) B: half 2 of message A1 | hash (half 1
> of message B1)
> B -> (M ->) A: half 2 of message B1 | hash (half 2
> of message A1)
> A -> (M ->) B: half 1 of message A2 | hash (half 2
> of message B1)
> ... and so on
> 
> Nah... won't work; since M captures A1 and B1, he
> can compute the hashes for
> both the initial bogus message and the (delayed)
> genuine ones. Same if they
> try hasing all the previous messages.
> 
> What if they send the hash of the *other* half? (The
> program splitting the
> messages already has the full ones.)
> 
> A -> (M ->) B: half 1 of message A1 | hash (half 2
> of message A1)
> B -> (M ->) A: half 1 of message B1 | hash (half 2
> of message B1)
> A -> (M ->) B: half 2 of message A1 | hash (half 1
> of message A1)
> B -> (M ->) A: half 2 of message B1 | hash (half 1
> of message B1)
> ... and so on
> 
> Nope, no good... M fakes the first message in both
> direction, and then he
> always has a good one, so he can compute the hashes.
> 
> The only thing that might, as far as I can see,
> succeed (with a high
> probability) would be for everyone to hash the
> *next* half - meaning that,
> together with half 2 of message N, there will be the
> hash of half one of
> message N + 1. However, I don't see how this would
> be possible for an
> interactive communication...
> 
> Thanks,
> Mark
> 
> 


__________________________________________________
Do You Yahoo!?
Sign up for SBC Yahoo! Dial - First Month Free
http://sbc.yahoo.com

