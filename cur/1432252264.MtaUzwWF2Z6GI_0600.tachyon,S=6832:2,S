From owner-cypherpunks@Algebra.COM  Fri Oct 18 13:51:42 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g9IHpgh25865
	for <rsw@opamp.org>; Fri, 18 Oct 2002 13:51:42 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id NAA21901
	for <rsw@mit.edu>; Fri, 18 Oct 2002 13:51:41 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g9IG1aQK013011
	for <cypherpunks-outgoing@ak47.algebra.com>; Fri, 18 Oct 2002 11:01:36 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g9IG1aFi013010
	for cypherpunks-outgoing; Fri, 18 Oct 2002 11:01:36 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from locust.minder.net (locust.minder.net [66.92.53.74])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g9IFvnQK012528
	for <cypherpunks@algebra.com>; Fri, 18 Oct 2002 11:01:34 -0500
Received: from waste.minder.net (daemon@waste [66.92.53.73])
	by locust.minder.net (8.12.3/8.12.3) with ESMTP id g9IFvlgf017798
	for <cypherpunks@algebra.com>; Fri, 18 Oct 2002 11:57:48 -0400 (EDT)
	(envelope-from cpunks@waste.minder.net)
Received: (from cpunks@localhost)
	by waste.minder.net (8.11.6/8.11.6) id g9IFvld28737
	for cypherpunks@algebra.com; Fri, 18 Oct 2002 11:57:47 -0400
Received: from locust.minder.net (locust.minder.net [66.92.53.74])
	by waste.minder.net (8.11.6/8.11.6) with ESMTP id g9IFvkQ28726
	for <cpunks@minder.net>; Fri, 18 Oct 2002 11:57:46 -0400
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by locust.minder.net (8.12.3/8.12.3) with ESMTP id g9IFvdgg017793
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=FAIL)
	for <cpunks@minder.net>; Fri, 18 Oct 2002 11:57:44 -0400 (EDT)
	(envelope-from cpunk@lne.com)
Received: (from cpunk@localhost)
	by slack.lne.com (8.12.5/8.12.5) id g9IFvbXv009661
	for cpunks@minder.net; Fri, 18 Oct 2002 08:57:37 -0700
Received: (from majordom@localhost)
	by slack.lne.com (8.12.5/8.12.5) id g9IFt4uR009655
	for cypherpunks-goingout345; Fri, 18 Oct 2002 08:55:04 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
X-Originating-IP: [12.10.219.26]
From: "Tyler Durden" <camera_lumina@hotmail.com>
To: camera_lumina@hotmail.com, cypherpunks@lne.com
Old-Subject: Re: Intel Security processor + a question
Date: Fri, 18 Oct 2002 11:54:54 -0400
Mime-Version: 1.0
Content-Type: text/plain; format=flowed
Message-ID: <F215KnD7zoJDpz1Pjzc00003e20@hotmail.com>
X-OriginalArrivalTime: 18 Oct 2002 15:54:55.0363 (UTC)
  FILETIME=[B3E29530:01C276BE]
X-Loop: cypherpunks@lne.com
X-spam: 25 
Old-Subject:  Re: Intel Security processor + a question
Subject:   Re: Intel Security processor + a question
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 3588
Lines: 79


OK...a follow up question (actually, really the same question in a diferent 
form).

Let's say I had a crypto chip or other encryption engine, the code of which 
I could not see. Now what if someone had monkeyed with it so that (let's 
say) the pool of prime numbers it drew from was actually a subset of the 
real pool that should be available for encryption. Let's also say that 
"somebody" knows this, and can search byte streams for known strings of 
products of these primes. They can then break this cypherstream very easily.

Meanwhile, someone who doesn't know that the code's been tampered with can 
try to break the cypherstream using traditional brute force methods, and it 
will appear that this is a truly hard-encrypted message.

Now don't get hung up on the details of what I'm saying here...I don't know 
if this particular example is possible or not. I'm just wondering iF it is 
possible to tamper with crypto code (particularly as embedded on a chip) so 
that it appears to all regular users not to have been tampered with, but 
meanwhile it allows certain privileged users to access encrypted streams 
fairly easily.

AND if this is possible, is there some way to examine the encrypted output 
and then, say, search for unusual frequency traces of certain sequences, and 
determine tha the code has been tampered with? Or are there ways to tamper 
with good cryptocode in ways that can never be detected with actually 
looking at the originating code?






>From: "Tyler Durden" <camera_lumina@hotmail.com>
>To: camera_lumina@hotmail.com, cypherpunks@lne.com
>Subject: Intel Security processor + a question
>Date: Thu, 17 Oct 2002 11:49:33 -0400
>
>Intel is moving Security onto its Network processor chips...a quote also 
>follows.
>
>http://www.lightreading.com/document.asp?site=lightreading&doc_id=22749
>
>
>
>(Begin quote)
>For now, Intel is tackling very high- and low-end systems. The IXP2850 is 
>derived from the IXP2800, which targets 10-Gbit/s line speeds. And back in 
>February, Intel released the IXP425, a network processor with encryption 
>hardware included, targeting low-end boxes such as enterprise routers (see 
>Intel: The Prince of Processors? ).
>
>For both chips, Intel developed its own hardware to handle the DES, triple 
>DES, AES, and SHA-1 encryption standards. In the case of the IXP2850, Intel 
>had left room in the IXP 2800 to add these hardware blocks, because 
>potential customers had shown enough interest in security. We thought 
>about adding crypto [to the IXP2800] as we were building it from the ground 
>up, says Rajneesh Gaur, Intel senior product marketing manager.
>(End quote)
>
>
>Got a question for the cognoscenti amongst us...
>If crypto is performed by hardware, how sure can users/designers be that it 
>is truly secure (since one can't examine the code)? Is there any way to 
>determine whether standard forms of encryption have been monkeyed with in 
>some way (ie, to make those with certain backdoor keys have access at will, 
>and yet still conform to he standard as far users can see)?
>And, are hardware-based encryption implementations considered suspect from 
>the standard by the more "careful" parts of the crypto community?
>
>
>_________________________________________________________________
>Get faster connections -- switch to MSN Internet Access! 
>http://resourcecenter.msn.com/access/plans/default.asp


_________________________________________________________________
Unlimited Internet access for only $21.95/month.  Try MSN! 
http://resourcecenter.msn.com/access/plans/2monthsfree.asp

