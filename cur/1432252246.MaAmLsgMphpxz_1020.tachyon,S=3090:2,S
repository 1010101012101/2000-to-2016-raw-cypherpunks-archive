From owner-cypherpunks@lne.com  Mon Sep 22 13:35:23 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p3/8.11.6-03-31-03) with ESMTP id h8MHZKC12767
	for <rsw@jfet.org>; Mon, 22 Sep 2003 13:35:21 -0400
Received: (from majordom@localhost)
	by slack.lne.com (8.12.5/8.12.5) id h8ME4WiE029001
	for cypherpunks-goingout345; Mon, 22 Sep 2003 07:04:32 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
X-Authentication-Warning: waste.minder.net: majordom set sender to
  owner-cypherpunks@minder.net using -f
Message-ID: <3F6F0105.3090903@students.bbk.ac.uk>
Date: Mon, 22 Sep 2003 15:02:45 +0100
From: ken <bbrow07@students.bbk.ac.uk>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0.2)
  Gecko/20030208 Netscape/7.02
X-Accept-Language: en, en-us
MIME-Version: 1.0
To: cypherpunks@minder.net
Old-Subject: Re: Encrypted search?
References: <BAY7-F30kfkyjlKqwWi0000c290@hotmail.com>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Old-Subject: Re: Encrypted search?
X-Spam-Status: No, hits=-35.8 required=10.0
  tests=BAYES_01,EMAIL_ATTRIBUTION,FROM_ENDS_IN_NUMS,
  QUOTED_EMAIL_TEXT,RCVD_IN_OSIRUSOFT_COM,REFERENCES,
  REPLY_WITH_QUOTES,USER_AGENT_MOZILLA_UA,X_AUTH_WARNING autolearn=ham
  version=2.53
X-Spam-Checker-Version: SpamAssassin 2.53 (1.174.2.15-2003-03-30-exp)
Subject: Re: Encrypted search?
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1420
Lines: 28

Tyler Durden wrote:

> Let's say I push out a list I'd like to keep secret to some client 
> machine. The user of that machine must enter some ID or other piece of 
> information. I want the client machine to perform a search of that ID vs 
> the contents of a list (again, resident locally on that machine), but I 
> don't want the user to be able to see the other entries of that list.

[...]

> When the search is performed, the "stupid" thing to do (I 
> think...someone correct me) is to take the user's ID, encrypt it, and 
> then determine if matches an encypted member of the list (and I don't 
> see encrypted each entry individually as a desirable thing). I am 
> assuming that this allows a savvy user to reverse-engineer the encryption.

This is, roughly, how traditional Unix password security works. 
Reverse-engineering the encryption may or may not be possible, and 
  ought not to matter if you have used a strong enough method and 
long enough keys. And anyway, if this is running on the client 
machine then they already have a program that can do the work. 
What is possible is brute-forcing by encrypting the whole 
dictionary and trying every word one by one.

If your algorithm is strong enough, your key long enough, and 
above all if the space from which the plaintext is taken is large 
enough, than this sort of approach can be made sort of safe enough 
for most applications. But why bother?

