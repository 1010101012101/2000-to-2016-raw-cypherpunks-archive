From rswatjfet.org+caf_=rsw=jfet.org@gmail.com  Mon Jul 28 12:07:33 2014
Return-Path: <rswatjfet.org+caf_=rsw=jfet.org@gmail.com>
Received: from mail-pa0-f49.google.com (mail-pa0-f49.google.com [209.85.220.49])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6SG7W6b016679
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <rsw@jfet.org>; Mon, 28 Jul 2014 12:07:33 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=zRPQ8hZJ;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: by mail-pa0-f49.google.com with SMTP id hz1so10738750pad.36
        for <rsw@jfet.org>; Mon, 28 Jul 2014 09:07:03 -0700 (PDT)
X-Received: by 10.69.26.134 with SMTP id iy6mr11496280pbd.115.1406563623076;
        Mon, 28 Jul 2014 09:07:03 -0700 (PDT)
X-Forwarded-To: rsw@jfet.org
X-Forwarded-For: rswatjfet.org@gmail.com rsw@jfet.org
Delivered-To: rswatjfet.org@gmail.com
Received: by 10.70.3.197 with SMTP id e5csp231336pde;
        Mon, 28 Jul 2014 09:07:02 -0700 (PDT)
X-Received: by 10.68.232.34 with SMTP id tl2mr39386990pbc.81.1406563622295;
        Mon, 28 Jul 2014 09:07:02 -0700 (PDT)
Received: from localhost (antiproton.jfet.org. [209.141.47.85])
        by mx.google.com with ESMTPS id pi2si15736729pbb.203.2014.07.28.09.07.01
        for <rswATjfet.org@gmail.com>
        (version=TLSv1.2 cipher=RC4-SHA bits=128/128);
        Mon, 28 Jul 2014 09:07:01 -0700 (PDT)
Received-SPF: neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) client-ip=209.141.47.85;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net;
       dkim=fail header.i=@gmail.com
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6SG6ecZ016648;
	Mon, 28 Jul 2014 12:06:44 -0400
Received: from mail-oi0-f53.google.com (mail-oi0-f53.google.com
 [209.85.218.53])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6SG6ZUB016644
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Mon, 28 Jul 2014 12:06:37 -0400
Received: by mail-oi0-f53.google.com with SMTP id e131so6246179oig.40
 for <cypherpunks@cpunks.org>; Mon, 28 Jul 2014 09:06:07 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:sender:in-reply-to:references:from:date:message-id
 :subject:to:cc:content-type;
 bh=744LaTcgHRylDVOMJzHaPKC+09c2VnVkf7RuyQqQZl0=;
 b=zRPQ8hZJaOphaBIke+alKRqaYumLCrJEjJ7U82el/99X3K5AG+HjOBckqhKs4+mFwi
 3A8sKdjDYgRC88stvCIxzw1UrFYr8bSej5E9m85xhjecIIiVnkSi3dHs8yR0omv17PQE
 ZVZoxJ1apORyn2YVZfKL3xqnp+xmWElOO/aWR1thcSat+bZVi7lavGyHzSSpwfFMphpQ
 T94PKekHM6ElWCUIwpa4W15+kGgGomNf7xf37jt5ioYstqLBYaODvh77bkil+d55F1Ec
 hvWeLX+mgo2SyZ8ulXUfOFYQzZUmvdSpTVX6CvbdJk8bQ+AlC93RlLcxBHpTTeT5hxst
 NtGQ==
X-Received: by 10.182.106.1 with SMTP id gq1mr51243045obb.30.1406563567586;
 Mon, 28 Jul 2014 09:06:07 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.76.73.3 with HTTP; Mon, 28 Jul 2014 09:05:47 -0700 (PDT)
In-Reply-To: <20140728152650.GA2531@sivokote.iziade.m$>
References: <20140728152650.GA2531@sivokote.iziade.m$>
Date: Mon, 28 Jul 2014 18:05:47 +0200
X-Google-Sender-Auth: cuVRLqaGZZmDfhKR50WTXFR7PXY
Message-ID: <CAHWD2r+c0dA7oxysb69oZEcxcADUPfGLpLd2X0Q3hU1iTxcCHg@mail.gmail.com>
Subject: Re: Alleged "microkernel mathematically proven to be bug free"
To: Georgi Guninski <guninski@guninski.com>
Content-Type: multipart/alternative; boundary=e89a8fb1ebbaccd6e504ff4319d9
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
From: =?UTF-8?Q?Lodewijk_andr=C3=A9_de_la_porte?= <l@odewijk.nl>
X-Gspam-Loop: antiproton.jfet.org
Status: O
Content-Length: 4090
Lines: 83

--e89a8fb1ebbaccd6e504ff4319d9
Content-Type: text/plain; charset=UTF-8

<3

I have a rough outline for a "cloud computing grid" that verifiably:

* Exists on many hardware nodes that can be run by untrusted third parties,
as the hardware is "tamper evident" and the "cloud computing grid" is self
healing and distributing.
* Can run programs in a way that geographic location is unknowable - Onion
routing, amongst other features, causes programs to seemingly run on every
node in the network
* Cannot inspect what runs on it - the microkernel programs cannot read
what the programs are doing, nor can programs contact one another unless
they are instances (that potentially run on another hardware node).
* Is fault tolerant, automatically scaling, etc.
* Can still be addressed from the Internet or other networks

You could run something like your Bitcoin wallet in it. It's really
geodistributed, automatically fault tolerant, etc. There's no way to tamper
with the programs running, except as specified before a cluster was created.

Right now you're always stuck with an insane amount of local law, hardware
issues (and features), fault tolerance, accessibility, etc.

With this you could run a program in a nigh-perfect vacuum. Your program
would be networked, but not in any specific place. Nobody can know what it
does, but it can compute and it can communicate as it wishes. Depending on
the grid (grids have to be manifactured in one go, checked by several third
parties, distributed, set and forget) there's some pricing scheme or
whatnot.

But it absolutely requires a verified microkernel. I'm *very *excited to
see that we're making progress towards it.


If you're a secure kernel developer, Onion routing expert, fantastic C
coder or technology investor, and this triggered your interests, please
contact me!

--e89a8fb1ebbaccd6e504ff4319d9
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">&lt;3<div><br></div><div>I have a rough outline for a &quo=
t;cloud computing grid&quot; that verifiably:</div><div><br></div><div>* Ex=
ists on many hardware nodes that can be run by untrusted third parties, as =
the hardware is &quot;tamper evident&quot; and the &quot;cloud computing gr=
id&quot; is self healing and distributing.</div>

<div>* Can run programs in a way that geographic location is unknowable - O=
nion routing, amongst other features, causes programs to seemingly run on e=
very node in the network</div><div>* Cannot inspect what runs on it - the m=
icrokernel programs cannot read what the programs are doing, nor can progra=
ms contact one another unless they are instances (that potentially run on a=
nother hardware node).</div>

<div>* Is fault tolerant, automatically scaling, etc.</div><div>* Can still=
 be addressed from the Internet or other networks</div><div><br></div><div>=
You could run something like your Bitcoin wallet in it. It&#39;s really geo=
distributed, automatically fault tolerant, etc. There&#39;s no way to tampe=
r with the programs running, except as specified before a cluster was creat=
ed.</div>

<div><br></div><div>Right now you&#39;re always stuck with an insane amount=
 of local law, hardware issues (and features), fault tolerance, accessibili=
ty, etc.</div><div><br></div><div>With this you could run a program in a ni=
gh-perfect vacuum. Your program would be networked, but not in any specific=
 place. Nobody can know what it does, but it can compute and it can communi=
cate as it wishes. Depending on the grid (grids have to be manifactured in =
one go, checked by several third parties, distributed, set and forget) ther=
e&#39;s some pricing scheme or whatnot.</div>

<div><br>But it absolutely requires a verified microkernel. I&#39;m <i>very=
 </i>excited to see that we&#39;re making progress towards it.</div><div><b=
r></div><div><br></div><div>If you&#39;re a secure kernel developer, Onion =
routing expert, fantastic C coder or technology investor, and this triggere=
d your interests, please contact me!</div>

</div>

--e89a8fb1ebbaccd6e504ff4319d9--

