From rswatjfet.org+caf_=rsw=jfet.org@gmail.com  Thu Jul 24 10:49:19 2014
Return-Path: <rswatjfet.org+caf_=rsw=jfet.org@gmail.com>
Received: from mail-pd0-f172.google.com (mail-pd0-f172.google.com [209.85.192.172])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6OEnI57021667
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <rsw@jfet.org>; Thu, 24 Jul 2014 10:49:19 -0400
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="2048-bit key; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=xmBPjYBt;
	dkim-adsp=pass; dkim-atps=neutral
Received: by mail-pd0-f172.google.com with SMTP id ft15so3809473pdb.31
        for <rsw@jfet.org>; Thu, 24 Jul 2014 07:49:04 -0700 (PDT)
X-Received: by 10.66.252.161 with SMTP id zt1mr11008431pac.41.1406213344125;
        Thu, 24 Jul 2014 07:49:04 -0700 (PDT)
X-Forwarded-To: rsw@jfet.org
X-Forwarded-For: rswatjfet.org@gmail.com rsw@jfet.org
Delivered-To: rswatjfet.org@gmail.com
Received: by 10.70.3.197 with SMTP id e5csp202916pde;
        Thu, 24 Jul 2014 07:49:03 -0700 (PDT)
X-Received: by 10.68.230.166 with SMTP id sz6mr11142602pbc.32.1406213343204;
        Thu, 24 Jul 2014 07:49:03 -0700 (PDT)
Received: from localhost (antiproton.jfet.org. [209.141.47.85])
        by mx.google.com with ESMTPS id kn9si3128219pdb.151.2014.07.24.07.49.03
        for <rswATjfet.org@gmail.com>
        (version=TLSv1.2 cipher=RC4-SHA bits=128/128);
        Thu, 24 Jul 2014 07:49:03 -0700 (PDT)
Received-SPF: neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) client-ip=209.141.47.85;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net;
       dkim=pass header.i=@gmail.com;
       dmarc=pass (p=NONE dis=NONE) header.from=gmail.com
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6OEmODK021643;
	Thu, 24 Jul 2014 10:48:30 -0400
Received: from mail-vc0-f177.google.com (mail-vc0-f177.google.com
 [209.85.220.177])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6OEmKpM021629
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 24 Jul 2014 10:48:22 -0400
Received: by mail-vc0-f177.google.com with SMTP id hy4so5004052vcb.8
 for <cypherpunks@cpunks.org>; Thu, 24 Jul 2014 07:48:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:from:date:message-id:subject:to
 :cc:content-type;
 bh=j/5CKYtzPlQDatVfT6IVyDfTvRcHui9Il+X9HuTqmVo=;
 b=xmBPjYBtq9XgZwJmnVubkOe2d4HTRQ4k7ClOxeAHllsfbbDxijx6W/GtmWwFW7mRW5
 CWMvjcpOUeyBBHis0VPxjvaabsPuG55c3skFC8nAOXkfIdI7KDBVsOM/r5Z50avbfSoD
 Wtlh5FAXC5OgJkwLg0WZvB5Ki2I5ffbZucOVNB7dYVlywW84ZV+q6giubluB/lNXvoxL
 mSBvhjfxWjHKA0Piok28B2tPw7e/8tkeXiXCLUgh0zJyjX/3g36HzHYxbRGbeX8HF2Xh
 USvfrcYRpTR8aEUKSJMJVyWQv8d0x/nKlcQ27dl9XO7C/XHWq9zqeMhsZFXjsHSH1Hyj
 B/Hg==
X-Received: by 10.220.95.132 with SMTP id d4mr12896498vcn.33.1406213285118;
 Thu, 24 Jul 2014 07:48:05 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.58.155.135 with HTTP; Thu, 24 Jul 2014 07:47:45 -0700 (PDT)
In-Reply-To: <CAJVRA1Q5K2vQoXZ6PuY8oYkee9mrA=Kr__W1yj1A2PhLfh7HgQ@mail.gmail.com>
References: <CAM_a8JzDYmrp8z5ga3sD2dGnR_PNVhY1a72JpA=b6zUU0UbLvw@mail.gmail.com>
 <CAJVRA1Q5K2vQoXZ6PuY8oYkee9mrA=Kr__W1yj1A2PhLfh7HgQ@mail.gmail.com>
Date: Thu, 24 Jul 2014 10:47:45 -0400
Message-ID: <CAKtE3zdfA5XHpx-+_KgNZ7BK6N+M5MmYRmUd+Bgb788w4dk3xA@mail.gmail.com>
Subject: Re: a catalog of bugs, or "Why to disable assembly optimization"
To: coderman <coderman@gmail.com>
Content-Type: multipart/alternative; boundary=089e0158b2f65689e604fef18bd3
Cc: cpunks <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
From: Travis Biehn <tbiehn@gmail.com>
X-Gspam-Loop: antiproton.jfet.org
Status: O
Content-Length: 12500
Lines: 277

--089e0158b2f65689e604fef18bd3
Content-Type: text/plain; charset=UTF-8

So good. So very good.

http://pdos.csail.mit.edu/papers/stack:sosp13.pdf

Or - a different reason to compile everything yourself. SlowOS plz.

-Travis


On Tue, Jul 22, 2014 at 6:58 PM, coderman <coderman@gmail.com> wrote:

> ---------- Forwarded message ----------
> From: Zooko Wilcox-OHearn <zooko@leastauthority.com>
> Date: Tue, Jul 22, 2014 at 12:23 PM
> Subject: a catalog of bugs, or "Why to disable assembly optimization"
>
>
> Folks:
>
> We had already agreed to disable assembly optimizations in pycryptopp,
> because there seem to have been a lot of bugs in the optimized
> assembly code in the past, and because the added speed really makes no
> difference to our uses, as far as I know.
>
> However, in order to explain and justify to other people (e.g. Debian
> packagers) why we are doing this, and why they should consider doing
> the same thing themselves, I just read through the entire history of
> issues in pycryptopp and classified whether they were runtime errors
> (and therefore potential security bugs) or build-time errors
> (therefore probably not), and whether they would have been avoided if
> we had been disabling assembly optimizations all along. Here are the
> results. They clearly show that we should disable the optimized
> assembly! About half of all the security-threatening bugs we've had
> would never have been an issue if we'd avoided assembly from the
> beginning.
>
> By the way, in my opinion the author of Crypto++, Wei Dai, is an
> *exceptionally* skilled, careful, and experienced coder, and I would
> assume that if Crypto++ has had this many security-threatening bugs in
> its optimized assembly code, then other crypto libraries that also use
> optimized assembly code also have at least as many.
>
> Here's the ticket to track this issue:
>
> https://tahoe-lafs.org/trac/pycryptopp/ticket/85
>
> bugs that cause run-time failures
> =================================
>
> (These bugs are potential security issues.)
>
> * would have been avoided by DISABLE_ASM:
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/24
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/31
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/45 (three
> *different* bugs in the assembly implementation)
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/67
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/84
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/86
>
> * unclear if it would have been avoided if we'd used DISABLE_ASM:
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/65
>
> * would not have been avoided by DISABLE_ASM:
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/17
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/44
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/83
>
> * would not have been avoided by DISABLE_ASM (but would have been
> avoided by using cffi instead of CPython API)
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/19
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/70
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/80
>
> * would have been avoided if we *didn't* use DISABLE_ASM! (A bug only
> in the non-ASM version!)
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/66
>
>
> bugs that cause deterministic build or compilation failures
> ===========================================================
>
> (These bugs are *typically* not potential security issues but they can
> be, and in any case they are engineering/deployment issues.)
>
> * would have been avoided by DISABLE_ASM:
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/37
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/96
>
> * would not have been avoided by DISABLE_ASM:
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/22
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/23
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/32
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/39
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/62
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/77
>   - https://tahoe-lafs.org/trac/pycryptopp/ticket/78
>
>
> --
> Regards,
>
> Zooko Wilcox-O'Hearn
>
> Founder, CEO, and Customer Support Rep
> https://LeastAuthority.com
> Freedom matters.
>



-- 
Twitter <https://twitter.com/tbiehn> | LinkedIn
<http://www.linkedin.com/in/travisbiehn> | GitHub <http://github.com/tbiehn>
| TravisBiehn.com <http://www.travisbiehn.com> | Google Plus
<https://plus.google.com/+TravisBiehn>

--089e0158b2f65689e604fef18bd3
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>So good. So very good.</div><div><br></div><div><a hr=
ef=3D"http://pdos.csail.mit.edu/papers/stack:sosp13.pdf" target=3D"_blank">=
http://pdos.csail.mit.edu/papers/stack:sosp13.pdf</a><br></div><div><br></d=
iv>

<div>Or - a different reason to compile everything yourself. SlowOS plz.</d=
iv><div><br></div><div>-Travis</div>
</div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Tue,=
 Jul 22, 2014 at 6:58 PM, coderman <span dir=3D"ltr">&lt;<a href=3D"mailto:=
coderman@gmail.com" target=3D"_blank">coderman@gmail.com</a>&gt;</span> wro=
te:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">---------- Forwarded message ----------<br>
From: Zooko Wilcox-OHearn &lt;<a href=3D"mailto:zooko@leastauthority.com">z=
ooko@leastauthority.com</a>&gt;<br>
Date: Tue, Jul 22, 2014 at 12:23 PM<br>
Subject: a catalog of bugs, or &quot;Why to disable assembly optimization&q=
uot;<br>
<br>
<br>
Folks:<br>
<br>
We had already agreed to disable assembly optimizations in pycryptopp,<br>
because there seem to have been a lot of bugs in the optimized<br>
assembly code in the past, and because the added speed really makes no<br>
difference to our uses, as far as I know.<br>
<br>
However, in order to explain and justify to other people (e.g. Debian<br>
packagers) why we are doing this, and why they should consider doing<br>
the same thing themselves, I just read through the entire history of<br>
issues in pycryptopp and classified whether they were runtime errors<br>
(and therefore potential security bugs) or build-time errors<br>
(therefore probably not), and whether they would have been avoided if<br>
we had been disabling assembly optimizations all along. Here are the<br>
results. They clearly show that we should disable the optimized<br>
assembly! About half of all the security-threatening bugs we&#39;ve had<br>
would never have been an issue if we&#39;d avoided assembly from the<br>
beginning.<br>
<br>
By the way, in my opinion the author of Crypto++, Wei Dai, is an<br>
*exceptionally* skilled, careful, and experienced coder, and I would<br>
assume that if Crypto++ has had this many security-threatening bugs in<br>
its optimized assembly code, then other crypto libraries that also use<br>
optimized assembly code also have at least as many.<br>
<br>
Here&#39;s the ticket to track this issue:<br>
<br>
<a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/85" target=3D"_bla=
nk">https://tahoe-lafs.org/trac/pycryptopp/ticket/85</a><br>
<br>
bugs that cause run-time failures<br>
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D<br>
<br>
(These bugs are potential security issues.)<br>
<br>
* would have been avoided by DISABLE_ASM:<br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/24" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/24</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/31" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/31</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/45" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/45</a> (three<br=
>
*different* bugs in the assembly implementation)<br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/67" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/67</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/84" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/84</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/86" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/86</a><br>
<br>
* unclear if it would have been avoided if we&#39;d used DISABLE_ASM:<br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/65" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/65</a><br>
<br>
* would not have been avoided by DISABLE_ASM:<br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/17" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/17</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/44" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/44</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/83" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/83</a><br>
<br>
* would not have been avoided by DISABLE_ASM (but would have been<br>
avoided by using cffi instead of CPython API)<br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/19" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/19</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/70" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/70</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/80" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/80</a><br>
<br>
* would have been avoided if we *didn&#39;t* use DISABLE_ASM! (A bug only<b=
r>
in the non-ASM version!)<br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/66" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/66</a><br>
<br>
<br>
bugs that cause deterministic build or compilation failures<br>
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D<br>
<br>
(These bugs are *typically* not potential security issues but they can<br>
be, and in any case they are engineering/deployment issues.)<br>
<br>
* would have been avoided by DISABLE_ASM:<br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/37" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/37</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/96" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/96</a><br>
<br>
* would not have been avoided by DISABLE_ASM:<br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/22" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/22</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/23" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/23</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/32" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/32</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/39" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/39</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/62" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/62</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/77" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/77</a><br>
=C2=A0 - <a href=3D"https://tahoe-lafs.org/trac/pycryptopp/ticket/78" targe=
t=3D"_blank">https://tahoe-lafs.org/trac/pycryptopp/ticket/78</a><br>
<br>
<br>
--<br>
Regards,<br>
<br>
Zooko Wilcox-O&#39;Hearn<br>
<br>
Founder, CEO, and Customer Support Rep<br>
<a href=3D"https://LeastAuthority.com" target=3D"_blank">https://LeastAutho=
rity.com</a><br>
Freedom matters.<br>
</blockquote></div><br><br clear=3D"all"><div><br></div>-- <br><div dir=3D"=
ltr"> <a href=3D"https://twitter.com/tbiehn" target=3D"_blank">Twitter</a> =
| <a href=3D"http://www.linkedin.com/in/travisbiehn" target=3D"_blank">Link=
edIn</a> | <a href=3D"http://github.com/tbiehn" target=3D"_blank">GitHub</a=
> | <a href=3D"http://www.travisbiehn.com" target=3D"_blank">TravisBiehn.co=
m</a>=C2=A0| <a href=3D"https://plus.google.com/+TravisBiehn" target=3D"_bl=
ank">Google Plus</a><br>

</div>
</div>

--089e0158b2f65689e604fef18bd3--

