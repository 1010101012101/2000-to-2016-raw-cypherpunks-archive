From owner-cypherpunks@lne.com  Tue Oct 14 05:48:23 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p3/8.11.6-03-31-03) with ESMTP id h9E9mLR18368
	for <rsw@jfet.org>; Tue, 14 Oct 2003 05:48:22 -0400
Received: from slack.lne.com (slack.lne.com [127.0.0.1])
	by slack.lne.com (8.12.10/8.12.10) with ESMTP id h9E9bJu8005766
	(version=TLSv1/SSLv3 cipher=EDH-DSS-DES-CBC3-SHA bits=168 verify=NO)
	for <cypherpunks-goingout345@slack.lne.com>; Tue, 14 Oct 2003 02:37:19 -0700
Received: (from majordom@localhost)
	by slack.lne.com (8.12.10/8.12.10/Submit) id h9E9bJQ3005765
	for cypherpunks-goingout345; Tue, 14 Oct 2003 02:37:19 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Date: Tue, 14 Oct 2003 11:36:58 +0200 (CEST)
From: Thomas Shaddack <shaddack@ns.arachne.cz>
X-X-Sender: shad@Zeta
To: Guerry Semones <gsemones@mstar2.net>
cc: cypherpunks@lne.com
Subject: Re: P2P Encrypted VOIP
In-Reply-To: <200310131029.AA142475492@mail.mstar2.net>
Message-ID: <Pine.LNX.4.58.0310141119580.21919@Zeta>
References: <200310131029.AA142475492@mail.mstar2.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1619
Lines: 35

On Mon, 13 Oct 2003, Guerry Semones wrote:
> I caught the announcement this morning from Skype concerning their
> P2P-based VOIP (free) product.  Apparently this is the Kazaa
> founder's new company.  The communications are supposed to be
> encrypted, etc., etc.

This was mentioned on a SepakFreely list as well.

In short:

Platform-locked (Windows-only).
Closed-source (dubious crypto implementation).
Proprietary technology (compatible only with itself).
Vendor-dependence.

The P2P-ness is a good idea, though. Why don't publish contact information
in eg. Gnutella, as a small text (eg. XML) file, searchable by name? It
shouldn't be impossible to write a helper program for SpeakFreely to
access those. Several methods are possible, including yellow-pages servers
in a DNS-like system; employing more than one at once could make it robust
enough for practical use.

Alternatively, why don't use an IM-like infrastructure for the call
negotiations? Could we use IM of sort to set up the call? Combination of
SpeakFreely with Jabber could solve most of the problems, from the contact
publishing (where the "phone number" could equal the Jabber ID) to
connection negotiation itself (where Jabber can provide the backbone for
the signalling, telling each side the IP on which the communication
partner resides, or if there is NAT involved and what measure to use
then). Something principially similar to users telling each other over
Jabber how to set the VoIP software, but automated. Jabber protocol is
well-documented, clients exist for next to everything, next to everybody
can run a server.

Opinions, comments?

