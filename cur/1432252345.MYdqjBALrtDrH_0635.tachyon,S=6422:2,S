From cypherpunks-bounces@cpunks.org  Tue Jan 14 06:18:04 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0EBH7sE022324;
	Tue, 14 Jan 2014 06:17:13 -0500
Received: from mx.daemon.de (mx.daemon.de [78.47.130.37])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0EBH30Q022320
 (version=TLSv1/SSLv3 cipher=CAMELLIA256-SHA bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Tue, 14 Jan 2014 06:17:06 -0500
Received: from r4.daemon.de (mx.daemon.de [78.47.130.37])
 by mx.daemon.de (Postfix) with SMTP id F3911967DB;
 Tue, 14 Jan 2014 12:16:53 +0100 (CET)
Received: by r4.daemon.de (sSMTP sendmail emulation);
 Tue, 14 Jan 2014 12:16:53 +0100
Date: Tue, 14 Jan 2014 12:16:53 +0100
From: Thomas von Dein <tom@vondein.org>
To: cypherpunks@cpunks.org
Subject: consistent pcp/pbp formats (was: Curve p25519 Replacements for
 GnuPG?(x2 now) ..)
Message-ID: <20140114111653.GD3900@r4>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="3MwIy2ne0vdjdPXF"
Content-Disposition: inline
User-Agent: Mutt/1.5.21 (2010-09-15)
X-mx-MailScanner-Information: Please contact Tom for more information
X-mx-MailScanner-ID: F3911967DB.A469D
X-mx-MailScanner: Found to be clean
X-mx-MailScanner-From: tom@vondein.org
X-Spam-Status: No
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>


--3MwIy2ne0vdjdPXF
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

> consistent key formats are critical

more than fine with me.

> need to converge on:
> - endianness

I'm currently using big endian for multibyte values whereever they
appear. It's already verified to work on little and big endian platforms
(e.g. tested on aix/ppc)

> - coordinate representation x, x&y, x and sign ...
> or bits to show which of these ... perhaps borrow ANSI method

Could you please explain this further?

> - hint / indication of cipher suite / curve 

In pcp there's already such a hint included in exported keys, however
I'm not using it, since there's no choice of different curves in
libsodium so far. But it's on the list.

> - text encoding of binary format (ascii)

As already stated in the other subthread, I use Z85, while stef is using
base85. Since Z85 is a subset of base85, I'm pretty sure we can agree on
something.

> - human readable format

There's a human readable version of keys in pcp, but the tool itself
doesn't use it (example attached). It uses the z85 encoded binary part
of such a file.

pcp has some more fields stored in a key than pbp:

- a key id (e.g. 0x54E9C62E1852EBC5) which is required to identify a key
- some text fields (owner, mail)
- a serial number
- key format version number

I'm not sure, how stef solved the ed25519 issue (you can't use a
curve25519 secret key to create an ed25519 signature directly). After
some discussion on the libsodium mailinglist we came up with this:

When the user generates a new key, the ed25519 secret key will be
generated first. The curve25519 secret will be derived from that, since
the ed25519 already contains a usable curve25519 key. In pcp I store
both of them for easier access, so the ed25519 and curve25519 secret and
public keys are stored, the secret keys are encrypted and I store the
nonce as well (see include/pcp/key.h).

Speaking of key encryption: @stef: according to your docs you're already
using scrypt() for key derivation. I'd like to use that as well, but
it's not part of libsodium (afaik), so I use my own method for this til
scrypt() is implemented in libsodium. That's because I want to avoid
writing crypto code myself.

Maybe we should iron out the details off-list?



bes,
Tom

-- 
    PGP Key: https://www.daemon.de/txt/tom-pgp-pubkey.txt
S/Mime Cert: https://www.daemon.de/txt/tom-smime-cert.pem
 Bitmessage: BM-2DAcYUx3xByfwbx2bYYxeXgq3zDscez8wC

-- 
This message has been scanned for viruses and
dangerous content by MailScanner, and is
believed to be clean.


--3MwIy2ne0vdjdPXF
Content-Type: text/plain; charset=us-ascii
Content-Disposition: attachment; filename=key-alicia-pub

----- BEGIN PCP PUBLIC KEY -----
  Generated by: Pretty Curved Privacy Version 0.1.5
        Cipher: CURVE25519-ED25519-SALSA20-POLY1305
         Owner: Alicia
          Mail: alicia@local
        Key-ID: 0x518602BB8F2D8C7F
    Public-Key: 1eRhFt(S$Aj[MWvNqYUgL(Mfpe86usIa9bvMwFc/7YTKo
 Creation Time: 2013-11-24T19:38:59
      Checksum: 12:FE:CA:AD:09:3E:9F:2D:3D:3A:E8:8C:86:D5:75:58
                C3:9C:5C:51:96:F7:1E:FA:0F:6D:75:1C:20:87:53:2D
 Serial Number: 0x49B690C5
   Key Version: 0x00000004
 Random Art ID: +----------------+
                |        .       |
                |     . . .      |
                |      o   o     |
                |     .   + .   .|
                |      . =   . +o|
                |       . .   o +|
                |              . |
                |                |
                +----------------+

1eRhFt(S$Aj[MWvNqYUgL(Mfpe86usIa9bvMwFc/7^R<>]u#!:jIb>^+HObot$n)mmc+r:n
}14[Zcddn*^b:<v}/uKAjgTDFi}ApL/jtC[47Yg8Rx#$)%tEdZp-Utr0(jI[%%jWp)pt0u+
ys-SF.j-oM(RKNiE:#[v*Bj+8&JH2rQ3EBCDs*J<U)sgcm[(7&=<3x/T:xEi6!Vz-#=C>:?
%SZKTmRJYshko/&>x<*o77i[XM3W^-(OEt>6IvJkr]D<&D4cN?z.&Gl//X/D[KsAOUwlMLz
fCSdcJ@a>wDHDFwj@M!RyQo.OT5jB0C5^&1J[>}d5bBR}lYwK+rlZfP&yme.D}}vxg6SW^U
U$(/JeTC(w6t.*v9LxYl>7kQ^W)!sN5pBP+P(eVO)5Wu7vqGT/x<<nyz!0i(06bWS5^dXUT
(DC.Y]e*d]r^yB>4zpJbh{}Smh5R?}42cWM@YOy+P2$/+Z#d=11b)8u]L[rh]7!DJglxt=-
E=o)OI1s)g(rbpa8I{AJKG[nkxhVzf(j}!tgtaLm7t]B-<xSdHrqbQzOFJFhW%Y@^q-/})F
iDJMM}@oSyNeIy=e#MrKPF-:M@TZ2D05hhG]LMB/p{h<E@UpM]]@>3=tBMsTL$Q27$%n+wm
72<g62jV:ZR&Ry&IxL)P]zK?r%I@:${D<z>F):2ctn)*?IOe64&^>h={:UX7fKdj{myaS[o
l>o*<]dLqBf/R6Bgd1q!mLWv>lPmEm0@@r308!$I.VfVp1wc4--q/(r
------ END PCP PUBLICKEY ------

--3MwIy2ne0vdjdPXF--

