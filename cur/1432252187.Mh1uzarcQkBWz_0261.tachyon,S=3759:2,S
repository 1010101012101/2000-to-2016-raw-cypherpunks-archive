From owner-cypherpunks@al-qaeda.net  Thu Dec  9 05:07:49 2004
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (majordomo@localhost.localdomain [127.0.0.1])
	by positron.jfet.org (8.13.1/8.13.1/Debian-19) with ESMTP id iB9B6ZYZ011144
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Thu, 9 Dec 2004 05:06:35 -0600
Received: (from majordomo@localhost)
	by positron.jfet.org (8.13.1/8.13.1/Submit) id iB9B6ZR3011143
	for cypherpunks-outgoing; Thu, 9 Dec 2004 05:06:35 -0600
Date: Thu, 9 Dec 2004 12:06:26 +0100
From: Eugen Leitl <eugen@leitl.org>
To: cypherpunks@al-qaeda.net
Subject: [p2p-hackers] Automatic reputation systems for P2P security?
  (fwd from paul@nmedia.net)
Message-ID: <20041209110626.GJ9221@leitl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
User-Agent: Mutt/1.4i
X-Converted-To-Plain-Text: from multipart/signed by demime 1.01d
X-Converted-To-Plain-Text: Alternative section used was text/plain
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
X-Keywords:                  
X-UID: 15120
Status: O
Content-Length: 2563
Lines: 64

----- Forwarded message from paul@nmedia.net -----

From: paul@nmedia.net
Date: Wed, 08 Dec 2004 19:42:50 -0500
To: p2p-hackers@zgp.org
Subject: [p2p-hackers] Automatic reputation systems for P2P security?
X-mailer: Pegasus Mail for Windows (v4.12a)
Reply-To: "Peer-to-peer development." <p2p-hackers@zgp.org>

I've seen several papers referencing advogato, among other things, and it
seems
like reputation/trust systems solve a lot of problems related to P2P
misbehavior. For
instance, clients can track other clients that send out bogus files, that
report a file
and then refuse to share it, that create bogus queueing data (big problem with
Emule/Edonkey networks), that might outright lie or otherwise cheat/steal and
attempt to disrupt a Chord network, etc.

It seems that scalar trust systems aren't going to do it because it is fairly
easy to
cheat by creating fake nodes, etc. So the real trick is the "group" or vector
trust
metrics.

However, that may solve the theoretical issue but I haven't seen any real
examples
of implementation. For instance, most of the papers referring to Advogato and
Advogato-like systems are based on the client-server model. And to implement
trust
networks as it appears that they are done now, the shear amount of data
necessary
makes them pretty darned unwieldy.

In addition, it is relatively well known (but time/bandwidth consuming) for a
node to
detect misbehaving nodes. But translating that to a trust metric, or even how
to
handle that on an implementation level has not been published anywhere.

SO...is there anything out there on this sort of idea, especially on the
implementation side? I mean...if this can be done in reality, then it has a
whole host
of uses even just in the small world of file sharing networks. As it stands,
any trust
metric that's been tried so far is easily tampered with by the clients.

_______________________________________________
p2p-hackers mailing list
p2p-hackers@zgp.org
http://zgp.org/mailman/listinfo/p2p-hackers
_______________________________________________
Here is a web page listing P2P Conferences:
http://www.neurogrid.net/twiki/bin/view/Main/PeerToPeerConferences

----- End forwarded message -----
--
Eugen* Leitl <a href="http://leitl.org">leitl</a>
______________________________________________________________
ICBM: 48.07078, 11.61144            http://www.leitl.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE
http://moleculardevices.org         http://nanomachines.net

[demime 1.01d removed an attachment of type application/pgp-signature]

