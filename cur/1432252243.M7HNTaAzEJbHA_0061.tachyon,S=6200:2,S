From owner-cypherpunks@lne.com  Tue Jun  3 09:08:40 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h53D8bq27991
	for <rsw@jfet.org>; Tue, 3 Jun 2003 09:08:38 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h53CkcNZ003485
	for cypherpunks-goingout345; Tue, 3 Jun 2003 05:46:38 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Message-ID: <3EDC9725.6588CFEA@systemics.com>
Date: Tue, 03 Jun 2003 08:40:05 -0400
From: Ian Grigg <iang@systemics.com>
X-Mailer: Mozilla 4.79 [en] (X11; U; Linux 2.4.2 i386)
X-Accept-Language: en
MIME-Version: 1.0
To: EKR <ekr@rtfm.com>
Cc: Eric Murray <ericm@lne.com>, Scott Guthery
  <sguthery@mobile-mind.com>,
   Rich Salz <rsalz@datapower.com>, Bill
  Stewart <bill.stewart@pobox.com>,
   cypherpunks <cypherpunks@lne.com>, cryptography@metzdowd.com
Subject: Re: Maybe It's Snake Oil All the Way Down
References: <A4628A7C27BF0D48847FD4AB8536731D1D0B59@blinky.mobile-mind.c
  <kjd6hxzc07.fsf@romeo.rtfm.com> <3EDB5A82.5B9C1073@systemics.com>
  <20030602092429.A13213@slack.lne.com> <3EDB9C13.AC1F7A9@systemics.com>
  <kjisroxpfk.fsf@romeo.rtfm.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 4719
Lines: 145

Eric Rescorla wrote:
> 
> Ian Grigg <iang@systemics.com> writes:
> > Eric Murray wrote:
> > It may be that the SSL underlying code is
> > perfect.  But that the application is weak
> > because the implementor didn't understand
> > how to drive it;  in which case, if he can
> > roll his own, he may end up with a more
> > secure overall package.
> I don't think this is likely to be true. In my experience,
> people who learn enough to design their own thing also learn
> enough to be able to do SSL properly.

True, although, that begs the question as
to how they learn.  Only by doing, I'd say.
I think one learns a lot more from making
mistakes and building ones own attempt than
following the words of wise.

> > > SSLv2, which was also designed by an
> > > individual, also had major flaws.  And that was the
> > > second cut!  I haven't seen v1, maybe Eric can
> > > shed some light on how bad it was.
> >
> > [ Someone commented before that v1 was not deemed
> > serious (Marc A?) and v2 was the more acceptable
> > starting point (Weinsteins?). ]
> That's not true as far as I know. V1 and V2 were designed
> by the same guy (Kipp Hickman). V1 is actually very similar
> to V2, except that the integrity stuff is all screwed up.
> As far as I can tell, the fact of the matter is that Kipp
> didn't understand the security issues until Abadi and
> to some extent Schiffman sold them some clues.


OK.  Then I am confused about the post that
came out recently.  It would be very interesting
to hear the story, written up.


> > Sure.  If someone does roll their own, then they
> > should get it reviewed.
> That's not my experience. WEP and PPTP come to mind.

Ah, good point:  There should be some
point on that list about building ones
cryptosystem outside the domain of an
institution, which tends to have too
many conflicting requirements, and
cannot limit itself to a simple system.

(And, yes, some protocols don't get
peer reviewed.  I wasn't debating that.)


> > But, that assumes an awful lot.  For a start,
> > that it exists.  SSL is touted as the answer
> > to everything, but it seems to be a connection
> > oriented protocol, which would make it less
> > use for speech, media, mail, chat (?), by way
> > of example.

> SSL is quite fine for chat, actually. It's one of the
> major things that people use for IM. The issue with
> speech and media isn't connection-orientation but
> rather datagram versus stream data.

I knew I was in trouble on chat, that's
why I stuck the interrogation mark in
there :-)  We recently added an email-like
capability to our (homegrown) crypto
system, and intend to expand that to
chat.  But, in order to do that, we
have to expand the crypto subsystem
(SOX) to include connection-oriented
modes.

[ Hence, an open question floating
around here is "why don't we use SSL"
which hasn't been definitively answered
as yet. ]

> > Then there is understanding, both of the
> > protocol, and the project's needs.  I know
> > that when I'm in a big project and I come
> > across a complex new requirement, often, it
> > is an open question as to whether make or
> > buy is the appropriate choice.  I do know
> > that 'make' will always teach me about the
> > subject, and eventually, it will teach me
> > which one to buy, or it will give me a
> > system tuned to my needs.

> The history of people who go this course suggests otherwise.
> They generally get lousy solutions.

I think it would be very interesting to
do a study of all the cryptosystems out
there and measure what succeeds, what
doesn't, what's secure, and what's not.

What cost too much money and what saved
money.

One of the issues that we see is that
too many security people assume that
"insecure" is "bad".  What they fail
to perceive is that an insecure system
is often sufficient for the times and
places.

WEP for example is perfectly fine, unless
you are attacked by a guy with a WEP
cracking kit!  Then it's a perfectly
lousy cryptosubsystem.

It's like the GSM story, whereby 8 years
down the track, Lucky Green cracked the
crypto by probing the SIMs to extract
the secret algorithm over a period of
many months (which algorithm then fell to
Ian Goldberg and Dave Wagner in a few hours).

In that case, some GSM guy said that, it
was good because it worked for 8 years,
that shows the design was good, doesn't
it?

And Lucky said, now you've got to replace
hundreds of millions of SIMs, that's got
to be a bad design, no?

(Lucky might be able to confirm the real
story there.)

Different ways of looking at the same
thing.  They are both valid points of
view.  To work out the difference, we
need to go to costs and benefits.  Who
won and who lost?  I never heard how
it panned out.

-- 
iang

