From cypherpunks-bounces@cpunks.org  Thu Jan 23 00:49:00 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0N5m0aU008581;
	Thu, 23 Jan 2014 00:48:08 -0500
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="1024-bit key; insecure key/testing"
	header.d=ritter.vg header.i=@ritter.vg header.b=xVzUXhCc;
	dkim-adsp=pass; dkim-atps=neutral
Received: from mail-pa0-f49.google.com (mail-pa0-f49.google.com
 [209.85.220.49])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0N5lvb9008577
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 23 Jan 2014 00:47:58 -0500
Received: by mail-pa0-f49.google.com with SMTP id hz1so1405792pad.22
 for <cypherpunks@cpunks.org>; Wed, 22 Jan 2014 21:47:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ritter.vg; s=vg;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :cc:content-type;
 bh=8VgQ7SXnSPP43K0sdf4uWUaXFlwkS9MI8wLCPZ2yMjc=;
 b=xVzUXhCczBKGKT/ZcGycvZe86S/RwdhcCqTnztePfTlm7nb+rclyk5LTyElzuIycAz
 i5c/Op5iS9STNKM+xyURmgd8rF4XeFpnU7eGQFeD7MJs4/v/HMQKO7tSMrB3jSBDM1Tc
 ivo52gw3ZmXLpv+IWtZaUlB+1vGRqzKxcgcjE=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20130820;
 h=x-gm-message-state:mime-version:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=8VgQ7SXnSPP43K0sdf4uWUaXFlwkS9MI8wLCPZ2yMjc=;
 b=mbnbUeb0AtbOF+XHWuA9b5EVYDuM8vJJnMz0cXzVWlA4W1PWzKtTpqmI3NR/2XqZ1A
 KH+R8JxFAI7R8zGZmwZwRqdFI17esprzzvh37kTXpXcXRKYxEVkvm78H5puCbqWyFM/8
 M8HJycYWXr8C/h8i4yo+cM3S8a8t/6T5uyUCyYkcErVaXnzj2LeZkvRTHhJZVEEsMPKP
 kFnCVjkotGTooMjb1piNEr+kizl5JUPhdYOUF3dhLcOaCFGqVLsPB7NjKZl6e/QlfIWF
 lRTqdTXqNxG7C0q4doaBWpGB/0sACDuvh+/vR9iXMjgc72z0jRFsWTLG7GWLgJmFraPa
 tErw==
X-Gm-Message-State: ALoCoQlb6G71sU4AsGmEYUuOX61Sijww4GU204EVNf62cS9mPFhZMyIZ5vtiyLXrzJLDfBeLH+yL
MIME-Version: 1.0
X-Received: by 10.68.197.99 with SMTP id it3mr6004306pbc.37.1390456068733;
 Wed, 22 Jan 2014 21:47:48 -0800 (PST)
Received: by 10.68.211.169 with HTTP; Wed, 22 Jan 2014 21:47:48 -0800 (PST)
Received: by 10.68.211.169 with HTTP; Wed, 22 Jan 2014 21:47:48 -0800 (PST)
In-Reply-To: <4869289.mJZM0fiGMF@lap>
References: <CAJVRA1R0_fvsd9jhQLYnOKU5L0ZGLXPAQOG_cPkZaKr32BL7-g@mail.gmail.com>
 <52DFDFCB.9090003@kjro.se>
 <CAJVRA1SofFbh7FNRzSR_bW3D0+X_4Ok54HXPDyUjm0m7ZV9J=g@mail.gmail.com>
 <4869289.mJZM0fiGMF@lap>
Date: Thu, 23 Jan 2014 00:47:48 -0500
Message-ID: <CA+cU71=7H1FfyEKMv5rRzWVV1ByczaOiGNLBv9azQmoQCYh4qA@mail.gmail.com>
Subject: Re: and not a single Tor hacker was surprised...
From: Tom Ritter <tom@ritter.vg>
To: rysiek <rysiek@hackerspace.pl>
Content-Type: multipart/alternative; boundary=e89a8ff1cb180d9a4d04f09cc834
Cc: cpunks <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>

--e89a8ff1cb180d9a4d04f09cc834
Content-Type: text/plain; charset=ISO-8859-1

On Jan 23, 2014 6:13 AM, "rysiek" <rysiek@hackerspace.pl> wrote:> About
this. Is there a way to serve 2 (or more) certificates for a given HTTPS
> server/domain? What I would like to have is a way to:
>  - serve a proper, vanilla SSL certificate bought from some provider for
the
>    general public accessing my service;
>  - serve a different cert (for example, using MonkeySphere) for those
that do
>    not trust (and with good reasons) major CA's.
>
> This would have to work for the *same* domain on the *same* webserver. I
> haven't yet seen a way to do this, so this might need implementing, but
maybe
> somebody here has heard about something along these lines?

There are a lot of things like this, but the big question is: how does the
user indicate to you which cert they want?

If it was via pubca.x.com or privca.x.com - that's easy just put the
different certs in the different sites.

But otherwise, you have to rely on quirks.

TLS allows you to send different certs to different users, but this is
based off the handshake and is for algorithm agility - not cert chaining.
EG I send ECDSA signed certs if I know you can handle them, and RSA if not.

You can also send two leaf certs, two cert chains, a cert and garbage, a
cert and a stego message - whatever. This is the closest to what you want,
but this is undefined behavior. Browsers may build a valid chain off the
public CA, and monkeysphere off the private* and it works perfect... Or the
browser may pop an invalid cert warning. It's undefined behavior. You'll
have to test, see what happens, and hope chrome doesn't break when it
updates every week.

-tom

* I realize monkey sphere doesn't use a private CA, just using it as an
example.

--e89a8ff1cb180d9a4d04f09cc834
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<p dir=3D"ltr"><br>
On Jan 23, 2014 6:13 AM, &quot;rysiek&quot; &lt;<a href=3D"mailto:rysiek@ha=
ckerspace.pl">rysiek@hackerspace.pl</a>&gt; wrote:&gt; About this. Is there=
 a way to serve 2 (or more) certificates for a given HTTPS<br>
&gt; server/domain? What I would like to have is a way to:<br>
&gt; =A0- serve a proper, vanilla SSL certificate bought from some provider=
 for the<br>
&gt; =A0 =A0general public accessing my service;<br>
&gt; =A0- serve a different cert (for example, using MonkeySphere) for thos=
e that do<br>
&gt; =A0 =A0not trust (and with good reasons) major CA&#39;s.<br>
&gt;<br>
&gt; This would have to work for the *same* domain on the *same* webserver.=
 I<br>
&gt; haven&#39;t yet seen a way to do this, so this might need implementing=
, but maybe<br>
&gt; somebody here has heard about something along these lines?<br></p>
<p dir=3D"ltr">There are a lot of things like this, but the big question is=
: how does the user indicate to you which cert they want?</p>
<p dir=3D"ltr">If it was via <a href=3D"http://pubca.x.com">pubca.x.com</a>=
 or <a href=3D"http://privca.x.com">privca.x.com</a> - that&#39;s easy just=
 put the different certs in the different sites.</p>
<p dir=3D"ltr">But otherwise, you have to rely on quirks.</p>
<p dir=3D"ltr">TLS allows you to send different certs to different users, b=
ut this is based off the handshake and is for algorithm agility - not cert =
chaining. EG I send ECDSA signed certs if I know you can handle them, and R=
SA if not.</p>

<p dir=3D"ltr">You can also send two leaf certs, two cert chains, a cert an=
d garbage, a cert and a stego message - whatever. This is the closest to wh=
at you want, but this is undefined behavior. Browsers may build a valid cha=
in off the public CA, and monkeysphere off the private* and it works perfec=
t... Or the browser may pop an invalid cert warning. It&#39;s undefined beh=
avior. You&#39;ll have to test, see what happens, and hope chrome doesn&#39=
;t break when it updates every week.</p>

<p dir=3D"ltr">-tom</p>
<p dir=3D"ltr">* I realize monkey sphere doesn&#39;t use a private CA, just=
 using it as an example.</p>

--e89a8ff1cb180d9a4d04f09cc834--

