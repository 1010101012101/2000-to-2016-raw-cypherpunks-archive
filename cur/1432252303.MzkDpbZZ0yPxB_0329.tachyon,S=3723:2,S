From owner-cypherpunks@lne.com  Sun Jun  8 18:16:12 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h58MGA615309
	for <rsw@jfet.org>; Sun, 8 Jun 2003 18:16:10 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h58M3ehq013102
	for cypherpunks-goingout345; Sun, 8 Jun 2003 15:03:40 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Message-Id: <6.0.0.9.2.20030608174846.04cf35e8@127.0.0.1>
X-Sender: dierks.org:tdierks@127.0.0.1
X-Mailer: QUALCOMM Windows Eudora Version 6.0.0.9 (Beta)
Date: Sun, 08 Jun 2003 18:03:29 -0400
To: "James A. Donald" <jamesd@echeque.com>, <cypherpunks@lne.com>,
   <cryptography@metzdowd.com>
From: Tim Dierks <tim@dierks.org>
Subject: Re: An attack on paypal
In-Reply-To: <3EE32428.1173.13AC2C1@localhost>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 2592
Lines: 49

At 02:55 PM 6/8/2003, James A. Donald wrote:
>Attached is a spam mail that constitutes an attack on paypal similar
>in effect and method to man in the middle.
>
>The bottom line is that https just is not working.  Its broken.
>
>The fact that people keep using shared secrets is a symptom of https
>not working.
>
>The flaw in https is that you cannot operate the business and trust
>model using https that you can with shared secrets.

I don't think it's https that's broken, since https wasn't intended to 
solve the customer authentication / authorization problem (you could try to 
use SSL's client certificates for that, but no one ever intended client 
certificate authentication to be a generalized transaction problem).

When I responded to this before, I thought you were talking about the 
server auth problem, not the password problem. I continue to feel that the 
server authentication problem is a very hard problem to solve, since 
there's few hints to the browser as to what the user's intent is.

The password problem does need to be solved, but complaining that HTTPS or 
SSL doesn't solve it isn't any more relevant than complaining that it's not 
solved by HTML, HTTP, and/or browser or server implementations, since any 
and all of these are needed in producing a new solution which can function 
with real businesses and real users. Let's face it, passwords are so deeply 
ingrained into people's lives that nothing which is more complex in any way 
than passwords is going to have broad acceptance, and any consumer-driven 
company is going to consider "easy" to be more important that "secure".

Right now, my best idea for solving this problem is to:
  - Standardize an HTML input method for <FORM> which does an SPEKE (or 
similar) mutual authentication.
  - Get browser makers to design better ways to communicate to users that 
UI elements can be trusted. For example, a proposal I saw recently which 
would have the OS decorate the borders of "trusted" windows with facts or 
images that an attacker wouldn't be able to predict: the name of your dog, 
or whatever. (Sorry, can't locate a link right now, but I'd appreciate one.)
  - Combine the two to allow sites to provide a user-trustable UI to enter 
a password which cannot be sucked down.
  - Evangelize to users that this is better and that they should be 
suspicious of any situation where they used such interface once, but now 
it's gone.

I agree that the overall architecture is broken; the problem is that it's 
broken in more ways than can just be fixed with any change to TLS/SSL or HTTPS.

  - Tim

