Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t5B9DqId017803;
	Thu, 11 Jun 2015 05:13:59 -0400
Received: from mail-03.1984.is (mail-03.1984.is [93.95.224.70])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t5B9DmoT017794
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 11 Jun 2015 05:13:51 -0400
Received: from [46.7.87.195] (helo=[192.168.0.13])
 by mail-03.1984.is with esmtpsa (TLSv1.2:DHE-RSA-AES128-SHA:128)
 (Exim 4.84) (envelope-from <cathalgarvey@cathalgarvey.me>)
 id 1Z2yYP-0003ha-3r
 for cypherpunks@cpunks.org; Thu, 11 Jun 2015 09:13:41 +0000
Message-ID: <5579513D.3080400@cathalgarvey.me>
Date: Thu, 11 Jun 2015 10:13:33 +0100
From: Cathal Garvey <cathalgarvey@cathalgarvey.me>
User-Agent: Mozilla/5.0 (X11; Linux x86_64;
 rv:31.0) Gecko/20100101 Thunderbird/31.7.0
MIME-Version: 1.0
To: cypherpunks@cpunks.org
Subject: Re: Best practice for safe viewing of PDFs posted to list
References: <op.xz0758lgbgbjo9@work-pc.lan>
 <20150610220139.GA12014@antiproton.jfet.org>
In-Reply-To: <20150610220139.GA12014@antiproton.jfet.org>
Content-Type: text/plain; charset=windows-1252; format=flowed
Content-Transfer-Encoding: 7bit
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 47

 > After all, pdf.js has no more or less permissions than any other JS
 > you might encounter in the wild

Are we sure about this? JS loaded from localhost can do some dangerous 
stuff because CORS doesn't apply anymore to local resources such as the 
filesystem. What context does pdf.js run in? If Mozilla didn't carefully 
sandbox it, and if it executes PDF Javascript embeds (does it?) then it 
could potentially have filesystem access?

This would mean that the closed-source spyware platform from Google 
might actually be safer in this case. But I don't know; pdf.js might be 
injected into the remote resource and therefore have CORS restrictions 
tied to the source domain. It's all implementation..

I'd be inclined to use pdfotext for textual data or GIMP as Steve 
recommended. You can probably use some combination of common PDF utils, 
headless GIMP, and ImageMagick to make a script to do the same thing 
instantaneously.

On 10/06/15 23:01, Riad S. Wahby wrote:
> Seth <list@sysfu.com> wrote:
>> Curious if the advice given above is still relevant and also what other on
>> the list recommend for safe viewing of PDFs.
>
> If your web browsing habits don't include NoScript, then you're likely no
> worse off using pdf.js to view PDFs than you are browsing arbitrary websites.
> After all, pdf.js has no more or less permissions than any other JS you might
> encounter in the wild; and since pdf.js is bundled with modern versions of
> Firefox, you might be inclined to think that it's likely non-malicious even if
> it's exploitable by rogue PDFs. But that's no worse than some JS malware you
> were fed via DNS poisoning or CDN hijacking.
>
> (This can be seen either as an implicit endorsement of pdf.js or of NoScript.)
>
> -=rsw
>

-- 
Scientific Director, IndieBio Irish Programme
  Now running in Cork, Ireland May->July
  Learn more at indieb.io and follow along!
Twitter:  @onetruecathal
Phone: +353876363185
miniLock: JjmYYngs7akLZUjkvFkuYdsZ3PyPHSZRBKNm6qTYKZfAM
peerio.com: cathalgarvey

