Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id u2PH2XkG030780;
	Fri, 25 Mar 2016 13:02:34 -0400
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="2048-bit key; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=IGkN7rYm;
	dkim-adsp=pass; dkim-atps=neutral
Received: from mail-qk0-f176.google.com (mail-qk0-f176.google.com
 [209.85.220.176])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id u2PH2UZl030776
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Fri, 25 Mar 2016 13:02:32 -0400
Received: by mail-qk0-f176.google.com with SMTP id s5so33692134qkd.0
 for <cypherpunks@cpunks.org>; Fri, 25 Mar 2016 10:02:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:from:date:message-id:subject:to
 :cc; bh=irlR2ihyPmBYY8mUnR5vqAcqPLWHNvFSu1SaSqUIkzg=;
 b=IGkN7rYm6Igj6Wn20qUiNCQj4cmUbR0CM8n2fKSjde9p9xfnb4ieRmewU9exV+Ml0O
 1GUot8hTT7JXim1Vguthy3TfM5Wfpk6P7DjjQszH7zo1m4w1UBsTsdZZ0+aZYINi/UCy
 WinYQXGPzWJNFyoUr5kq2ElVWyBNil1cmSoLrI6ciC5qn39MKOBco6qyBDX2ZB0UfKlB
 Ro+HWGOuJOHHnlM0FW6Y3F+B2agKJz6K86vLsqA6IlDXq9BtTK73yNJmhNISpj2Q2bB8
 5KUQw/JD+8kLR8hO7b8/JMecAs5Zo//AjnrWTVzXl7IY/qN+B5PlktVG0PZj35IGB7sC
 gu2Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20130820;
 h=x-gm-message-state:mime-version:in-reply-to:references:from:date
 :message-id:subject:to:cc;
 bh=irlR2ihyPmBYY8mUnR5vqAcqPLWHNvFSu1SaSqUIkzg=;
 b=KP+fYgjocEe5T2VXGfQUKkWnmxgvUtN5OVcR03zuJKlat0NL9b3ZskZk+62n0zFyeM
 8yPZ57Qkj5cwaB0ZB602MYeOibSYdytInyQFNssCTVM2aaiWOkKKKtjbiWJXtNQmifSN
 u3RKIf8Sa+0Bcm+82wNoFOeoPYYI/opAAp8qydlGE8Jkkrbn9YswSTC2f4/WqOfoCfG6
 del2OkfOoFTcNYjMcZCEe5BGmUbq+a7H2lx6UZROOBAx6Hg2uIM4zGukIhetuXkf6HMM
 iK+yMdtzVqk54+c7a4LvNUMR6zQ+D+X3meTX1OgOHWXySi8/SpnoT/H6fxvYeDoXfkXh
 SpzQ==
X-Gm-Message-State: AD7BkJJ3CYC/kRCzl2QHEvCGbdyZpYGJdADcz3zf6kOXWs6uJ5TCtElBA6SjSHh8wiiUIesOi6rf/YWn+vuVuQ==
X-Received: by 10.129.57.137 with SMTP id g131mr7771151ywa.181.1458925345478; 
 Fri, 25 Mar 2016 10:02:25 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.37.106.85 with HTTP; Fri, 25 Mar 2016 10:02:06 -0700 (PDT)
In-Reply-To: <56F56BBF.9040706@riseup.net>
References: <56F56BBF.9040706@riseup.net>
From: Travis Biehn <tbiehn@gmail.com>
Date: Fri, 25 Mar 2016 13:02:06 -0400
Message-ID: <CAKtE3zc9mun+MeF8qc9OQ-i560k=FN2pYPWMKwR9M7kwgbpfGQ@mail.gmail.com>
Subject: Re: Cloudflare blogs on their Cert Tech
To: Rayzer <Rayzer@riseup.net>
Content-Type: multipart/alternative; boundary=001a114c8a82f89ca1052ee286c3
Cc: Cypherpunks <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 242

--001a114c8a82f89ca1052ee286c3
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

This particular feature has no bearing on that specific attack.

In general, it looks like Cloudflare will 'handle cert generation for you'
- if that extends to a relationship with CAs - who will sign those, then
yes regardless.

The real question here is whether the feature detection is done in a way
that is susceptible to downgrade attack.

If your threat model involves Cloudflare behaving maliciously - then you
shouldn't use Cloudflare.

If your threat model involves attacker controlled PKI - as it should - then
you should 'cert-pin the leaf.'

-Travis

On Fri, Mar 25, 2016 at 12:47 PM, Rayzer <Rayzer@riseup.net> wrote:

> Wondering if their cert tech can spoof a cert to look like it belongs to =
a
> site they DNS when it really belongs to them and you've never really
> visited the site at all.
>
> TLS Certificate Optimization: The Technical Details behind "No Browser
> Left Behind"
>
> Overview
>
> Back in early December we announced our "no browser left behind"
> initiative to the world. Since then, we have served well over 500 billion
> SHA-1 certificates to visitors that otherwise would not have been able to
> communicate securely with our customers=E2=80=99 sites using HTTPS. All t=
he while,
> we=E2=80=99ve continued to present newer SHA-2 certificates to modern bro=
wsers
> using the latest in elliptic curve cryptography, demonstrating that one
> does not have to sacrifice security to accommodate all the world=E2=80=99=
s Internet
> users. (If you weren=E2=80=99t able to acquire a SHA-1 certificate before=
 CAs
> ceased issuing them on 2015/12/31, you can still sign up for a paid plan
> and we will immediately generate one to serve to your legacy visitors.)
>
> Shortly after we announced these new benefits for our paid Universal SSL
> customers, we started hearing from other technology leaders who were
> implementing (or already had implemented) similar functionality. At first
> glance, the logic to identify incoming connections that only support SHA-=
1
> seems straightforward, but as we spoke with our friends at Facebook,
> Twitter, and Mozilla, I realized that everyone was taking a slightly
> different approach. Complicating the matter even further was the fact tha=
t
> at CloudFlare we not only wanted to optimize between SHA-1 and SHA-2, but
> also between RSA and the newer, but less universally supported ECDSA
> certificates. Solve the "optimal certificate" question incorrectly, and t=
he
> TLS handshake will fail =E2=80=94 or get explicitly aborted by browsers t=
hat have
> deprecated SHA-1 entirely; solve it correctly, and the client and server
> will establish the most performant, secure connection available between t=
he
> two endpoints.
>
> Certificate Optimization Logic
>
> After several trillion requests, we=E2=80=99re confident that our approac=
h works
> quite well for CloudFlare=E2=80=99s customers and their visitors. If you =
have taken
> an alternative approach to implementation, or have found any
> exceptions/potential refinements to our logic, please chime in below. We
> remain committed to withdrawing SHA-1 support if, as our CEO said, "a
> vulnerability is discovered [in our certificate optimization logic] which
> allows some form of downgrade attack=E2=80=94where a modern browser can b=
e tricked
> into receiving a certificate signed with an insecure protocol=E2=80=94and=
 the
> vulnerability cannot be patched".
> TLS Handshake
>
> Before your web browser can securely exchange "application data" such as
> HTTP GET or POST requests and responses with a web server, it must first
> establish the cryptographic parameters of the secure session. This
> well-choreographed dance, known as the SSL/TLS handshake, commences as so=
on
> as you click, type, or get redirected to a URL containing the "https://"
> scheme. (The process described below also applies to connections from any
> user agent =E2=80=94 not just browsers=E2=80=94so substitute "mobile app"=
, "command-line
> utility", or anything else that can communicate via HTTPS.)
>
>
> More:
> https://blog.cloudflare.com/tls-certificate-optimization-technical-detail=
s/
>
> --
> RR
> "Through counter-intelligence it should be possible to pinpoint potential=
 trouble-makers ... And neutralize them, neutralize them, neutralize them"
>
>


--=20
Twitter <https://twitter.com/tbiehn> | LinkedIn
<http://www.linkedin.com/in/travisbiehn> | GitHub <http://github.com/tbiehn=
>
| TravisBiehn.com <http://www.travisbiehn.com> | Google Plus
<https://plus.google.com/+TravisBiehn>

--001a114c8a82f89ca1052ee286c3
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">This particular feature has no bearing on that specific at=
tack.<div><br></div><div>In general, it looks like Cloudflare will &#39;han=
dle cert generation for you&#39; - if that extends to a relationship with C=
As - who will sign those, then yes regardless.</div><div><br></div><div>The=
 real question here is whether the feature detection is done in a way that =
is susceptible to downgrade attack.</div><div><br></div><div>If your threat=
 model involves Cloudflare behaving maliciously - then you shouldn&#39;t us=
e Cloudflare.</div><div><br></div><div>If your threat model involves attack=
er controlled PKI - as it should - then you should &#39;cert-pin the leaf.&=
#39;</div><div><br></div><div>-Travis</div></div><div class=3D"gmail_extra"=
><br><div class=3D"gmail_quote">On Fri, Mar 25, 2016 at 12:47 PM, Rayzer <s=
pan dir=3D"ltr">&lt;<a href=3D"mailto:Rayzer@riseup.net" target=3D"_blank">=
Rayzer@riseup.net</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote=
" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 =20

   =20
 =20
  <div bgcolor=3D"#FFFFFF" text=3D"#000000">
    Wondering if their cert tech can spoof a cert to look like it
    belongs to a site they DNS when it really belongs to them and you&#39;v=
e
    never really visited the site at all.<br>
    <br>
    <blockquote>TLS Certificate Optimization: The Technical Details
      behind &quot;No Browser Left Behind&quot;<br>
      <br>
      Overview<br>
      <br>
      Back in early December we announced our &quot;no browser left behind&=
quot;
      initiative to the world. Since then, we have served well over 500
      billion SHA-1 certificates to visitors that otherwise would not
      have been able to communicate securely with our customers=E2=80=99 si=
tes
      using HTTPS. All the while, we=E2=80=99ve continued to present newer =
SHA-2
      certificates to modern browsers using the latest in elliptic curve
      cryptography, demonstrating that one does not have to sacrifice
      security to accommodate all the world=E2=80=99s Internet users. (If y=
ou
      weren=E2=80=99t able to acquire a SHA-1 certificate before CAs ceased
      issuing them on 2015/12/31, you can still sign up for a paid plan
      and we will immediately generate one to serve to your legacy
      visitors.)<br>
      <br>
      Shortly after we announced these new benefits for our paid
      Universal SSL customers, we started hearing from other technology
      leaders who were implementing (or already had implemented) similar
      functionality. At first glance, the logic to identify incoming
      connections that only support SHA-1 seems straightforward, but as
      we spoke with our friends at Facebook, Twitter, and Mozilla, I
      realized that everyone was taking a slightly different approach.
      Complicating the matter even further was the fact that at
      CloudFlare we not only wanted to optimize between SHA-1 and SHA-2,
      but also between RSA and the newer, but less universally supported
      ECDSA certificates. Solve the &quot;optimal certificate&quot; questio=
n
      incorrectly, and the TLS handshake will fail =E2=80=94 or get explici=
tly
      aborted by browsers that have deprecated SHA-1 entirely; solve it
      correctly, and the client and server will establish the most
      performant, secure connection available between the two endpoints.<br=
>
      <br>
      Certificate Optimization Logic<br>
      <br>
      After several trillion requests, we=E2=80=99re confident that our app=
roach
      works quite well for CloudFlare=E2=80=99s customers and their visitor=
s. If
      you have taken an alternative approach to implementation, or have
      found any exceptions/potential refinements to our logic, please
      chime in below. We remain committed to withdrawing SHA-1 support
      if, as our CEO said, &quot;a vulnerability is discovered [in our
      certificate optimization logic] which allows some form of
      downgrade attack=E2=80=94where a modern browser can be tricked into
      receiving a certificate signed with an insecure protocol=E2=80=94and =
the
      vulnerability cannot be patched&quot;.<br>
      TLS Handshake<br>
      <br>
      Before your web browser can securely exchange &quot;application data&=
quot;
      such as HTTP GET or POST requests and responses with a web server,
      it must first establish the cryptographic parameters of the secure
      session. This well-choreographed dance, known as the SSL/TLS
      handshake, commences as soon as you click, type, or get redirected
      to a URL containing the <a>&quot;https://&quot;</a> scheme. (The proc=
ess described
      below also applies to connections from any user agent =E2=80=94 not j=
ust
      browsers=E2=80=94so substitute &quot;mobile app&quot;, &quot;command-=
line utility&quot;, or
      anything else that can communicate via HTTPS.)<br>
      <br>
    </blockquote>
    <br>
    More:
<a href=3D"https://blog.cloudflare.com/tls-certificate-optimization-technic=
al-details/" target=3D"_blank">https://blog.cloudflare.com/tls-certificate-=
optimization-technical-details/</a><span class=3D"HOEnZb"><font color=3D"#8=
88888"><br>
    <pre cols=3D"72">--=20
RR
&quot;Through counter-intelligence it should be possible to pinpoint potent=
ial trouble-makers ... And neutralize them, neutralize them, neutralize the=
m&quot;</pre>
  </font></span></div>

</blockquote></div><br><br clear=3D"all"><div><br></div>-- <br><div class=
=3D"gmail_signature"><div dir=3D"ltr"> <a href=3D"https://twitter.com/tbieh=
n" target=3D"_blank">Twitter</a> | <a href=3D"http://www.linkedin.com/in/tr=
avisbiehn" target=3D"_blank">LinkedIn</a> | <a href=3D"http://github.com/tb=
iehn" target=3D"_blank">GitHub</a> | <a href=3D"http://www.travisbiehn.com"=
 target=3D"_blank">TravisBiehn.com</a>=C2=A0| <a href=3D"https://plus.googl=
e.com/+TravisBiehn" target=3D"_blank">Google Plus</a><br></div></div>
</div>

--001a114c8a82f89ca1052ee286c3--

