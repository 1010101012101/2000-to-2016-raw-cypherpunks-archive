From owner-cypherpunks@Algebra.COM  Sat Aug  3 03:56:16 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g737uF704751
	for <rsw@opamp.org>; Sat, 3 Aug 2002 03:56:15 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id DAA19078
	for <rsw@mit.edu>; Sat, 3 Aug 2002 03:56:14 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g737ZBAp003924
	for <cypherpunks-outgoing@ak47.algebra.com>; Sat, 3 Aug 2002 02:35:11 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g737ZBUU003923
	for cypherpunks-outgoing; Sat, 3 Aug 2002 02:35:11 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g737Z5Ap003907
	for <cypherpunks@ak47.algebra.com>; Sat, 3 Aug 2002 02:35:06 -0500
Received: (from cpunk@localhost)
	by slack.lne.com (8.12.5/8.12.5) id g737Z4Wf026812
	for cypherpunks@ak47.algebra.com; Sat, 3 Aug 2002 00:35:04 -0700
Received: (from majordom@localhost)
	by slack.lne.com (8.12.5/8.12.5) id g737Y1OT026805
	for cypherpunks-goingout345; Sat, 3 Aug 2002 00:34:01 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
X-Authentication-Warning: hydrogen.leitl.org: eugen owned process doing
  -bs
Date: Sat, 3 Aug 2002 09:33:47 +0200 (CEST)
From: Eugen Leitl <eugen@leitl.org>
cc: <cypherpunks@lne.com>
Old-Subject: Re: Other uses of TCPA
In-Reply-To: <3d3cb71053e71de0b181ecd56b8ba3a2@dizum.com>
Message-ID: <Pine.LNX.4.33.0208030842500.9781-100000@hydrogen.leitl.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: cypherpunks@lne.com
X-spam: 0 
Subject:  Re: Other uses of TCPA
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 4120
Lines: 80


On Sat, 3 Aug 2002, Nomen Nescio wrote:

> I think that people are beginning to understand that TCPA is not a
> black and white issue.  It is neither the overwhelming threat that some
> activists are describing, nor the panacea that the vendors are selling.
> It is a technology with strengths and weaknesses.

No, TCPA is a technology with a potential for abuse, and there's certainly
a strong economic and political drive to abuse it. As such it is simply
not acceptable. I don't want this particular camel in my tent,
thankyouverymuch.
 
> As an exercise, try thinking of ways you could use TCPA to promote "good
> guy" applications.  What could you do in a P2P network if you could
> trust that all participants were running approved software?  And if you

Approved by whom? There's a secret embedded into the CPU and/or chipset. I
can't read it out. It was either generated within (so it can't be shared),
or the vendor put it there (and kept a copy of it), or the signed code
which is trusted by original vendor put it there. If you can read out a 
secret, and the system destroys it internal copy, you can still clone it 
into as many systems as you want, as long as it doesn't go pass through 
some Dark Tower in Mordor somewhere.

Why should I trust the vendor with any of this? I don't even trust the
vendor with what he puts into his BIOS. If I need secure encryption, I can
put crypto into a deep embedded in a USB fob, or a smartcard, or buy some
open hardware from a trusted source. If it needs high throughput, you
could package it into a PCI card (and please put the secret into a 
removable dongle).

> could prevent third parties, including hostile governments, from seeing
> the data being used by that software?  You may be surprised to find that

You don't need big brother hardware to prevent participants from accessing
the content directly. If the content is fragmented into encrypted slivers
somebody else has the key for (insert onions for extra paranoia) you have
no idea what is on your hard drive. The content only magically
materializes on a single node when you try to access it. It comes
from/passing through nodes you sure see the addresses, but these change.  
Both because the content moves or gets routed differently, and the nodes
are largely on dynamic IPs.

> if you look at it with an open mind, TCPA could be a tremendous boon to
> freedom-oriented technologies.  From file sharing to crypto protocols
> to digital cash, TCPA lets you expand the trusted computing base to

How does TCPA help you with double spending your tokens? I understand no 
reliable solutions without centralism exist. We should definitely aiming 
for something inspired by ecology (crunch being the equivalent of 
sunlight).

> the entire set of participating machines.  It's really a tremendously
> powerful technology.

I'd rather not have tremendously powerful technology standing under
somebody's else's control sitting under my desk.

> The biggest problem, ironically, is that TCPA may not be secure enough.
> It's one thing to make video piracy difficult, it's another matter to keep
> the Chinese government from prying into the sealed storage.  But with

How is the Chinese government/CoS/anybody else going to pry into a
document that is encrypted on an air-gapped machine (secret stashed away
elsewhere), and stored on a secure (a few iterations of MNet or similiar)  
P2P network? Assuming, I was nice enough to tell them the URI for it?
How is the Chinese government going to effectively prevent people 
accessing content on a steganographic P2P network? Why, with something 
very like TCPA: by outlawing all purpose computers but those running code 
approved by an authority.

> future generations of TCPA integrated onto CPUs with improved tamper
> resistance, it will be much more difficult to defeat the protections.

Are you somehow assuming you can magically protect state of structured
matter encoding a shared (with many, many copies out there) from being
read by people with basically unlimited resources?

> It may turn out that TCPA can significantly facilitate cypherpunk goals.

