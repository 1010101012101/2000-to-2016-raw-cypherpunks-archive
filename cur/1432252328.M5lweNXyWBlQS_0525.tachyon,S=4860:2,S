From cypherpunks-bounces@cpunks.org  Wed Feb 12 07:28:48 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s1CCQn38009684;
	Wed, 12 Feb 2014 07:27:10 -0500
Received: from tunny.sunder.net (static-72-68-134-214.nycmny.fios.verizon.net
 [72.68.134.214])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s1CCQi9j009680
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Wed, 12 Feb 2014 07:26:47 -0500
Received: from [127.0.0.1] (localhost.sunder.net [127.0.0.1])
 by tunny.sunder.net (8.14.0/8.14.0) with ESMTP id s1CCQahe006907
 for <cypherpunks@cpunks.org>; Wed, 12 Feb 2014 07:26:37 -0500 (EST)
Message-ID: <52FB6880.6030702@sunder.net>
Date: Wed, 12 Feb 2014 07:26:40 -0500
From: sunder <sunder@sunder.net>
User-Agent: Mozilla/5.0 (X11; Linux x86_64;
 rv:24.0) Gecko/20100101 Thunderbird/24.2.0
MIME-Version: 1.0
To: cypherpunks@cpunks.org
Subject: Re: Snowden and Compilers
References: <CADJYzx+8+ecZLn=_qspkTdEHF7hFMhwhK4KCR16gAnd0J__qdw@mail.gmail.com>
In-Reply-To: <CADJYzx+8+ecZLn=_qspkTdEHF7hFMhwhK4KCR16gAnd0J__qdw@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 2840
Lines: 55

On 02/11/2014 02:32 PM, Rich Jones wrote:
> In all of the Snowden docs that have been released so far, has anybody
> seen any mention of any NSA programs designed to subvert compilers?
>
> Compilers seems like an extremely prime target for manipulation, but
> as far as I am aware there hasn't been anything mentioned about this
> yet. Has anybody here heard anything that I haven't?

My guess would be things like network card drivers, or the firmware in
network cards - anything that has supervisor level access to the entire
machine is a prime target, but as more NICs get things like iSCSI
support/ToE and the like, have both opportunity to hide something in the
onboard acceleration engines as well as a mechanism to communicate
upstream. 

As we've seen there are plenty of "open source" linux kernel drivers for
NICs and video cards that are really binaries.  Plenty of room to hide
stuff there, but the hardware itself is a better target, especially if
the firmware they carry cannot be downloaded by the computer for
forensic analysis, and especially if there's some sort of open DMA
access from the device to the full memory of the machine that the OS
cannot detect.

Maybe they'd add stuff to tcp/udp packets as an out of band channel, or
in the case of wireless stuff transmit on unused nearby frequencies that
the hardware is capable of transmitting on, but cannot be detected with
normal wifi/bluetooth sniffers.

Bluetooth, and wifi would also be great targets because they can
communicate with the outside world, or maybe the USB controllers
themselves because stuff like bluetooth modules are often implemented as
on-board USB devices - at least they are on Mac notebooks.  On Mac
notebooks, the keyboard, bluetooth controller, camera and IR receiver
all run off the USB bus - so that would be a great place to sniff such
traffic, and would also be able to transmit it out to nearby bugs. 

Even if the OS thinks the device is disabled and not in use, it could
still be able to function as a sniffer/transmitter, and it's power
consumption hidden in a low-power mode.

If you have access to the kernel, or firmware in some critical part of a
machine or the hardware itself, that's more than enough - no need to
subvert the compilers.  There's plenty of out of band access/theft
recovery stuff in most notebooks/servers these days, and compiler
generated output could always be analyzed by folks looking for
vulnerabilities to exploit.

Since there are only a handful of chip manufacturers, subverting those
would be the path of least resistance and most gain, and companies like
Dell, HP, or Apple wouldn't even have to know, nor detect the presence
of such stuff.

The other path is that 90% of the stuff out there runs windows, so you
could always hide stuff as a worm/trojan, which we've seen with stuxnet
and the like.

