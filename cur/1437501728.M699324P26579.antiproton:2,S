Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t6LI1FUE026563;
	Tue, 21 Jul 2015 14:01:19 -0400
Received: from palinka.tinho.net (palinka.tinho.net [166.84.6.13])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t6LI1CWZ026559
 for <cypherpunks@cpunks.org>; Tue, 21 Jul 2015 14:01:13 -0400
Received: by palinka.tinho.net (Postfix, from userid 126)
 id 491862280EA; Tue, 21 Jul 2015 14:01:05 -0400 (EDT)
Received: from palinka.tinho.net (localhost [127.0.0.1])
 by palinka.tinho.net (Postfix) with ESMTP id 450F92280D2
 for <cypherpunks@cpunks.org>; Tue, 21 Jul 2015 14:01:05 -0400 (EDT)
From: dan@geer.org
To: cypherpunks@cpunks.org
Subject: Re: an ominous comment
In-Reply-To: Your message of "Mon, 20 Jul 2015 09:36:05 +0200."
 <55ACA4E5.5010807@artdecode.de>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-ID: <49382.1437501665.1@palinka.tinho.net>
Date: Tue, 21 Jul 2015 14:01:05 -0400
Message-Id: <20150721180105.491862280EA@palinka.tinho.net>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 35

Continuing to think about this, an analogy presents itself.
If I tell you a secret after getting your agreement that you
will not yourself tell anyone else, then I am trusting in
non-recursive disclosure, i.e., you break the chain and I
trust that you will not fail to do so.

If I place my execution or my storage in the hands of
others, then I am trusting in non-recursive propagation of
my code and/or my data.  If the pinnacle goal of security
engineering is "No silent failure," then creating a
dependence on non-recursive exposure of execution or storage
is resolved either by blind trust or by a sufficient degree
of surveillability that prevents silent breaking of the
non-recursion constraint.  But what would that be?  Is this
a kind of supply chain argument that devolves to whether a
target is or is not big enough to sue?  If I have proven,
workable recourse, then perhaps I can trust -- which is to
say I am able to then choose to take no additional,
proactive countermeasures.  If I do not have proven,
workable recourse, then how can I prevent not just silent
failure but silent failure plus a clean getaway even
post-discovery?

Daniel Solove suggested that the greatest danger to privacy
is a blythe "I live a good life and have nothing to hide;"
so, in parallel, is not the greatest danger to data
integrity something of a parallel construction, something
like "No one would want to screw with my cloud, I'm just a
nobody"?

Thinking out loud; no need to answer,

--dan

