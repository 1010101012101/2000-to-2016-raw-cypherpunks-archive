From owner-cypherpunks@jfet.org  Fri Nov  4 20:24:04 2005
Return-Path: <owner-cypherpunks@jfet.org>
Received: from proton.jfet.org (localhost [127.0.0.1])
	by proton.jfet.org (8.13.4/8.13.4/Debian-3) with ESMTP id jA51O1Qa032188
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Fri, 4 Nov 2005 20:24:01 -0500
Received: (from majordomo@localhost)
	by proton.jfet.org (8.13.4/8.13.4/Submit) id jA51O15L032187
	for cypherpunks-outgoing; Fri, 4 Nov 2005 20:24:01 -0500
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;         s=beta;
  d=gmail.com;        
  h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
  b=n2OI8NCzbHvWAeqh+U/RaG+dW+fsxe501SedhnWe1Jbr5b4R72lWx1l572ZcoaS7XaG5bjjgh2Cpb4Cr+OhbxzIOuColRvyxaTI3AUhAQA7IpXXUl+QzoIfApLL+U9Ct5yLIEfkAAcyMKQZsSxBKUxSAm/rlrafsA5Mj2mIf6QU=
Message-ID: <d4f1333a0511041723w3376f0d4l314f33cec6421b06@mail.gmail.com>
Date: Fri, 4 Nov 2005 19:23:59 -0600
From: "Travis H." <solinym@gmail.com>
To: cryptography@metzdowd.com, cypherpunks@jfet.org
Subject: gonzo cryptography; how would you improve existing
  cryptosystems?
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-MIME-Autoconverted: from quoted-printable to 8bit by proton.jfet.org
  id jA51O0oe032151
Sender: owner-cypherpunks@jfet.org
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 1295
Lines: 28

Hi folks,

If one had the ability to create standards over, with reckless
disregard for performance, how would you improve their security?

Feel free to pick a protocol or system (e.g. gpg or isakmp) and let me
know how it is done, and how it should have been done.

For example, pgp doesn't hide the key IDs of the addressees.  Many
systems use hashes that are too small.  DSA keys are too small
compared to large ElG keys.  How would you make a signature with a
larger keyspace?  Does the protocol wrap encryption in authentication
instead of vice-versa?  Does ISAKMP do encryption where the input is
meant to be secret, instead of the key?  Does it use a rinky-dink
algorithm, now that much better ones are available?

I've got a hankering to re-write something, and I want to know what
can be improved the most.

PS:  There's a paper on cryptanalyzing CFS on my homepage below.  I
got to successfully use classical cryptanalysis on a relatively modern
system!  That is a rare joy.  CFS really needs a re-write, there's no
real good alternatives for cross-platform filesystem encryption to my
knowledge.
--
http://www.lightconsulting.com/~travis/  -><-
"We already have enough fast, insecure systems." -- Schneier & Ferguson
GPG fingerprint: 50A1 15C5 A9DE 23B9 ED98 C93E 38E9 204A 94C2 641B

