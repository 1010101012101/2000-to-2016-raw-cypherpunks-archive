From owner-cypherpunks@lne.com  Mon Jul 14 23:25:22 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h6F3PK613761
	for <rsw@jfet.org>; Mon, 14 Jul 2003 23:25:20 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h6F3COHI004625
	for cypherpunks-goingout345; Mon, 14 Jul 2003 20:12:24 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Message-ID: <3F1370C5.D255BBC3@cdc.gov>
Date: Mon, 14 Jul 2003 20:11:01 -0700
From: "Major Variola (ret)" <mv@cdc.gov>
X-Mailer: Mozilla 4.75 [en] (Win95; U)
X-Accept-Language: en
MIME-Version: 1.0
To: cypherpunks@lne.com
Subject: Re: MRAM, persistence of memory
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1332
Lines: 35

At 01:51 AM 7/15/03 +0300, Sampo Syreeni wrote:
>On 2003-07-14, Michael Shields uttered to Bill Frantz:
>
>>> Encrypted swap is a crypto sweet spot, because it has perhaps the
easiest
>>> key management of any crypto system.  It seems that the BSD systems
have it
>>> while Linux still thinks it is difficult.

>At this stage I think a small question is in order. Is there any Big
Red
>Button software out there to complement this level of paranoia?
>
>What I mean is, after you've got everything in your system under
>industrial strength crypto, you have exactly one weak spot, that being
a
>whole lot of people charging through your door when your system is
already
>running hot and accessible. At that point the only thing that can save
you
>is a one-touch mechanism to effect a swift (i.e. at most two or three
>seconds), dirty, no-matter-what shutdown, with guaranteed loss of key
>material.
>
>Is there open source software out there to effect that sort of thing?

Its called the power button.  Which is why MRAM is a different security
risk.

One could design software such that only the least required is decrypted

at any one time, which would minimize the risk from persistant memory
after you offed the power.  There would probably be a serious
performance
hit in such software, but tradeoffs are what the game is about.

