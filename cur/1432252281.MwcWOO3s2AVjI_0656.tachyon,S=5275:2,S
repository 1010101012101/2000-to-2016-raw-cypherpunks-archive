From owner-cypherpunks@Algebra.COM  Mon Aug 27 18:30:40 2001
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id SAA02600
	for <kwantam@positron.mit.edu>; Mon, 27 Aug 2001 18:30:40 -0400
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id SAA07639
	for <rsw@mit.edu>; Mon, 27 Aug 2001 18:28:07 -0400 (EDT)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f7RMGXK15407
	for cypherpunks-outgoing; Mon, 27 Aug 2001 17:16:33 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@einstein.ssz.com [204.96.2.99])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f7RMGVO15388
	for <cypherpunks@algebra.com>; Mon, 27 Aug 2001 17:16:31 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id RAA00893
	for cypherpunks@algebra.com; Mon, 27 Aug 2001 17:20:34 -0500
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id RAA00876
	for cypherpunks-outgoing; Mon, 27 Aug 2001 17:20:25 -0500
Received: from localhost (ravage@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) with SMTP id RAA00815;
	Mon, 27 Aug 2001 17:19:11 -0500
Date: Mon, 27 Aug 2001 17:19:11 -0500 (CDT)
From: Jim Choate <ravage@einstein.ssz.com>
To: wireless@lists.devzero.org
cc: hangar18@einstein.ssz.com, The Club Inferno <hell@einstein.ssz.com>,
        austin-cpunks@einstein.ssz.com, sci-tech@einstein.ssz.com,
        alg@austinlug.org, cypherpunks@einstein.ssz.com
Old-Subject: CDR: OPT: How does one freenet (mobile) user find another (maybe freenet) user?
Message-ID: <Pine.LNX.3.96.1010827165450.299M-100000@einstein.ssz.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-Unsubscription-Info: http://einstein.ssz.com/cdr
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Acceptable-Languages: English, Russian, German, French, Spanish
Subject:  OPT: How does one freenet (mobile) user find another (maybe freenet) user?
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 5 
Status: O
Content-Length: 2765
Lines: 57



One proposal is to build some complicated IP management network. Yuck!

A primary problem is one freenet user locating another freenet user and
keeping the connection live during AP changes. I believe that if this
problem can be resolved the other types of connections (ie fixed IP) go
away.

How about a 'rendevous server'. A well known address where two users can
present a 'key' to the server and when they click you open a connection.

(this might be a good place for e-cash micro-mints)

IP Anonymizers would be one place to start. You connect up and get your IP
washed. Then you present a key to the server. It looks for an identical
key(s) and build a bridge between those users. An end-to-end anonymous
connection. The anonymizing layer is a bell, it's not critical. A simple
IP proxy will work.

This is also a good place to demonstrate the utility of a 'wrapper' around
this connection with respect to moving from one node to another. As you
move out of one zone into another, your IP changes. So, your system would
re-connect to the above server, be anonymized and hence making it's real
IP irrelevant (even if it wasn't anonymized the next step makes the actual
IP moot) - all automatically. It presents a key, finds a waiting
connection open and gets connected back up. The rendevous server sits
patiently waiting (until some watchdog barks) for new connections and
holding the old half of your connection open and waiting. In particular it
looks at each half of a connection and asks (Did_they_drop_the_line? ||
Did_we_get_norm_close?) before it closes the resource. Otherwise it
attempts to keep the connection open and in a wait state until somebody
else connects up.

It would be reasonable to run such a server on the AP.

With respect to automation of finding other proxies and presenting keys,
this could be done by having it broadcast a Proxy_alive_kicking? packet.
It would then, at a users request, broadcast out to those proxies trying
to find out if they have a matching key as presented by the user. If so,
then the proxy servers could make a connection between themselves and
bridge the users logical connection request (ie presenting a key).


 --
    ____________________________________________________________________

            natsugusa ya...tsuwamonodomo ga...yume no ato
            summer grass...those mighty warriors'...dream-tracks

                                            Matsuo Basho

       The Armadillo Group       ,::////;::-.          James Choate
       Austin, Tx               /:'///// ``::>/|/      ravage@ssz.com
       www.ssz.com            .',  ||||    `/( e\      512-451-7087
                           -====~~mm-'`-```-mm --'-
    --------------------------------------------------------------------

