From owner-cypherpunks@Algebra.COM  Sun Nov 11 09:41:32 2001
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.11.6/8.9.3) with ESMTP id fABEfHZ08248
	for <kwantam@positron.mit.edu>; Sun, 11 Nov 2001 09:41:17 -0500
Received: from ak47.algebra.com (ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id JAA19421
	for <rsw@mit.edu>; Sun, 11 Nov 2001 09:39:20 -0500 (EST)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id fABEYLh17365
	for cypherpunks-outgoing; Sun, 11 Nov 2001 08:34:21 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@einstein.ssz.com [204.96.2.99])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id fABEYJM17351
	for <cypherpunks@algebra.com>; Sun, 11 Nov 2001 08:34:19 -0600
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id JAA20339
	for cypherpunks@algebra.com; Sun, 11 Nov 2001 09:37:54 -0600
Received: from weltregierung.koeln.ccc.de (koeln.ccc.de [217.6.214.138])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id JAA20331
	for <cpunks@einstein.ssz.com>; Sun, 11 Nov 2001 09:37:51 -0600
Received: (qmail 93539 invoked by uid 900); 11 Nov 2001 14:34:34 -0000
X-Mailsort: cypherpunks
Received: (qmail 93526 invoked by alias); 11 Nov 2001 14:34:34 -0000
Delivered-To: cypherpunks@koeln.ccc.de
Received: (qmail 93518 invoked by uid 0); 11 Nov 2001 14:34:32 -0000
Received: from a1as12-p252.hh.tli.de (HELO localhost.localdomain) (root@195.252.136.252)
  by koeln.ccc.de with SMTP; 11 Nov 2001 14:34:32 -0000
Received: from localhost.localdomain (mixter@localhost.localdomain [127.0.0.1])
	by localhost.localdomain (8.11.0/8.11.0) with ESMTP id fABEZ3E12849
	for <cypherpunks@koeln.ccc.de>; Sun, 11 Nov 2001 15:35:03 +0100
Date: Sun, 11 Nov 2001 15:35:03 +0100 (CET)
From: <mixter@2xs.co.il>
X-Sender: mixter@localhost.localdomain
To: cypherpunks@koeln.ccc.de
Old-Subject: "Passive Blackmail" - Does this kind of application exist?
In-Reply-To: <20011111110101.60321.qmail@weltregierung.koeln.ccc.de>
Message-ID: <Pine.LNX.4.21.0111111506410.12731-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: cypherpunks@koeln.ccc.de
Subject:  "Passive Blackmail" - Does this kind of application exist?
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 10 
Status: O
Content-Length: 3092
Lines: 63



I've been thinking about a certain kind of distributed application
involving cryptography, and I wondered if anything like this exists,
and if not, at least any accepted cryptographic method for doing this:

Suppose a scenario in which an individal has knowledge or substantial
suspicion that another person, group, or state are interested in
letting him have an accident or otherwise making him disappear.

Now, that individual could have generally important information, evidence
about exactly that plot, or other evidence or black-mail material
against those people who potentially harbor these intentions against him. 

In this scenario, the kind of application I'm thinking of would allow
that individual to record all of his important information, encrypt
it, and post multiple copies to a decentralized network of cyberspace
sites, ideally anonymously (perhaps like freenet, with the big problem
that freenet and similar solutions provide no guarantee for that
information to remain there indefinitely).

Now the key part which is somewhat harder: it should only be possible
to decrypt that information for any third party in the case anything
really happens to that individual (prison, death, disappearance, ...).
There must be a system in which the individual must regularly visit
sites on a decentralized network and perform some (pseudonymous)
action of self-authentication that proves he's still there, and that
therefore the decryption key should not yet be released.

I presume that the most viable route to do this would be via decentralized
escrow of the encryption key for the information, i.e. you split the
key in three parts and provide multiple copies of each key to different
decentralized nodes or parties, while you need to make sure that no
party ever gets all three parts of the key. Only if you don't perform
a regular authentication (because you disappeared), any three parties
who together have your key will receive information about each other,
reassemble the key, fetch your decentrally stored ciphertext and
decrypt it, then posting it on the web or sending it to the media
or friends, or whatever.

I admit this system is a little complicated, but I think it would be
the only viable method of making sure information in this scenario is
kept intact, and at the same time only available when that individual
owning the information stops regularly affirming that he is still alive.
This may sound a bit paranoid at first, but it is a real important
application for which many people could have a real interest, which
could even help individuals provide some incentive for criminal/
intelligence/whatever groups to leave them alone, a "Passive Blackmail",
if you want. Taking a look at recent history, the disappearing or
otherwise strange death of hackers and other geeks and politically
active figures isn't a very rare occurrence...

So thanks in advance for any information you might have about this.


-- 
---------------------------
Mixter
Development/Consulting
2xs LTD. - http://2xss.com
Tel: +972-9-9519980
Fax: +972-9-9519982
Mail: mixter@2xss.com

