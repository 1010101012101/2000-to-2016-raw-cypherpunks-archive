From cypherpunks-bounces@cpunks.org  Fri Nov 15 21:09:34 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAG29S3j028627;
	Fri, 15 Nov 2013 21:09:29 -0500
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="2048-bit key; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=ttC8P7R4;
	dkim-adsp=pass; dkim-atps=neutral
Received: from mail-ob0-f179.google.com (mail-ob0-f179.google.com
 [209.85.214.179])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAG29PJW028622
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Fri, 15 Nov 2013 21:09:26 -0500
Received: by mail-ob0-f179.google.com with SMTP id wn1so4667542obc.38
 for <cypherpunks@cpunks.org>; Fri, 15 Nov 2013 18:09:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:date:message-id:subject:from:to:content-type;
 bh=Qk7UO937mpjdTx2mcla6s9/U1YYo80BB8aE1dRszUnQ=;
 b=ttC8P7R4jhukxl7obCZYrCd61XF54aEwai89XUYOqgVNzWL9K3qks5W1g+id2z0+OZ
 +GLfJBL7FDB+v/ZSeMaUCHvMrZaW+uNyz4dy/NLMr6un9IexgcytsIr7Cf1ZAf7S8EiI
 T9SC+47o5zFzGk3CvzPUjMOUkxkcZUdulpLbdFHRzB2Jn9QkGKAGcgnDwII8yjYeqpHW
 wjuYH/SrY3+gWmpnkSlMb11tiCEafJKSCLFy2h1Rse1/kgMF6l2bsp8c3bClkR5G+TFj
 ZF8Ii2WEGYJJDhV1+dteeIz4RrRhg8cEgvUiC0hMQw6SGwWtlHUuujDzRynuDXJMSohD
 qIMg==
MIME-Version: 1.0
X-Received: by 10.60.97.36 with SMTP id dx4mr3466711oeb.99.1384567760279; Fri,
 15 Nov 2013 18:09:20 -0800 (PST)
Received: by 10.76.33.167 with HTTP; Fri, 15 Nov 2013 18:09:20 -0800 (PST)
Date: Fri, 15 Nov 2013 20:09:20 -0600
Message-ID: <CADhsnxcs67KXLZRQCd6xv7wRDvUn5KvcrhP1Wy9wYc1xsP0UuQ@mail.gmail.com>
Subject: re: passwords! (p5)
From: brian carroll <electromagnetize@gmail.com>
To: cypherpunks@cpunks.org
Content-Type: multipart/alternative; boundary=089e013a2b0884e76104eb41cd08
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 6063
Lines: 157

--089e013a2b0884e76104eb41cd08
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

// incompleteness of completeness, additional oddity...


   if considering [password] as a bit-set instead of linear string,

   such that [p|a|s|s|w|o|r|d] could itself be variable, per bit,


   ex. [pass|word|1234|bluegreen]


   then, if a password service used this principle, instead of

   requiring just 8-12 alphanumerics plus allowed special characters

   as the basis for /security/, instead what if it was 3-4 sets instead,

   themselves having special rules...


   [set1|set2|set3|set4]


   in this way, a 'rolling password' could be developed in that

   the sequence could be arbitrary or change, given the instance

   or interaction, which may or may not include changing variables

   (months till b-day, temperature in zipcode, etc)


   in other words:


  [password]  --->  [pass][wo][r][ds]


  whereby, via its continual dynamic state, could exist in multiple

  versions by default, and then have this managed between client/server


  [1][2][3][4]  --->  [2][4][1][3]


  [pass]-[wo]-[r]-[ds]   --->   [wo]-[ds]-[pass]-[r]


  this could extend into sequences of not only alphanumerics

  through also icons (picked amongst many on the server, thus

  creating more unknowns), say choose 1 of available 20 icons,

  which is not included in stored password, nor its place in

  sequence knowable to attacker...


  [pass][icon13][wo][r][ds]   --->  [icon13][wo][ds][pass][r]


  thus a changing string made up of subsets rearranged that

  may even have non-stored variables [#], icons or other approach


       [3b]-[alphanum1a]-[5e]-[32^F]-[4d]-[icon]-[2c]

       [2c]-[3b]-[alphanum1a]-[4d]-[icon]-[67^F]-[5e]


  then the probabilities and computation is upped exponentially

  even if accessing some part of the correct code, which may not

  be reliably reused, seemingly the more subsets, more security

  from an initial attack-- thus even if one instance of passwords

  were found, they could be changed or even transformed into

  another set and detach from those lost, locking out else

  deactivating the previous versions. a lot could seemingly

  be done with this though a secure environment would be

  required which seems difficult to guarantee if not allow

  for sake of someone elses interests, known & unknown


=F0=9D=93=B6 =F0=9D=9F=A1 =F0=9D=91=A4

--089e013a2b0884e76104eb41cd08
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div><div><div>// incompleteness of completeness, addition=
al oddity...<br><br>=C2=A0 <br></div>=C2=A0=C2=A0 if considering [password]=
 as a bit-set instead of linear string,<br><br></div>=C2=A0=C2=A0 such that=
 [p|a|s|s|w|o|r|d] could itself be variable, per bit,<br>
<br></div><div>=C2=A0<br>=C2=A0=C2=A0 ex. [pass|word|1234|bluegreen]<br><br=
>=C2=A0 <br></div><div>=C2=A0=C2=A0 then, if a password service used this p=
rinciple, instead of<br></div><div><br>=C2=A0=C2=A0 requiring just 8-12 alp=
hanumerics plus allowed special characters<br>
</div><div><br>=C2=A0=C2=A0 as the basis for /security/, instead what if it=
 was 3-4 sets instead,<br><br></div><div>=C2=A0=C2=A0 themselves having spe=
cial rules...<br><br></div><div><br>=C2=A0=C2=A0 [set1|set2|set3|set4]<br><=
br><br></div><div>=C2=A0=C2=A0 in this way, a &#39;rolling password&#39; co=
uld be developed in that<br>
<br></div><div>=C2=A0=C2=A0 the sequence could be arbitrary or change, give=
n the instance<br><br></div><div>=C2=A0=C2=A0 or interaction, which may or =
may not include changing variables<br><br></div><div>=C2=A0=C2=A0 (months t=
ill b-day, temperature in zipcode, etc)<br>
<br><br></div><div>=C2=A0=C2=A0 in other words:=C2=A0 <br><br></div><div><b=
r>=C2=A0 [password]=C2=A0 ---&gt;=C2=A0 [pass][wo][r][ds]<br><br><br></div>=
<div>=C2=A0 whereby, via its continual dynamic state, could exist in multip=
le<br>=C2=A0 <br></div><div>=C2=A0 versions by default, and then have this =
managed between client/server<br>
<br><br></div><div>=C2=A0 [1][2][3][4]=C2=A0 ---&gt;=C2=A0 [2][4][1][3]<br>=
<br><br></div><div>=C2=A0 [pass]-[wo]-[r]-[ds]=C2=A0=C2=A0 ---&gt;=C2=A0=C2=
=A0 [wo]-[ds]-[pass]-[r]<br><br><br></div><div>=C2=A0 this could extend int=
o sequences of not only alphanumerics<br>
=C2=A0 <br></div><div>=C2=A0 through also icons (picked amongst many on the=
 server, thus<br><br></div><div>=C2=A0 creating more unknowns), say choose =
1 of available 20 icons,<br><br></div><div>=C2=A0 which is not included in =
stored password, nor its place in<br>
=C2=A0<br></div><div>=C2=A0 sequence knowable to attacker...<br><br><br></d=
iv><div>=C2=A0 [pass][icon13][wo][r][ds]=C2=A0=C2=A0 ---&gt;=C2=A0 [icon13]=
[wo][ds][pass][r]<br><br><br></div><div>=C2=A0 thus a changing string made =
up of subsets rearranged that<br>
<br></div><div>=C2=A0 may even have non-stored variables [#], icons or othe=
r approach<br><br><br>=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 [3b]-[alphanum1a=
]-[5e]-[32^F]-[4d]-[icon]-[2c]<br><br>=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =
[2c]-[3b]-[alphanum1a]-[4d]-[icon]-[67^F]-[5e]<br><br>=C2=A0 <br></div>
<div>=C2=A0 then the probabilities and computation is upped exponentially<b=
r><br></div><div>=C2=A0 even if accessing some part of the correct code, wh=
ich may not<br><br></div><div>=C2=A0 be reliably reused, seemingly the more=
 subsets, more security<br>
<br></div><div>=C2=A0 from an initial attack-- thus even if one instance of=
 passwords<br><br>=C2=A0 were found, they could be changed or even transfor=
med into<br><br>=C2=A0 another set and detach from those lost, locking out =
else<br><br>
=C2=A0 deactivating the previous versions. a lot could seemingly<br><br>=C2=
=A0 be done with this though a secure environment would be<br><br>=C2=A0 re=
quired which seems difficult to guarantee if not allow<br><br></div><div>=
=C2=A0 for sake of someone elses interests, known &amp; unknown<br>
<br><br>=F0=9D=93=B6 =F0=9D=9F=A1 =F0=9D=91=A4</div></div>

--089e013a2b0884e76104eb41cd08--

