From owner-cypherpunks@lne.com  Thu Jun  5 07:08:58 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h55B8uq04713
	for <rsw@jfet.org>; Thu, 5 Jun 2003 07:08:56 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h55AnoOl021210
	for cypherpunks-goingout345; Thu, 5 Jun 2003 03:49:50 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Date: Thu, 5 Jun 2003 12:49:40 +0200
From: Bodo Moeller <moeller@cdc.informatik.tu-darmstadt.de>
To: Peter Gutmann <pgut001@cs.auckland.ac.nz>
Cc: cryptography@metzdowd.com, cypherpunks@lne.com
Subject: Re: Maybe It's Snake Oil All the Way Down
Message-ID: <20030605124940.A16963@cdc.informatik.tu-darmstadt.de>
References: <200306051011.h55ABjv21031@medusa01.cs.auckland.ac.nz>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 7bit
User-Agent: Mutt/1.2.5i
In-Reply-To: <200306051011.h55ABjv21031@medusa01.cs.auckland.ac.nz>;
  from pgut001@cs.auckland.ac.nz on Thu, Jun 05, 2003 at 10:11:45PM
  +1200
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1492
Lines: 28

On Thu, Jun 05, 2003 at 10:11:45PM +1200, Peter Gutmann wrote:
> Bodo Moeller <moeller@cdc.informatik.tu-darmstadt.de> writes:

>> Using an explicit state machine helps to get code suitable for multiplexing
>> within a single thread various connections using non-blocking I/O.

> Is there some specific advantage here, or is it an academic exercise?
> [...]                   I have a vague idea from discussions with some
> OpenSSL-engine developers that they had some requirement for supporting async
> hardware in non-threaded environments, [...]                             the
> discussions tended to devolve into griping sessions about how hard async
> crypto hardware was to work with, not helped by comments like "That's because
> you're taking the path of most resistance, just use threads" :-).

I don't mind working with threads, but there's a lot of software out
there that uses single-threaded multiplexing, and adding SSL/TLS to
such software becomes much easier if the SSL/TLS library supports this
multiplexing paradigm.  (Not that it would be impossible otherwise --
another option, for Unix anway, is to fork off a processes that
handles a SSL/TLS connection and communicates with the main process
via a pipe.)


-- 
Bodo Mvller <moeller@cdc.informatik.tu-darmstadt.de>
PGP http://www.informatik.tu-darmstadt.de/TI/Mitarbeiter/moeller/0x36d2c658.html
* TU Darmstadt, Theoretische Informatik, Alexanderstr. 10, D-64283 Darmstadt
* Tel. +49-6151-16-6628, Fax +49-6151-16-6036

