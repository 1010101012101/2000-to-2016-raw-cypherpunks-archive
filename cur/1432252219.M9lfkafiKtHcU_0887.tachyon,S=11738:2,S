From cypherpunks-bounces@cpunks.org  Mon Aug 12 11:53:30 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from proton.jfet.org (localhost.localdomain [127.0.0.1])
	by proton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r7CFqmWV020641;
	Mon, 12 Aug 2013 11:52:55 -0400
Received: from smtprelay.hostedemail.com (smtprelay0243.hostedemail.com
 [216.40.44.243])
 by proton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r7CFqirM020637
 for <cypherpunks@cpunks.org>; Mon, 12 Aug 2013 11:52:46 -0400
Received: from filter.hostedemail.com (ff-bigip1 [10.5.19.254])
 by smtprelay01.hostedemail.com (Postfix) with ESMTP id 84EF2235AE;
 Mon, 12 Aug 2013 15:52:42 +0000 (UTC)
X-Session-Marker: 6C6F6B69406F6273637572612E636F6D
X-Panda: scanned!
X-Spam-Summary: 50, 0, 0, , d41d8cd98f00b204, loki@obscura.com, :::,
 RULES_HIT:72:355:379:541:564:599:800:960:962:966:967:973:983:988:989:1189:1208:1212:1221:1260:1261:1313:1314:1345:1359:1394:1395:1431:1436:1437:1516:1517:1518:1535:1544:1575:1588:1589:1592:1594:1711:1730:1776:1792:2068:2069:2194:2196:2198:2199:2200:2201:2525:2527:2553:2565:2682:2685:2689:2691:2693:2737:2859:2892:2894:2899:2920:2933:2937:2939:2942:2945:2947:2951:2954:3022:3138:3139:3140:3141:3142:3355:3865:3866:3867:3868:3870:3871:3872:3873:3874:3934:3936:3938:3941:3944:3947:3950:3953:3956:3959:4037:4120:4250:4385:4470:5007:6117:6119:6657:7514:7652:7903:7904:8568:8599:8603:8666:8825:9010:9025:9072:9177:9388:10004:10049:10848:11232:11658:11914:12043:12050:12517:12519:12663:12743:13019:13095:13139:13146:13151:13161:13228:13229:13230:13846:13891,
 0, RBL:none, CacheIP:none, Bayesian:0.5, 0.5, 0.5, Netcheck:none,
 DomainCache:0, MSF:not bulk, SPF:fn, MSBL:0, DNSBL:none, Custom_rules:0:0:0
X-HE-Tag: aunt99_6ec81205a6f14
X-Filterd-Recvd-Size: 9492
Received: from [10.5.0.164] (c-98-248-23-26.hsd1.ca.comcast.net [98.248.23.26])
 (Authenticated sender: loki@obscura.com)
 by omf10.hostedemail.com (Postfix) with ESMTPA;
 Mon, 12 Aug 2013 15:52:41 +0000 (UTC)
Content-Type: multipart/alternative;
 boundary="Apple-Mail=_C02943A8-266C-494B-9303-9969784BB182"
Mime-Version: 1.0 (Mac OS X Mail 6.5 \(1508\))
Subject: Re: Information theoretically secure communication networks
From: Lance Cottrell <loki@obscura.com>
In-Reply-To: <1376317284.3276.24.camel@localhost.localdomain>
Date: Mon, 12 Aug 2013 08:52:35 -0700
Message-Id: <A564CFE5-5BB0-4E54-8537-B1B6425A5B26@obscura.com>
References: <1376317284.3276.24.camel@localhost.localdomain>
To: John Preston <gizmoguy1@gmail.com>
X-Mailer: Apple Mail (2.1508)
Cc: cypherpunks@cpunks.org
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>


--Apple-Mail=_C02943A8-266C-494B-9303-9969784BB182
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=us-ascii

There was a lot of analysis like this back in the 1990's on this list. =
You could probably look for it in the archives.

In general, store and forward anonymity services, like Mixmaster, have =
much better anonymity characteristics than real time systems like TOR, =
basically for the reasons you outline.

	-Lance

--
Lance Cottrell
loki@obscura.com



On Aug 12, 2013, at 7:21 AM, John Preston <gizmoguy1@gmail.com> wrote:

> Hi all,
>=20
> Long-time follower, first time poster. I have an interest in darknets
> and saw this paper
> (http://www.ieee-security.org/TC/SP2013/papers/4977a080.pdf) today in =
a
> message under "Freedom Hosting Owner Arrested, Tormail Compromised,
> Malicious JS Discovered", which naturally got me quite worried. It did
> remind, however, about a few ideas I have had in the past about
> guarantees of anonymity in a network.
>=20
> Consider a broadcast network: an eavesdropper cannot tell who a =
message
> is intended for from just the transmission itself. By using asymmetric
> encryption, the contents of the message can also be made unreadable to
> the eavesdropper and all unintended recipients, still preserving =
perfect
> single fact anonymity.
>=20
> Over time, an attacker could determine the intended recipient by =
looking
> at who sent messages within a certain time frame from receiving a
> message: the information gain from this is increased substantially if
> certain information about the protocol of the messages is known (e.g. =
if
> we're anonymising a real-time protocol, timed traffic analysis can
> reveal an intended recipient with a high degree of certainty). This =
can
> be defeated by including noise in the network: peers constantly =
produce
> garbage packets.
>=20
> I believe that this would yield information theoretically secure
> anonymity, as an attacker is looking for hay in a haystack, so to =
speak.
> Obviously, the problem with this protocol is that it is horrendously
> inefficient.
>=20
> I am inclined to believe that we can preserve the anonymity properties
> of this protocol while reducing its network load, in exchange for
> reliability. The original protocol implies that the intended recipient
> will always get the message, but if we allow for the possibility of
> delivery failure we can reduce traffic.
>=20
> The protocol I propose is thus as follows: peers send hop-to-hop
> encrypted packets to a subset of the other nodes on the network. Each
> packet contains the payload (encrypted for the intended recipient) and =
a
> TTL counter. If a peer cannot decrypt the payload, the message is not
> intended for them and so the TTL is decreased and the new message is
> then broadcast out to another random subset of the peers on the =
network.
> Again, we include noise packets.
>=20
> For a TTL of t and a subset network ratio of s, we thus expect ts
> transmissions for a single packet, where we intend ts < n so as to
> obtain a more efficient solution.
>=20
> Other possible considerations are non-fully connected networks, =
although
> I believe that a theoretically secure routing protocol must fulfil at
> least one of the two axioms:
> 1) all peers must eventually receive the message; or
> 2) the message is not guaranteed to reach its intended recipient.
>=20
> Thoughts? Also, is there any literature on or implementations of
> theoretically secure networks?
>=20


--Apple-Mail=_C02943A8-266C-494B-9303-9969784BB182
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=us-ascii

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html =
charset=3Dus-ascii"></head><body style=3D"word-wrap: break-word; =
-webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">There =
was a lot of analysis like this back in the 1990's on this list. You =
could probably look for it in the archives.<div><br></div><div>In =
general, store and forward anonymity services, like Mixmaster, have much =
better anonymity characteristics than real time systems like TOR, =
basically for the reasons you outline.</div><div><br></div><div><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	=
</span>-Lance</div><div><br><div apple-content-edited=3D"true">
<span class=3D"Apple-style-span" style=3D"border-collapse: separate; =
color: rgb(0, 0, 0); font-family: Helvetica; font-style: normal; =
font-variant: normal; font-weight: normal; letter-spacing: normal; =
line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: =
0px; text-transform: none; white-space: normal; widows: 2; word-spacing: =
0px; -webkit-border-horizontal-spacing: 0px; =
-webkit-border-vertical-spacing: 0px; =
-webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: =
auto; -webkit-text-stroke-width: 0px; font-size: medium; =
"><div>--</div><div>Lance Cottrell</div><div><a =
href=3D"mailto:loki@obscura.com">loki@obscura.com</a></div><div><br></div>=
</span><br class=3D"Apple-interchange-newline">

</div>
<br><div><div>On Aug 12, 2013, at 7:21 AM, John Preston &lt;<a =
href=3D"mailto:gizmoguy1@gmail.com">gizmoguy1@gmail.com</a>&gt; =
wrote:</div><br class=3D"Apple-interchange-newline"><blockquote =
type=3D"cite">Hi all,<br><br>Long-time follower, first time poster. I =
have an interest in darknets<br>and saw this paper<br>(<a =
href=3D"http://www.ieee-security.org/TC/SP2013/papers/4977a080.pdf">http:/=
/www.ieee-security.org/TC/SP2013/papers/4977a080.pdf</a>) today in =
a<br>message under "Freedom Hosting Owner Arrested, Tormail =
Compromised,<br>Malicious JS Discovered", which naturally got me quite =
worried. It did<br>remind, however, about a few ideas I have had in the =
past about<br>guarantees of anonymity in a network.<br><br>Consider a =
broadcast network: an eavesdropper cannot tell who a message<br>is =
intended for from just the transmission itself. By using =
asymmetric<br>encryption, the contents of the message can also be made =
unreadable to<br>the eavesdropper and all unintended recipients, still =
preserving perfect<br>single fact anonymity.<br><br>Over time, an =
attacker could determine the intended recipient by looking<br>at who =
sent messages within a certain time frame from receiving a<br>message: =
the information gain from this is increased substantially if<br>certain =
information about the protocol of the messages is known (e.g. =
if<br>we're anonymising a real-time protocol, timed traffic analysis =
can<br>reveal an intended recipient with a high degree of certainty). =
This can<br>be defeated by including noise in the network: peers =
constantly produce<br>garbage packets.<br><br>I believe that this would =
yield information theoretically secure<br>anonymity, as an attacker is =
looking for hay in a haystack, so to speak.<br>Obviously, the problem =
with this protocol is that it is horrendously<br>inefficient.<br><br>I =
am inclined to believe that we can preserve the anonymity =
properties<br>of this protocol while reducing its network load, in =
exchange for<br>reliability. The original protocol implies that the =
intended recipient<br>will always get the message, but if we allow for =
the possibility of<br>delivery failure we can reduce traffic.<br><br>The =
protocol I propose is thus as follows: peers send =
hop-to-hop<br>encrypted packets to a subset of the other nodes on the =
network. Each<br>packet contains the payload (encrypted for the intended =
recipient) and a<br>TTL counter. If a peer cannot decrypt the payload, =
the message is not<br>intended for them and so the TTL is decreased and =
the new message is<br>then broadcast out to another random subset of the =
peers on the network.<br>Again, we include noise packets.<br><br>For a =
TTL of t and a subset network ratio of s, we thus expect =
ts<br>transmissions for a single packet, where we intend ts &lt; n so as =
to<br>obtain a more efficient solution.<br><br>Other possible =
considerations are non-fully connected networks, although<br>I believe =
that a theoretically secure routing protocol must fulfil at<br>least one =
of the two axioms:<br> 1) all peers must eventually receive the message; =
or<br> 2) the message is not guaranteed to reach its intended =
recipient.<br><br>Thoughts? Also, is there any literature on or =
implementations of<br>theoretically secure =
networks?<br><br></blockquote></div><br></div></body></html>=

--Apple-Mail=_C02943A8-266C-494B-9303-9969784BB182--

