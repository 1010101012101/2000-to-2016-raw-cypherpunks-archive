From owner-cypherpunks@Algebra.COM  Wed Jun 19 18:58:56 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.mit.edu (8.11.6/8.9.3) with ESMTP id g5JMwup26215
	for <rsw@jfet.org>; Wed, 19 Jun 2002 18:58:56 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id SAA14930
	for <rsw@mit.edu>; Wed, 19 Jun 2002 18:55:13 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g5JM29iu002991
	for <cypherpunks-outgoing@ak47.algebra.com>; Wed, 19 Jun 2002 17:02:09 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g5JM29JS002990
	for cypherpunks-outgoing; Wed, 19 Jun 2002 17:02:09 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from locust.minder.net (locust.minder.net [66.92.53.74])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g5JM26iu002975
	for <cypherpunks@algebra.com>; Wed, 19 Jun 2002 17:02:06 -0500
Received: from waste.minder.net (daemon@waste [66.92.53.73])
	by locust.minder.net (8.11.6/8.11.6) with ESMTP id g5JM1pE42621
	for <cypherpunks@algebra.com>; Wed, 19 Jun 2002 18:01:55 -0400 (EDT)
	(envelope-from cpunks@waste.minder.net)
Received: (from cpunks@localhost)
	by waste.minder.net (8.11.6/8.11.6) id g5JM1oo21558
	for cypherpunks@algebra.com; Wed, 19 Jun 2002 18:01:50 -0400
Received: from locust.minder.net (locust.minder.net [66.92.53.74])
	by waste.minder.net (8.11.6/8.11.6) with ESMTP id g5JM1nu21547
	for <cpunks@minder.net>; Wed, 19 Jun 2002 18:01:49 -0400
Received: from einstein.ssz.com (cpunks@[207.200.56.4])
	by locust.minder.net (8.11.6/8.11.6) with ESMTP id g5JM1mE42617
	for <cpunks@minder.net>; Wed, 19 Jun 2002 18:01:48 -0400 (EDT)
	(envelope-from cpunks@einstein.ssz.com)
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id RAA01373
	for cpunks@minder.net; Wed, 19 Jun 2002 17:06:58 -0500
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id RAA01348
	for cypherpunks-outgoing; Wed, 19 Jun 2002 17:05:29 -0500
Received: from localhost (ravage@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) with SMTP id RAA01312;
	Wed, 19 Jun 2002 17:04:04 -0500
Date: Wed, 19 Jun 2002 17:04:04 -0500 (CDT)
From: Jim Choate <ravage@einstein.ssz.com>
To: hangar18-general@open-forge.org
cc: plan9-system-admin@open-forge.org, open-science-general@open-forge.org,
   austin-cpunks@einstein.ssz.com, cypherpunks@einstein.ssz.com
Old-Subject: CDR: [9fans] tls tunnelling (fwd)
Message-ID: <Pine.LNX.3.96.1020619170306.1158V-100000@einstein.ssz.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-Unsubscription-Info: http://einstein.ssz.com/cdr
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Acceptable-Languages: English, Russian, German, French, Spanish
Old-Subject: [9fans] tls tunnelling (fwd)
Subject:  [9fans] tls tunnelling (fwd)
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
X-spam: 0 
Status: O
Content-Length: 4023
Lines: 113



---------- Forwarded message ----------
Date: Mon, 17 Jun 2002 21:47:49 -0700
From: Russ Cox <rsc@plan9.bell-labs.com>
Reply-To: 9fans@cse.psu.edu
To: 9fans@cse.psu.edu
Subject: [9fans] tls tunnelling

I was intrigued by the prospect of running a
TLS-tunneled VNC over the internet (since right
now I run plaintext VNCs over the internet),
so I looked up stunnel.  The interface seemed
more reasonable than what I posted earlier today,
so I built an equivalent one for Plan 9.

Sources now has the following new (and documented) programs:

	aux/listen1 - simple network listener like inferno's listen(1)
	tlsclient - what i posted earlier, but no cmd
	tlssrvtunnel - server side tunneler
	tlssrvclient - client side tunneler

I figured out how to generate new certificates with
OpenSSL and documented that too.

Enjoy.
Russ

     TLSSRV(8)                                               TLSSRV(8)

     NAME
          tlssrv, tlsclient, tlssrvtunnel, tlsclienttunnel - TLS
          server and client

     SYNOPSIS
          tlssrv [ -c cert.pem ] [ -l logfile ] [ -r remotesys ] cmd [
          args ... ]

          tlsclient [ -t trustedkeys ] [ -x excludedkeys ] address

          tlssrvtunnel plain-addr crypt-addr cert.pem

          tlsclienttunnel crypt-addr plain-addr trustedkeys

     DESCRIPTION
          Tlssrv is a helper program, typically exec'd in a
          /bin/service file to establish an SSL or TLS connection
          before launching cmd args; a typical command might start the
          IMAP or HTTP server.  Cert.pem is the server certificate;
          factotum(4) should hold the corresponding private key.  The
          specified logfile is by convention the same as for the tar-
          get server.  Remotesys is mainly used for logging.

          Tlsclient is the reverse of tlssrv: it dials address, starts
          TLS, and then relays between the network connection and
          standard input and output.  If the -t flag (and, optionally,
          the -x flag) is given, the remote server must present a key
          whose SHA1 hash is listed in the file trustedkeys but not in
          the file excludedkeys. See thumbprint(6) for more informa-
          tion.

          Tlssrvtunnel and tlsclienttunnel use these tools and listen1
          (see listen(8)) to provide TLS network tunnels, allowing
          legacy application to take advantage of TLS encryption.

     EXAMPLES
          Listen for TLS-encrypted IMAP by creating a server certifi-
          cate /sys/lib/tls/imap.pem and a listener script
          /bin/service.auth/tcp993 containing:

               #!/bin/rc
               exec tlssrv -c/sys/lib/tls/imap.pem -limap4d -r`{cat $3/remote} \
                   /bin/ip/imap4d -p -dyourdomain -r`{cat $3/remote} \
                   >[2]/sys/log/imap4d

          Interact with the server, putting the appropriate hash into
          /sys/lib/tls/mail and running:

               tlsclient -t /sys/lib/tls/mail tcp!server!imaps

          Create a TLS-encrypted VNC connection from a client on
          kremvax to a server on moscvax:

               mosc% vncs -d :3
               mosc% tlssrvtunnel tcp!moscvax!5903 tcp!*!12345 \
                       /usr/you/lib/cert.pem
               krem% tlsclienttunnel tcp!moscvax!12345 tcp!*!5905 \
                       /usr/you/lib/cert.thumb
               krem% vncv kremvax:5

          (The port numbers passed to the VNC tools are offset by 5900
          from the actual TCP port numbers.)

     FILES
          /sys/lib/tls

     SOURCE
          /sys/src/cmd/tlssrv.c
          /sys/src/cmd/tlsclient.c
          /rc/bin/tlssrvtunnel
          /rc/bin/tlsclienttunnel

     SEE ALSO
          factotum(4), listen(8)
          Unix's stunnel

     BUGS
          There is not yet a Plan 9 tool to generate X.509 certifi-
          cates and public keys.  Instead, use the Unix openssl
          toolkit:

               openssl req -x509 -nodes -newkey rsa:1024 -keyout key.pem -out cert.pem

