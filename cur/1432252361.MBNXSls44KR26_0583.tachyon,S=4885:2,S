From cypherpunks-bounces@cpunks.org  Sun Sep  8 07:53:21 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r88BrKtE028039;
	Sun, 8 Sep 2013 07:53:20 -0400
Received: from leitl.org (v8.ativel.com [164.177.174.8])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r88BqDbN028026
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@al-qaeda.net>; Sun, 8 Sep 2013 07:52:15 -0400
Received: by leitl.org (Postfix, from userid 1000)
 id 1F0BB543E42; Sun,  8 Sep 2013 13:52:13 +0200 (CEST)
Date: Sun, 8 Sep 2013 13:52:13 +0200
From: Eugen Leitl <eugen@leitl.org>
To: cypherpunks@al-qaeda.net, info@postbiota.org, zs-p2p@zerostate.is
Subject: Re: [Cryptography] Why prefer symmetric crypto over public key crypto?
Message-ID: <20130908115212.GA29404@leitl.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.21 (2010-09-15)
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 3116
Lines: 67

----- Forwarded message from Bill Stewart <bill.stewart@pobox.com> -----

Date: Sat, 07 Sep 2013 11:07:39 -0700
From: Bill Stewart <bill.stewart@pobox.com>
To: cryptography@metzdowd.com
Subject: Re: [Cryptography] Why prefer symmetric crypto over public key crypto?
X-Mailer: QUALCOMM Windows Eudora Version 7.1.0.9


> On 7/09/13 09:05 AM, Jaap-Henk Hoepman wrote:
>>> Public-key cryptography is less well-understood than
>>> symmetric-key cryptography. It is also tetchier than
>>> symmetric-key crypto, and if you pay attention to us talking
>>> about issues with nonces, counters, IVs, chaining modes, and
>>> all that, you see that saying that it's tetchier than that is a
>>> warning indeed.
>> 
>> You have the same issues with nonces, counters, etc. with
>> symmetric crypto so I don't see how that makes it preferable over
>> public key crypto.

At 12:57 AM 9/7/2013, ianG wrote:
> It's a big picture thing.  At the end of the day, symmetric crypto
> is something that good software engineers can master, and
> relatively well, in a black box sense.  Public key crypto not so
> easily, that requires real learning.  I for one am terrified of it.

Public-key crypto requires learning math, and math is hard (or at
least ECC math is hard, and even prime-number-group math has some
interesting tricks in it.)
Symmetric-key crypto is easy in a black-box sense, because most
algorithms come with rules that say "You need to do this and not do
that", yet the original PPTP did half a dozen things wrong with RC4
even though the only rule is "never use the same state twice."
But if you want to look inside the black box, most of what's there is
a lot of bit-twiddling, maybe in a Feistel network, and while you can
follow the bits around and see what changes, there can still be
surprises like the discovery of differential cryptanalysis.
Public-key crypto lets you use math to do the analysis, but [vast
over-simplification] symmetric-key mostly lets you play around and
decide if it's messy enough that you can't follow the bits.

But there are other traps that affect people with either kind of
system.  Once PGP got past the Bass-o-matic stage, the biggest
security problems were mostly things like variable-precision numbers
that were trying so hard to save bits that you could trick the program
into interpreting them differently and accepting bogus information.
Fortunately we'd never have problems like that today (yes, ASN.1
BER/DER, I'm looking at you....), and nobody ever forgets to check
array bounds (harder in modern languages than in C or Fortran, but
still quite possible), or fails to validate input before using it (SQL
injections), etc.




_______________________________________________
The cryptography mailing list
cryptography@metzdowd.com
http://www.metzdowd.com/mailman/listinfo/cryptography

----- End forwarded message -----
-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a> http://leitl.org
______________________________________________________________
ICBM: 48.07100, 11.36820 http://ativel.com http://postbiota.org
AC894EC5: 38A5 5F46 A4FF 59B8 336B  47EE F46E 3489 AC89 4EC5

