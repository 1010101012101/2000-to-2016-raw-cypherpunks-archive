From cypherpunks-bounces@cpunks.org  Thu Sep 26 06:33:09 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r8QAWT3E025575;
	Thu, 26 Sep 2013 06:32:33 -0400
Authentication-Results: antiproton.jfet.org; dkim=pass
	reason="2048-bit key; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=cHuuSVDL;
	dkim-adsp=pass; dkim-atps=neutral
Received: from mail-lb0-f178.google.com (mail-lb0-f178.google.com
 [209.85.217.178])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r8QAWP7i025571
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Thu, 26 Sep 2013 06:32:27 -0400
Received: by mail-lb0-f178.google.com with SMTP id z5so913151lbh.9
 for <cypherpunks@cpunks.org>; Thu, 26 Sep 2013 03:32:18 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :cc:content-type;
 bh=xsS5g3R18T1cV958iD+0AdTYSXI2BMyvCAJsnOogkSk=;
 b=cHuuSVDLuLhgykVkyCnHHmjUwEAxY7x9wNy45owy12oggy4RCGlwowxdry7bTvGY7U
 9uNBqEFY1CZyRV4diNftMmwdzc2zaVrMt/indEAJswk6HD2WmVJYsTVnV8m0InMhDy4+
 n1DdA8lPh2DTS2SeNDqco2K2e+3ruREQjWU2bIShZDOVjIINx4/TR396WrvLkqDj59GL
 kUFKG9Xqm2Wz20+Cs51dimTv4zLKoUmugqLXIT8tWDzQTIlXBYAVgIQMO/gXjsHfBxA1
 152+Sdr3uJxPd1NLJl2XJM9Um8wrH2kNPHgwTKgOSQ+YXIPRVBlHMmS9mzp8ZXSnmDAQ
 uRnw==
MIME-Version: 1.0
X-Received: by 10.152.87.169 with SMTP id az9mr66161lab.65.1380191538404; Thu,
 26 Sep 2013 03:32:18 -0700 (PDT)
Received: by 10.112.205.132 with HTTP; Thu, 26 Sep 2013 03:32:18 -0700 (PDT)
In-Reply-To: <CADhsnxdoDgq8z_gHqrVAXBcQRjqU5fuWRqvE=mRMJugz2XvpKw@mail.gmail.com>
References: <CADhsnxdoDgq8z_gHqrVAXBcQRjqU5fuWRqvE=mRMJugz2XvpKw@mail.gmail.com>
Date: Thu, 26 Sep 2013 03:32:18 -0700
Message-ID: <CAJVRA1R-M-BBQNNBHfVgQE16To4vakprOwHQbcnzMeGvDZP_qA@mail.gmail.com>
Subject: Re: The Unbreakable Cipher (2)
From: coderman <coderman@gmail.com>
To: brian carroll <electromagnetize@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1
Cc: cpunks <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 1840
Lines: 57

On Thu, Sep 26, 2013 at 2:34 AM, brian carroll
<electromagnetize@gmail.com> wrote:
> coderman wrote:
>
>> you're wrong.
>
>  perfect. thank you

brian: you're a verbose individual. but you respond usefully *grin*




>  i think i grasp a fundamental concept of crypto
>  that relates size of message (message length)
>  with design of algorithmic structure needed to
>  successfully embed or hide the message else
>  hidden order may be easily visible/discovered

it is interesting how these fundamentals change across public key
systems, and the ideal one time pad.

symmetric ciphers are a particular beast... (and combined
authentication and encryption modes even more particular ;)



>  i still contend this is different for set theory and
>  models of noise ...
>
>  in that 'keys' could function differently in bit set
>  approach though perhaps rekeying is universal
>  as a security principle yet potentially flawed if
>  it could reveal a particular structure leading
>  to its compromise...

in a poor implementation or protocol, re-keying can provide an
opportunity for cipher suite downgrade or other privacy destroying
attacks.

effective frequent re-keying requires the other INFOSEC/OPSEC
dependencies be met!


> whereas reusing an 'infinity
>  key' (regenerating keys or using same key in
>  new instantiations, accessing different arbitrary
>  structure as keychain multitool) may function
>  in a different context than existing approaches,

note that for all intents and purposes, you should use a fresh,
absolutely random key for each re-keying.  key "stretching" or
derivation methods suffer the same types of vulnerabilities over large
enough output that the original cipher does.

instead of spending your time trying to securely "stretch" a few keys,
just generate a large number of perfectly random keys instead!

