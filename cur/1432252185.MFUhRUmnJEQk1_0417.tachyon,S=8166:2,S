From rswatjfet.org+caf_=rsw=jfet.org@gmail.com  Sun Jul 27 19:03:39 2014
Return-Path: <rswatjfet.org+caf_=rsw=jfet.org@gmail.com>
Received: from mail-pa0-f50.google.com (mail-pa0-f50.google.com [209.85.220.50])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6RN3cji012762
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
	for <rsw@jfet.org>; Sun, 27 Jul 2014 19:03:39 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=gmail.com header.i=@gmail.com header.b=g1GVS2sy;
	dkim-adsp=none (unprotected policy); dkim-atps=neutral
Received: by mail-pa0-f50.google.com with SMTP id et14so9403846pad.9
        for <rsw@jfet.org>; Sun, 27 Jul 2014 16:03:11 -0700 (PDT)
X-Received: by 10.66.66.133 with SMTP id f5mr34334610pat.81.1406502191130;
        Sun, 27 Jul 2014 16:03:11 -0700 (PDT)
X-Forwarded-To: rsw@jfet.org
X-Forwarded-For: rswatjfet.org@gmail.com rsw@jfet.org
Delivered-To: rswatjfet.org@gmail.com
Received: by 10.70.3.197 with SMTP id e5csp182013pde;
        Sun, 27 Jul 2014 16:03:10 -0700 (PDT)
X-Received: by 10.66.173.144 with SMTP id bk16mr34924307pac.34.1406502190109;
        Sun, 27 Jul 2014 16:03:10 -0700 (PDT)
Received: from localhost (antiproton.jfet.org. [209.141.47.85])
        by mx.google.com with ESMTPS id sx5si15948698pab.126.2014.07.27.16.03.09
        for <rswATjfet.org@gmail.com>
        (version=TLSv1.2 cipher=RC4-SHA bits=128/128);
        Sun, 27 Jul 2014 16:03:10 -0700 (PDT)
Received-SPF: neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) client-ip=209.141.47.85;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: 209.141.47.85 is neither permitted nor denied by domain of rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net) smtp.mail=rsw+cypherpunks-bounces=cpunks.org@gloop.phonon.net;
       dkim=neutral (body hash did not verify) header.i=@;
       dmarc=fail (p=NONE dis=NONE) header.from=gmail.com
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6RN1eED012726;
	Sun, 27 Jul 2014 19:01:50 -0400
Received: from mail-oa0-f50.google.com (mail-oa0-f50.google.com
 [209.85.219.50])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s6RN1Zx2012722
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Sun, 27 Jul 2014 19:01:36 -0400
Received: by mail-oa0-f50.google.com with SMTP id g18so7867866oah.37
 for <cypherpunks@cpunks.org>; Sun, 27 Jul 2014 16:01:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:in-reply-to:references:date:message-id:subject:from:to
 :cc:content-type:content-transfer-encoding;
 bh=EkdN/YOAjiVxk4FdydsSKgtdZks9lVGgW0Jayg9GxDw=;
 b=g1GVS2syI91lNPDWH5ONyGlfqTWY3G0y3hwSK+YcEz9ZOo/qAcIL5zfUEEtXtQO89G
 mAcHvN1q2yc9Y4t1unt9WkgrEP4oe0Ch7SOXYFXJW63a1wnthSPo8IQMnqwZLYsfAeXB
 VVghc9gJf0x5YSVcAs9L3o8qPApU+5nDgwi51lqcpfWgI5etq5gpju57315+hGmO+8PT
 Q2I9rbr604Gcq2SLkDT2+zBVGGsYHasEOZAROl2qQRTBMeJknvhfsTK+z6ZW649stlFr
 gwqIrZoCv3tyAnJ7MfxWRDnykT3efsKjqzYHLRnK6DOewOnwEm1uRt8eb71xBM+m7dgV
 2blg==
MIME-Version: 1.0
X-Received: by 10.60.134.102 with SMTP id pj6mr45026920oeb.70.1406502069908;
 Sun, 27 Jul 2014 16:01:09 -0700 (PDT)
Received: by 10.182.236.104 with HTTP; Sun, 27 Jul 2014 16:01:09 -0700 (PDT)
In-Reply-To: <20140726185728.GH6725@thunk.org>
References: <CAHWD2rKJxyh+Z6v3=UUCKFyTfkEQ8+9-YYjFFrvm9hOKXrhb+g@mail.gmail.com>
 <20140726185728.GH6725@thunk.org>
Date: Sun, 27 Jul 2014 19:01:09 -0400
Message-ID: <CAD2Ti29iFBDyMZyLXTyHUAf5smHeu6OiSBYb7nZrj_CFsvK1=g@mail.gmail.com>
Subject: Re: [Cryptography] Browser JS (client side) crypto FUD
To: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by antiproton.jfet.org id
 s6RN1Zx2012722
Cc: cryptography <cryptography@metzdowd.com>,
        Crypto discussion list <cryptography@randombit.net>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
From: grarpamp <grarpamp@gmail.com>
X-Gspam-Loop: antiproton.jfet.org
Status: O
Content-Length: 3264
Lines: 83

On Sat, Jul 26, 2014 at 2:57 PM, Theodore Ts'o <tytso@mit.edu> wrote:
> On Sat, Jul 26, 2014 at 05:03:46PM +0200, Lodewijk andrÃ© de la porte wrote:
>>
>> "WHAT'S THE "CHICKEN-EGG PROBLEM" WITH DELIVERING JAVASCRIPT CRYPTOGRAPHY?

> Somebody, please, give me something to say against people that claim JS
> client side crypto can just never work!

// ianG
// It's like opportunistic security..
// It specifically defeats mass surveillance... This is a valuable thing.

Yes, it's nice and helps. It just needs to come with better
disclaimers. Otherwise companies/providers that remain
silent on their threat models do nothing but tarnish themselves
amongst those that know better. Such silence could backfire.
Whether they get used as an bad example in security presentations,
or something happens to one or more of their users they effectively
sold (or gave) snakeoil to.

> Like it or not, the vast majority of people are using some kind of web
> based e-mail, whether it's GMail or Yahoo Mail or Hotmail, or
> something else.

Please provide link to your source that breaks down Email use by
HTTP, IMAP/SMTP and legacy POP. And their crypted versions.


> I think it's a bit more complicated than you're making it out to be.
> Ultimately, the nearly all of the software that people run come from
> the network, at one time or another.  Even if you are using gpg
> running on your linux laptop, where did you get your copy of gpg and
> the Linux OS?  Odds are, you got it over the network.

The problem is the context of where in the network you got the
software from, and who you're using it with, and who you're trying
to keep in the dark.

If your first install or subsequent updates are from your mail,
storage, or comms central service provider, etc... that's a major
and direct conflict of your security interests. It's why Matasano
objects.  You don't download your OS from your adversary.

On the other hand, if you obtain and use the code independantly
of your provider, or the code creates a disinterested decentral
P2P infrastructure (Freenet, etc)... then you're in a much better
position. You've inserted a layer of independance/abstraction.

Similar to installing gnupg to use independantly...
https://openpgpjs.org/
http://code.google.com/p/crypto-js/
You should be able to download openpgp.js from the code distribution
point, read any audits, check the sig, locally load and permanently
lock it into your browser from your plugins directory. And then
mail providers should develop a consistant RFC based API from which
you interact with them so you don't have to download whatever blob
they claim you need.

Directly trusting codeloading works fine for internal corporate
environments. But it's a really bad idea elsewhere.


Examples of careful differences in security model...

Holds the keys
https://www.hushmail.com/

Provides the code
https://encrypt.to/
https://www.bitaddress.org/
https://brainwallet.github.io/

Browser addon (likely dependant on provider webmail scraping 'API':
remember attempts to scrape providers that did not offer IMAP/POP.)
https://www.mailvelope.com/

Standalone webclient
https://whiteout.io/technology.html
https://www.mailpile.is/
 https://github.com/pagekite/Mailpile

Standalone UI
https://www.enigmail.net/

