From cypherpunks-bounces@cpunks.org  Sat Jan 11 15:52:08 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0BKpoqR029885;
	Sat, 11 Jan 2014 15:51:50 -0500
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=uqebHbV3;
	dkim-adsp=none (insecure policy); dkim-atps=neutral
Received: from mail-pb0-f41.google.com (mail-pb0-f41.google.com
 [209.85.160.41])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0BKplUb029880
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Sat, 11 Jan 2014 15:51:48 -0500
Received: by mail-pb0-f41.google.com with SMTP id jt11so5796526pbb.28
 for <cypherpunks@cpunks.org>; Sat, 11 Jan 2014 12:51:40 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=content-type:mime-version:subject:from:in-reply-to:date:cc
 :content-transfer-encoding:message-id:references:to;
 bh=girV3LPPx7rpmxRvUWq1qYxyeW26j2mbVSaM/2Dp4YM=;
 b=uqebHbV3NecNjVSlzOJIINGB2mnRH7uKBBLBvo1tzxWwYYJJqYNJFQpZ2Uv0C1yfnj
 Co1ht4aJRY2qT5tdBkHfGiE8B6vAe57624XVs7LBqzha53KqzC+xSxafj9tds4lExO8L
 h66C7Ekw08OIpwGsld4cBk2bbDc965N+m7O8T1Uo3GXQmfzrjG8rC1BLgcYCl2emPcZW
 UnCxwrS4KkgFwouUxQb6nIw3YtCv0NdpMHAsDfK/W9kqLyRLr0fJ4StcxPhP+Vto+72O
 IRTG/74hC8WgCxS9LrQEcdKEKNl4iZrey1UjSB9tWappJf8/eFx9vHEA1Je9FBcfD3Hh
 ti/g==
X-Received: by 10.66.175.4 with SMTP id bw4mr20452705pac.56.1389473500028;
 Sat, 11 Jan 2014 12:51:40 -0800 (PST)
Received: from [10.0.1.6] ([12.131.214.70])
 by mx.google.com with ESMTPSA id lh13sm33950604pab.4.2014.01.11.12.51.39
 for <multiple recipients>
 (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
 Sat, 11 Jan 2014 12:51:39 -0800 (PST)
Content-Type: text/plain; charset=windows-1252
Mime-Version: 1.0 (Mac OS X Mail 7.1 \(1827\))
Subject: Re: base58 vs alt-alpha base64? (Re: Re: Curve p25519 Replacements
 for GnuPG?(x2 now) Re: Pretty Curved Privacy.. ECC Curve p25519
 util(Bernstein approved curve))
From: nymble <nymble@gmail.com>
In-Reply-To: <20140111134738.GA8992@netbook.cypherspace.org>
Date: Sat, 11 Jan 2014 12:51:38 -0800
Message-Id: <569259F4-C5B2-4B5D-8DF1-FDEBE4D68807@gmail.com>
References: <52CFE3E9.5040400@cypherpunks.to> <20140110122133.GG7008@ctrlc.hu>
 <52CFEC67.9090706@cypherpunks.to> <3153198.N6KqkV6bkD@lap>
 <52D00724.1030302@cypherpunks.to> <20140110150209.GO7008@ctrlc.hu>
 <52D02F64.3010006@cypherpunks.to>
 <A946555C-7420-4EF8-B5F6-F841C7EC5621@gmail.com>
 <20140111095848.GT7008@ctrlc.hu>
 <20140111134738.GA8992@netbook.cypherspace.org>
To: Adam Back <adam@cypherspace.org>
X-Mailer: Apple Mail (2.1827)
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by antiproton.jfet.org id
 s0BKplUb029880
Cc: cypherpunks@cpunks.org
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>


On Jan 11, 2014, at 5:47 AM, Adam Back <adam@cypherspace.org> wrote:

> Bitcoin base58 seemed a to have some minor unfortunate side effects to me,
> the intent is good to avoid transcription error, but surely one could find
> 64-chars.  it could have easily been base 60 to start with (dont delete both
> 0 and O, and 1 and l just make the equivalent!).  
Possible, but breaks string compare.  Also adds human confusion in interpretation/typing.


> Then you have URL encoding
> ambiguity,
oh … yes.  same point

> C/python/bash programming string quoting that rules out some more
> non alphanum chars.  (base 64 includes +/).  Just seems some ugly code mess
> and implications for vanity address etc to deal with non-power-of-2
> encoding.
Yes … code is very ugly,  Human usability is more important ...

> 
> Adam
> 
> On Sat, Jan 11, 2014 at 10:58:48AM +0100, stef wrote:
>>> > 1l0$WoM5C8z=yeZG7?$]f^Uu8.g>4rf#t^6mfW9(rr910
>>> one of several possible text encodings
>>> Others might include:
>>> - base 29
>>> - base 59
oops intended base 58
>>> - base 4096 (for UTF8 channels)
base64: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/“
   compact, nice power of 2, human transcription errors likely
base58: “123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz”
    fairly readable, relatively compact
base29:  “ABCDEFGHJKMNPQRTUVWXYZ2346789"
   base 29 assumes lower upper case equivalence, always converts to upper for decode
    (removes  5,S  0,O  i,1,i,I )
   base 29 has the best human usability/readability and is not mangled
   very good for license keys and short sequences
   … 1/2 of efficiency (losing lower versus upper)

>> i like base85. ;)
oh - thanks, assume you mean RFC1924
base85: “0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~”
    nice shorter encoding.  Not  URL or human friendly, works well for email cut/paste  ‘<‘ might be problematic for web usage.


Paul

>> 
>> diversity!


