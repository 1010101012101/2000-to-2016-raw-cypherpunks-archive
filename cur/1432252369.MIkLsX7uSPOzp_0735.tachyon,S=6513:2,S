From cypherpunks-bounces@cpunks.org  Tue Jan 14 12:04:43 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0EH4fVE024849;
	Tue, 14 Jan 2014 12:04:42 -0500
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=lK7Z5nlF;
	dkim-adsp=none (insecure policy); dkim-atps=neutral
Received: from mail-pa0-f54.google.com (mail-pa0-f54.google.com
 [209.85.220.54])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id s0EH4dat024837
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Tue, 14 Jan 2014 12:04:40 -0500
Received: by mail-pa0-f54.google.com with SMTP id fa1so2379056pad.13
 for <cypherpunks@cpunks.org>; Tue, 14 Jan 2014 09:04:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=content-type:mime-version:subject:from:in-reply-to:date:cc
 :content-transfer-encoding:message-id:references:to;
 bh=+5i0QzIoA86lgpM1KlmePafkqtM4GnrzGKF4yHTpSfI=;
 b=lK7Z5nlFE7PgwoXjz9lt0SzMkpw9FaGHYwAO7tRe3w8L/7HGoeAR5RPlOoKLNsZX56
 RYp5SeTk9122P9SG+zDUH0sOZJXIx07OP3lSGPWjDGM34pVpBmVM7SfW6kPT6jhUnpAa
 spEWpkpwRlGbJsHElvWwxNVV/FJdbWpFeN9ArT5D+Tw1KTV4KPsgXVzmGWOJ7PIBYQHE
 uCOlOi0W5i/PUzqh++Yj/Pnapire+7G2VlXDjvqI1XyrglrkFIkhkdRACFfy6rxoxEAn
 Err4yWusnf4m4xur/K9ng7mByj2/U5D+krS8uz5PJhM4mLV5dt+o7GeBwarvn79X0ORQ
 JtBA==
X-Received: by 10.66.136.107 with SMTP id pz11mr3049076pab.118.1389719071449; 
 Tue, 14 Jan 2014 09:04:31 -0800 (PST)
Received: from [10.0.1.6] ([12.131.214.70])
 by mx.google.com with ESMTPSA id sy10sm2985628pac.15.2014.01.14.09.04.29
 for <multiple recipients>
 (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
 Tue, 14 Jan 2014 09:04:30 -0800 (PST)
Content-Type: text/plain; charset=windows-1252
Mime-Version: 1.0 (Mac OS X Mail 7.1 \(1827\))
Subject: Re: consistent pcp/pbp formats (was: Curve p25519 Replacements for
 GnuPG?(x2 now) ..)
From: nymble <nymble@gmail.com>
In-Reply-To: <20140114111653.GD3900@r4>
Date: Tue, 14 Jan 2014 09:04:29 -0800
Message-Id: <234EBEB4-F066-469A-8F49-D86DCDB30166@gmail.com>
References: <20140114111653.GD3900@r4>
To: Thomas von Dein <tom@vondein.org>
X-Mailer: Apple Mail (2.1827)
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by antiproton.jfet.org id
 s0EH4dat024837
Cc: cypherpunks@cpunks.org
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>


On Jan 14, 2014, at 3:16 AM, Thomas von Dein <tom@vondein.org> wrote:

> 
>> - coordinate representation x, x&y, x and sign ...
>> or bits to show which of these ... perhaps borrow ANSI method
> 
> Could you please explain this further?
ANSI defined (and used by NIST and others) the use of the first byte of
a elliptic curve point representation to indicate if it is:
 - both x&y coordinates
 - compressed with sign in the byte
 - ..just x (guessing on this need to go check)

bit coin may use the same … easiest doc
to find would be in RFCs

However … if the key is solely for an initial DH
exchange you may not need anything.

> 
>> - hint / indication of cipher suite / curve 
> 
> In pcp there's already such a hint included in exported keys, however
> I'm not using it, since there's no choice of different curves in
> libsodium so far. But it's on the list.

OIDs suck.  A simple registry would be nice.
You need to know the key type when 
publicly  introduced … but there are applications where
you would want to be stealthier on indicating suite usage

> 
>> - text encoding of binary format (ascii)
> 
> As already stated in the other subthread, I use Z85, while stef is using
> base85. Since Z85 is a subset of base85, I'm pretty sure we can agree on
> something.
Not familiar with Z85 … pointer please ...
base85 or Z85 are a decent balance of compression and robustness
for applications like email signatures

> 
>> - human readable format
> 
> There's a human readable version of keys in pcp, but the tool itself
> doesn't use it (example attached). It uses the z85 encoded binary part
> of such a file.
> 
> pcp has some more fields stored in a key than pbp:
> 
> - a key id (e.g. 0x54E9C62E1852EBC5) which is required to identify a key
base27 would be much better for a ‘id’ that humans read
base16 is really old school

> - some text fields (owner, mail)
> - a serial number
> - key format version number
> 
> I'm not sure, how stef solved the ed25519 issue (you can't use a
> curve25519 secret key to create an ed25519 signature directly). After
> some discussion on the libsodium mailinglist we came up with this:
curve naming, test vectors, algorithm usage need work ...

> 
> When the user generates a new key, the ed25519 secret key will be
> generated first. The curve25519 secret will be derived from that, since
> the ed25519 already contains a usable curve25519 key. In pcp I store
> both of them for easier access, so the ed25519 and curve25519 secret and
> public keys are stored, the secret keys are encrypted and I store the
> nonce as well (see include/pcp/key.h).
> 
> Speaking of key encryption: @stef: according to your docs you're already
> using scrypt() for key derivation. I'd like to use that as well, but
> it's not part of libsodium (afaik), so I use my own method for this til
> scrypt() is implemented in libsodium. That's because I want to avoid
> writing crypto code myself.
> 
> Maybe we should iron out the details off-list?
I’m interested … 
Paul

> 
> 
> 
> bes,
> Tom
> 
> -- 
>    PGP Key: https://www.daemon.de/txt/tom-pgp-pubkey.txt
> S/Mime Cert: https://www.daemon.de/txt/tom-smime-cert.pem
> Bitmessage: BM-2DAcYUx3xByfwbx2bYYxeXgq3zDscez8wC
> 
> -- 
> This message has been scanned for viruses and
> dangerous content by MailScanner, and is
> believed to be clean.
> 
> <key-alicia-pub.txt>


