From coderpunks-errors@toad.com  Thu Jan 11 04:44:03 2001
Received: from MIT.EDU (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.69.0.28])
	by positron.mit.edu (8.9.3/8.9.3) with SMTP id EAA32176
	for <kwantam@positron.mit.edu>; Thu, 11 Jan 2001 04:44:03 -0500
Received: from toad.com by MIT.EDU with SMTP
	id AA12038; Thu, 11 Jan 01 04:45:49 EST
Received: (from majordom@localhost) by toad.com (8.7.5/8.7.3) id BAA07631 for coderpunks-outgoing; Thu, 11 Jan 2001 01:24:20 -0800 (PST)
Received: from mss.rdc2.nsw.optushome.com.au (ha1.rdc2.nsw.optushome.com.au [203.164.2.50]) by toad.com (8.7.5/8.7.3) with ESMTP id BAA07589; Thu, 11 Jan 2001 01:21:31 -0800 (PST)
Received: from pobox.com ([203.164.25.175])
          by mss.rdc2.nsw.optushome.com.au
          (InterMail vM.4.01.03.00 201-229-121) with ESMTP
          id <20010111092113.VEFH13274.mss.rdc2.nsw.optushome.com.au@pobox.com>;
          Thu, 11 Jan 2001 20:21:13 +1100
Message-Id: <3A5D7B75.2C69D0E2@pobox.com>
Date: Thu, 11 Jan 2001 19:23:01 +1000
From: Eric Young <eay@pobox.com>
X-Mailer: Mozilla 4.76 [en] (WinNT; U)
X-Accept-Language: en
Mime-Version: 1.0
To: Eric Murray <ericm@lne.com>
Cc: =?iso-8859-1?Q?G=E9?= Weijers <ge@cobalt.com>, Xiao@toad.com,
        Peter 
	<pxiao@Liberate.com>,
        "'coderpunks@toad.com'" <coderpunks@toad.com>, cypherpunks@toad.com
Subject: Re: crypto implementation for small footprint devices
References: <953A023D1ACA2F45A31A6F9B7B2A992502E8A1F1@usscmail1.liberate.com> <20010110075913.A16618@progressive-systems.com> <20010110095512.Q19819@slack.lne.com>
Content-Type: text/plain; charset=iso-8859-1
Sender: owner-coderpunks@toad.com
Precedence: bulk
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by positron.mit.edu id EAA32176
Status: O
Content-Length: 2518
Lines: 46

Eric Murray wrote:
> 
> On Wed, Jan 10, 2001 at 07:59:13AM -0700, Gé Weijers wrote:
> > On Tue, Jan 09, 2001 at 03:42:45PM -0800, Xiao, Peter wrote:
> > > Hi,
> > > I am currently looking for crypto implementation that can fit into small
> > > footprint (in the order of 50K or less) devices. Ideally, an SSL type of
> > > protocol meets my requirements but it is almost impossible to implement it
> > > within 50K even with selected cipher suites. So, I am looking for
> > > alternatives (either symmetric key or public key based). I was thinking
> > > about WTLS but looks like its implementation can not be significantly
> > > smaller than that of TLS since it is also based on Public Key cryptography
> > > (I am wondering how it fits into a cellphone). Can any one tell me what is
> > > the approximate size of the client implementation of WTLS. Also, would
> > > anyone send some pointers to me regarding what I am looking for.
> >
> > It's not the public-key operations themselves that use the space. I've
> > managed to squeeze OAEP-formatted RSA encryption into less than
> > 20K. The public key was hard-wired, though. You probably want to stay
> > away from ASN.1 formatted data if space is a concern.

I have been doing some work on this recently, and also have gotten good,
results, specifically, PKCS#1 RSA multi-prime on a Palm is 16.5k
(1024-2 17.63sec, 1024-3 9.6sec, palm IIIx (68xxx 20mhz)), or more
interestingly
18k on a Psion (ARM7 36mhz, 1024-3 private in 0.18sec and 1024-2 in 0.34sec).
I'm waiting for ARM (or SH3/4 or anything other than 68xxx) to take over
the world.  It make the choice of public key algorithm based on
CPU load less irrelevant when low end devices have this sort of grunt.

I am interested in knowing how small EC can be for both
public/private operations.  Any public information or peoples experiences?

> Unfortunately anything that uses X.509 (like SSL) will require it.
> It's possible to write small X.509/ASN.1 decoding packages.  One that I
> wrote for a small-device SSL package takes about 11k code (gcc on Intel
> PIII) and it's not very optimized- there's lots of room to squeeze it
> down farther than the original application required.

Similar experiences here, we have an ASN.1 encoder/decoder in 8k.
I have not tries the really complex stuff yet,
like SET (and hopefully never will :-).  It is nice to have an ASN.1 encoder
this small but rather obviously it requires a bit of work per
ASN.1 data type.

eric (who has a day job at eay@rsasecurity.com.au)

