From owner-cryptography+rsw=mit.edu@wasabisystems.com  Fri Aug  9 10:25:06 2002
Return-Path: <owner-cryptography+rsw=mit.edu@wasabisystems.com>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g79EP5823607
	for <rsw@opamp.org>; Fri, 9 Aug 2002 10:25:05 -0400
Received: from lion.ninthwonder.com (lion.ninthwonder.com [151.199.66.147])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id KAA22185
	for <rsw@mit.edu>; Fri, 9 Aug 2002 10:25:04 -0400 (EDT)
Received: by lion.ninthwonder.com (Postfix, from userid 96)
	id DA5E530716; Fri,  9 Aug 2002 10:17:47 -0400 (EDT)
Delivered-To: cryptography@wasabisystems.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by lion.ninthwonder.com (Postfix) with ESMTP id EE30E3070A
	for <cryptography@wasabisystems.com>; Fri,  9 Aug 2002 10:17:44 -0400 (EDT)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id E58A7D97C9; Fri,  9 Aug 2002 10:17:43 -0400 (EDT)
Received: from www.aarg.net (www.aarg.net [206.101.74.70])
	by lion.ninthwonder.com (Postfix) with ESMTP id EC1053070A
	for <cryptography@wasabisystems.com>; Thu,  8 Aug 2002 19:55:53 -0400 (EDT)
Received: from www.aarg.net (IDENT:mix@localhost.localdomain [127.0.0.1])
	by www.aarg.net (8.12.3/8.12.3) with ESMTP id g78NtmIG015302
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO);
	Thu, 8 Aug 2002 16:55:48 -0700
Received: (from mix@localhost)
	by www.aarg.net (8.12.3/8.12.1/Submit) id g78NtjwK015300;
	Thu, 8 Aug 2002 16:55:45 -0700
Date: Thu, 8 Aug 2002 16:55:45 -0700
From: AARG!Anonymous <remailer@aarg.net>
Comments: This message did not originate from the Sender address above.
	It was remailed automatically by anonymizing remailer software.
	Please report problems or inappropriate use to the
	remailer administrator at <abuse@aarg.net>.
To: crawdad@fnal.gov, cypherpunks@lne.com, cryptography@wasabisystems.com
Subject: Re: Challenge to TCPA/Palladium detractors
Message-ID: <8c708993eecdbee279fbe47fdeb4a0d0@aarg.net>
Sender: owner-cryptography@wasabisystems.com
Precedence: bulk
Status: O
Content-Length: 1019
Lines: 22

Anon wrote:
> You could even have each participant compile the program himself,
> but still each app can recognize the others on the network and
> cooperate with them.

Matt Crawford replied:
> Unless the application author can predict the exact output of the
> compilers, he can't issue a signature on the object code.  The
> compilers then have to be inside the trusted base, checking a
> signature on the source code and reflecting it somehow through a
> signature they create for the object code.

It's likely that only a limited number of compiler configurations would
be in common use, and signatures on the executables produced by each of
those could be provided.  Then all the app writer has to do is to tell
people, get compiler version so-and-so and compile with that, and your
object will match the hash my app looks for.
DEI

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@wasabisystems.com

