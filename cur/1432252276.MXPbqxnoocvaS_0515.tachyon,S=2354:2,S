From owner-cypherpunks@jfet.org  Wed Nov  9 17:29:43 2005
Return-Path: <owner-cypherpunks@jfet.org>
Received: from proton.jfet.org (localhost [127.0.0.1])
	by proton.jfet.org (8.13.5/8.13.5/Debian-3) with ESMTP id jA9MSUpM016221
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Wed, 9 Nov 2005 17:28:30 -0500
Received: (from majordomo@localhost)
	by proton.jfet.org (8.13.5/8.13.5/Submit) id jA9MSU7V016220
	for cypherpunks-outgoing; Wed, 9 Nov 2005 17:28:30 -0500
X-PGP-Universal: processed; 	by keys.merrymeet.com on Wed, 09 Nov 2005
  14:28:22 -0800
In-Reply-To: <d4f1333a0511041723w3376f0d4l314f33cec6421b06@mail.gmail.com>
References: <d4f1333a0511041723w3376f0d4l314f33cec6421b06@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v746.2)
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-Id: <1CFBF68A-8AE7-409A-8E00-4A2EF592590E@callas.org>
Cc: cryptography@metzdowd.com, cypherpunks@jfet.org
Content-Transfer-Encoding: 7bit
From: Jon Callas <jon@callas.org>
Subject: Re: gonzo cryptography; how would you improve existing
  cryptosystems?
Date: Wed, 9 Nov 2005 14:27:46 -0800
To: "Travis H." <solinym@gmail.com>
X-Mailer: Apple Mail (2.746.2)
Sender: owner-cypherpunks@jfet.org
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 987
Lines: 31

On 4 Nov 2005, at 5:23 PM, Travis H. wrote:

> For example, pgp doesn't hide the key IDs of the addressees.

But OpenPGP does. Here's an extract fro RFC 2440:

5.1. Public-Key Encrypted Session Key Packets (Tag 1)

[...]

    An implementation MAY accept or use a Key ID of zero as a "wild  
card"
    or "speculative" Key ID. In this case, the receiving implementation
    would try all available private keys, checking for a valid decrypted
    session key. This format helps reduce traffic analysis of messages.

Now, there has been much discussion about how useful this is, and  
there are other related issues like how you do the UI for such a  
thing. But the *protocol* handles it.

You might also want to look at the PFS extensions for OpenPGP:

<http://www.apache-ssl.org/openpgp-pfs.txt>

and even OTR, which is very cool in its own right (and is designed to  
take care of the sort of edge conditions all of these other things  
have):

<http://www.cypherpunks.ca/otr/>

	Jon

