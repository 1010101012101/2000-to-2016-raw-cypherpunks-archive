From owner-cypherpunks@al-qaeda.net  Sat Jan  1 07:21:48 2005
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (majordomo@localhost.localdomain [127.0.0.1])
	by positron.jfet.org (8.13.1/8.13.1/Debian-20) with ESMTP id j01DK31p028841
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Sat, 1 Jan 2005 07:20:03 -0600
Received: (from majordomo@localhost)
	by positron.jfet.org (8.13.1/8.13.1/Submit) id j01DK3xG028840
	for cypherpunks-outgoing; Sat, 1 Jan 2005 07:20:03 -0600
Date: Sat, 1 Jan 2005 14:11:53 +0100
From: Eugen Leitl <eugen@leitl.org>
To: cypherpunks@al-qaeda.net
Subject: [p2p-hackers] Common interest, finding trading partners (fwd
  from mllist@vaste.mine.nu)
Message-ID: <20050101131153.GE9221@leitl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
User-Agent: Mutt/1.4i
X-Converted-To-Plain-Text: from multipart/signed by demime 1.01d
X-Converted-To-Plain-Text: Alternative section used was text/plain
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
X-Keywords:                  
X-UID: 17047
Status: O
Content-Length: 3783
Lines: 76

----- Forwarded message from Vaste <mllist@vaste.mine.nu> -----

From: Vaste <mllist@vaste.mine.nu>
Date: Fri, 31 Dec 2004 05:18:20 +0100
To: "Peer-to-peer development." <p2p-hackers@zgp.org>
Subject: [p2p-hackers] Common interest, finding trading partners
User-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)
Reply-To: "Peer-to-peer development." <p2p-hackers@zgp.org>

One of the reasons e.g. BitTorrent works so great is that when you
receive a piece from someone, you can trade it for another piece with
anyone else in the swarm without that piece. This works since everyone
on a torrent (typically) are interested in the same file. With
multi-file torrents this assumption is extended to several files as well.

In the file-based filesharing world (ed2k, gnutella) the same assumption
hold, but but only for one file. And with batchtorrents, this assumption
might brake even with torrent; one might only want a few files, (and
e.g. using Azureus not even request the other files).

Still, two people downloading an episode from same tv-series are quite
likely to be interested in the same files, and thus they might benefit
from trading.

Has any research been done on how these peers with common interests can
 find each other?

Mainly it's about finding the peer with the most coinciding interest.
Still, other factors play in, such as the resources available (does the
peer lack trading partners, i.e. has bandwidth to spare?) in finding a
good match. On the networklevel it might also be good to find a balance
between finding the "best" peer and creating a well-connected network
(avoiding cliques and bottlenecks). Moreover, as interest's change over
time, how should this be handled? (The more coinciding the interests,
the longer it should take for them to deviate from each other.)

This is question is quite similar to finding a peer with pieces of a
file you're interested in (that you don't already have). (The difference
being that in the former, you search for _potential_ bearers of the
piece.) Here the problem of matching a large number of preferences shows
(namely the pieces; there are usually quite a few of them). The same
things happens with many (especially small) files.

In the search-layer I believe this is usually handled either not at all
(random) or in a binary way (complete file vs. only pieces of it), and
leaving the details to the strict peer-to-peer chatting. Would there be
any point in using more detailed information of finished pieces in the
search layer? Would there be any use to use different resolutions (e.g.
10 pieces resolution might be: piece 1-10: none finished, 11-20: all,
21-29: some)?

An interesting take on this is the perspective of piece-based networks,
where one searches for every piece separately. Here it's even more
obvious how much one would benefit from finding people interested in the
same file (the same pieces). Yet, introducing things such as patches, it
would be pleasing to have a solution that didn't depend on peers wanting
the exactly same pieces (defined by the file), but just roughly the same.

/Vaste
_______________________________________________
p2p-hackers mailing list
p2p-hackers@zgp.org
http://zgp.org/mailman/listinfo/p2p-hackers
_______________________________________________
Here is a web page listing P2P Conferences:
http://www.neurogrid.net/twiki/bin/view/Main/PeerToPeerConferences

----- End forwarded message -----
--
Eugen* Leitl <a href="http://leitl.org">leitl</a>
______________________________________________________________
ICBM: 48.07078, 11.61144            http://www.leitl.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE
http://moleculardevices.org         http://nanomachines.net

[demime 1.01d removed an attachment of type application/pgp-signature]

