From cypherpunks-bounces@cpunks.org  Fri Apr 18 13:43:31 2014
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s3IHfW5d027889;
	Fri, 18 Apr 2014 13:41:51 -0400
Received: from mx1.riseup.net (mx1.riseup.net [198.252.153.129])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4.1) with ESMTP id s3IHfIiw027885
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Fri, 18 Apr 2014 13:41:20 -0400
Received: from fruiteater.riseup.net (fruiteater-pn.riseup.net [10.0.1.74])
 (using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
 (Client CN "*.riseup.net", Issuer "Gandi Standard SSL CA" (not verified))
 by mx1.riseup.net (Postfix) with ESMTPS id 0D9685210D;
 Fri, 18 Apr 2014 10:41:14 -0700 (PDT)
Received: from [127.0.0.1] (localhost [127.0.0.1])
 (Authenticated sender: tedks@fruiteater.riseup.net)
 with ESMTPSA id 3CCC0D81
Message-ID: <1397842871.5862.11.camel@anglachel>
Subject: Re: [tor-talk] Programming language for anonymity network
From: Ted Smith <tedks@riseup.net>
To: tor-talk@lists.torproject.org
Date: Fri, 18 Apr 2014 13:41:11 -0400
In-Reply-To: <5350E1BD.5010304@mpi-sws.org>
References: <5350E1BD.5010304@mpi-sws.org>
Content-Type: multipart/signed; micalg="pgp-sha512";
 protocol="application/pgp-signature"; boundary="=-aLMK+9B3VvgsLXn2JiBI"
X-Mailer: Evolution 3.8.4-0ubuntu1 
Mime-Version: 1.0
X-Virus-Scanned: clamav-milter 0.98.1 at mx1
X-Virus-Status: Clean
Cc: cpunks <cypherpunks@cpunks.org>, Nicholas Merritt <nmerritt@mpi-sws.org>,
        liberationtech@mailman.stanford.edu,
        Peter Druschel <druschel@mpi-sws.org>, p2p-hackers@zim.maski.org,
        wonko@mpi-sws.org, Dave Choffnes <choffnes@ccs.neu.edu>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.16
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 4661
Lines: 108


--=-aLMK+9B3VvgsLXn2JiBI
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

OCaml. http://ocaml.org/

     1. OCaml is more obscure than many languages, but it supports
        programming in imperative, object-oriented, and functional
        styles (though it's obviously best suited for a functional
        style). I've seen people write Java in OCaml and produce clean,
        modular code.
     2. OCaml is used in industrial environments (it's gotten pretty
        popular on Wall Street) and in open-source projects; the
        toolchain is mature and the community is vibrant.=20
     3. OCaml is memory safe, but more importantly, it's type safe, and
        its type system is capable of encoding a great deal of your
        program's correctness. It will take some time to get your
        program to compile, but when it does you have a much stronger
        assurance that your program is correct than you do in C, C++, or
        Java.
     4. OCaml compiles to native code; I'm not sure if deterministic
        builds have been done but they should be possible.=20
     5. (Performance, the hidden elephant in every language discussion
        room) The OCaml team takes security seriously, and OCaml is
        performance-competitive with C. OCaml does tail-call
        elimination, so you can write programs functionally that are
        memory-efficient.
     6. (Weaknesses) OCaml has a global lock due to its garbage
        collection, so parallel programming has to be done with
        processes. This is (IMO) cleaner than in similar situations like
        Python, but is obviously suboptimal.=20

I'd highly recommend reading through this blog series, chronicling a
developer picking OCaml as the language to rewrite a large Python
open-source project in. It doesn't have the same focus as you, but it
goes over various reasons why someone might switch to OCaml, and
introduces some OCaml features:
http://roscidus.com/blog/blog/categories/ocaml/



On Fri, 2014-04-18 at 10:26 +0200, Stevens Le Blond wrote:
> Hello,
>=20
> We are a team of researchers working on the design and implementation of
> a traffic-analysis resistant anonymity network and we would like to
> request your opinion regarding the choice of a programming language /
> environment. Here are the criteria:
>=20
> 1) Familiarity: The language should be familiar or easy to learn for
> most potential contributors, as we hope to build a diverse community
> that builds on and contributes to the code.
>=20
> 2) Maturity: The language implementation, tool chain and libraries
> should be mature enough to support a production system.
>=20
> 3) Language security: The language should minimize the risk of security
> relevant bugs like buffer overflows.
>=20
> 4) Security of runtime / tool chain: It should be hard to
> inconspicuously backdoor the tool chain and, if applicable, runtime
> environments.
>=20
> To give two concrete examples:
>=20
> Using the C language + deterministic builds is an attractive option with
> respect to 1), 2) and 4), but doesn=E2=80=99t provide much regarding 3).
>=20
> Java does better with respect to 3), however, it trades some of 3) and
> 4) as compared to C. Specifically, we are concerned that large runtimes
> may be difficult to audit. A similar argument may apply to other
> interpreted languages.
>=20
> Given these criteria, what language would you choose and for what
> reasons? We would also appreciate feedback regarding our criteria.
>=20
> All the best,
> David, Nick, Peter, Stevens, and William
>=20

--=20
Sent from Ubuntu

--=-aLMK+9B3VvgsLXn2JiBI
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: This is a digitally signed message part
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)

iQIcBAABCgAGBQJTUWO3AAoJEKaCJLFA4NfCZgUP/jDTZiqtjiy765eIAVJ0M2gV
QIMGRkSWHuFDUif5E92TZsBt7lZQMcl5o+B2gbTlGCCgI+TK4sZI8RdxKBs7e8nF
DC+O16/pRVqfhBRxU9JsH5u/qkqwXaNP19kXx7TE8IDOS+Ku/d2semVj6M4qW2AP
6io4QBjlHyN1EObKcu2FA9JQ1ffMIxFljyqeibdpJ/nB6R5aBpbPtkN03Ppyy1yW
XzUzbVihrfev/CXB69U0seEQpP81RacrNeu5R6UIAU+4oNspLEhdDXMt3J3vZGJo
obe991y/ox8LPgqMdc9axZa1MMu9fLRTo7iV/SFd58xbrefEgQGzo14Q2262of+Z
I9iZC356ORBPHTB695v/kWvL9ZODtGrBHwAjQK/Xg39qL2yW+J8cZAidnz5D6Asd
uZG/DzDhAIQI5f7K8JiKevipnV+U/xMZNBjCXCj2vQ4uYMzairJVcnqu2jhRVF2W
s5w3Om5XNSCnT7kh9fxYinjWoHAR621kR1XTHAxKn2tKFGl8vCGKwogXNEjIQPGD
o5cr4GIElSG3FSbevZfaTOksXAjwc5M812kLSCQk1HKKgVSyugJL0SzTVbFWhDfU
QsmoyjdioL4iQBoBJ/A1AEDg8v94hy6evddnFNg04TBj48Fprc9j7Kvp4/QG+6Zc
7WdE86VjqVitIV2Ry5a5
=DIP5
-----END PGP SIGNATURE-----

--=-aLMK+9B3VvgsLXn2JiBI--

