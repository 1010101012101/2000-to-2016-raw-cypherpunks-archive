From owner-cypherpunks-outgoing@EINSTEIN.ssz.com  Thu Sep  7 18:22:48 2000
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id SAA06356
	for <kwantam@positron.mit.edu>; Thu, 7 Sep 2000 18:22:48 -0400
Received: from einstein.ssz.com (mdom@einstein.ssz.com [204.96.2.99])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id SAA14971
	for <rsw@MIT.EDU>; Thu, 7 Sep 2000 18:22:46 -0400 (EDT)
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id RAA08403
	for cypherpunks-outgoing; Thu, 7 Sep 2000 17:29:28 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id RAA08394
	for cypherpunks@ssz.com; Thu, 7 Sep 2000 17:29:23 -0500
Received: from mail.virtual-estates.net (cpunks@video-collage.com [160.79.196.177])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id RAA08373
	for <cpunks@ssz.com>; Thu, 7 Sep 2000 17:29:16 -0500
Received: (from cpunks@localhost)
	by mail.virtual-estates.net (8.9.3+3.2W/8.9.1) id SAA12662;
	Thu, 7 Sep 2000 18:10:03 -0400 (EDT)
X-Authentication-Warning: video-collage.com: Processed from queue /var/spool/mqueue-majordomo
X-Authentication-Warning: video-collage.com: Processed by cpunks with -C /usr/local/majordomo/sendmail.cf
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by mail.virtual-estates.net (8.9.3+3.2W/8.9.3) with ESMTP id SAA12507
	for <cypherpunks@algebra.com>; Thu, 7 Sep 2000 18:09:59 -0400 (EDT)
X-Relay-IP: 216.34.245.2
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id PAA02891; Thu, 7 Sep 2000 15:11:55 -0700 (PDT)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id PAA02881 for <cpunks@sirius.infonex.com>; Thu, 7 Sep 2000 15:11:51 -0700 (PDT)
Received: from toad.com (toad.com [140.174.2.1]) by cyberpass.net (8.8.8/8.7.3) with ESMTP id PAA09668 for <cypherpunks@cyberpass.net>; Thu, 7 Sep 2000 15:13:50 -0700 (PDT)
Received: (from majordom@localhost) by toad.com (8.7.5/8.7.3) id PAA19911 for cypherpunks-unedited-outgoing; Thu, 7 Sep 2000 15:09:01 -0700 (PDT)
Received: from smile.idiom.com ([209.209.13.26]) by toad.com (8.7.5/8.7.3) with ESMTP id PAA19904 for <cypherpunks@toad.com>; Thu, 7 Sep 2000 15:08:58 -0700 (PDT)
Received: from billstewart (sji-ca5-110.ix.netcom.com [209.109.234.110])
	by smile.idiom.com (8.9.1/8.8.5) with SMTP id PAA11446;
	Thu, 7 Sep 2000 15:08:55 -0700 (PDT)
Message-Id: <3.0.5.32.20000907150849.008ca7a0@idiom.com>
X-Sender: wcs@idiom.com
X-Mailer: QUALCOMM Windows Eudora Light Version 3.0.5 (32)
Date: Thu, 07 Sep 2000 15:08:49 -0700
To: Asymmetric <all@biosys.net>, cypherpunks@toad.com
From: Bill Stewart <bill.stewart@pobox.com>
Old-Subject: Re: StoN, Diffie-Hellman, other junk..
In-Reply-To: <4.3.2.7.2.20000907002505.00b2fbf8@mail.megapathdsl.net>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Subject: CDR: Re: StoN, Diffie-Hellman, other junk..
Sender: owner-cypherpunks@EINSTEIN.ssz.com
Precedence: bulk
Reply-To: cypherpunks@EINSTEIN.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Language: English, Russian, German
Status: O
Content-Length: 6486
Lines: 123

At 12:45 AM 9/7/00 -0400, Asymmetric wrote  <all@biosys.net> :
>To make the application more robust, I have started rewriting it to use TCP 
>instead.  It is still a peer-peer network, requiring no dedicated servers.. 
>while this increases overhead somewhat, I think it's worth it to keep the 
>system from relying on one particular server, or a group of them.  

Servers are the price of scalability.  The nice thing about ICQ
and similar instant messaging applications, unlike IRC,
is that the server only tracks who's on and where, and doesn't carry
the actual communication traffic between users.  Obviously this is
for one-to-one conversations between two users rather than IRC's
everybody-to-everybody model.  Another option in this space is the
everybody's-a-server model, like Usenet uses.
Servers also offer the benefit that it's harder to tell
who's talking to whom, unlike point-to-point conversations,
but they do cause risks from compromise and downtime.

>everyone must maintain an active TCP connection to everyone else.. 

That's a MAJOR downside.  Most operating system and programming environments
limit how many open TCP connections you can keep, typically <20,
so this limits the sizes of communities you can maintain.
Also, if you have TCP connections you need to write code to handle
having them go up and down at unplanned times,
while UDP just dribbles in.
On the other hand, TCP sessions are good for data transfer.
Voice over TCP is a sketchier issue - the problem is that
the best way to handle lost voice packets is just to ignore the noise,
as opposed to waiting for the retransmission to arrive and
speeding up or delaying talk until you've caught up.

Your issues about ECB mode with UDP are good, though.
The alternative is to use CBC mode and trash the next couple of packets
after the lost/damaged one - CBC does self-recover.
This is ok for voice; may or may not be for chat.

>I have also decided to get rid of the key sharing mechanism, and instead 
>utilize D/H to generate a KEK, then transfer a 4096bit data block from the 
>initiating client to the serving client .....
>Now, my main question about D/H is quite simple.. what is considered a 
>"good" size for the prime and primitive used, in bits?  

The rule of thumb is that you need at least twice as many bits of
DH as you need of secure session key for your application, and you need
at least as many bits of DH as you would need for RSA.
You wouldn't want to use fewer than 1024 bits of RSA these days,
so don't use fewer than 1024 bits of DH.  That's enough for multiple
128-bit keys.
There are various format proposals for turning the DH key into a session key,
like using Hash(DHKey,YourIP,TheirIP,maybe-a-counter-or-Salt).
4096 may be overkill, but it depends a lot on how often you'll be rekeying
and how long you're willing to watch the CPU crunch to set up a connection.

The bigger risk, though, is the quality of random numbers available 
for seeding your DH keys.  Don't even DREAM of using Delphi's builtins,
if it has them - go find good crypto-quality-randomness work to reuse,
unless you know you'll only run on Linux where there's /dev/random.
At least use sound-card noise or user-entered mouse tracks to help.
Lots of "secure" systems have been cracked by cracking their random seeds.

If you don't have any other keying mechanism, you need to worry about
man-in-the-middle attacks.  A simple approach is to use PGP public keys
to sign the keyparts; that lets you reuse all the PGP infrastructure.
There are alternatives, at least for voice, like reading the bits of the 
shared keys to each other.  See the PGPFONE docs for much discussion on 
user interfaces - and think about how much of their code you can rip
off\\\\\\ reuse.

Also read the Photuris internet drafts - there's a lot of experience
on denial-of-service attacks that they've incorporated,
and it doesn't take much work to prevent most of them.

>An aside is that I'm writing the application in Delphi 5, and the maximum 
>native supported integer sizes are 32bit unsigned, and 64bit signed.. I've 
>been writing a math library of my own in assembler that at compile time 
>will allow you to specify the maximum bitsize you want it to support, but 
>this is proving to be a mind-numbing task.. ;)  

Gak!  Don't do something that ugly.  There are lots of math libraries
available,
such as the GMP Gnu Multiple Precision integer package.  Depending on how
Delphi feels about calling C routines, the most you should need to write
in assembler are some little wrappers to format the function calls,
and hopefully you don't need to do that.

Also, some versions of the RSAREF libraries had Diffie-Hellmann code in them,
as well as multiple-precision integers.


Other chat and messaging systems have been written.
Check out GALE at gale.org, and look through the Cypherpunks archives
for encrypted  IRC and DCC variants.  Don't let that stop you from coding,
but do steal code rather that writing from scratch when you can.


> First, I gotta say.. only been back on the list a day or two and the Signal 
> to Noise seems to have gotten nearly out of hand.. I don't know what 
> cypherpunks has to do with trying to listen in on cordless phone calls, or 
> how to give someone drugs.. but anyway.. something on topic.. :)

It's been high for years - thanks for adding Signal :-)

Listening in on cordless phones can be a legitimate cpunks kind of topic,
though it's been discussed in the past and this was probably just a troll
or a clueless newbie.  As far as giving people drugs, the standard
Cypherpunks approach is to say "That's a hardware problem" and then
discuss whose Palm-pilot digicash system you can use for payment, 
though there has also been crypto protocol work like
"The Cocaine Auction Protocol" on how suppliers and consumers can
find each other without interference by non-participants,
or building conferencing systems for ravers where the server operator
provably doesn't have anything subpoenable that would indicate which
chatters were discussing where to get drug X at event Y.
(There are also noisier Cypherpunks approaches to drugs, like saying
"Jim, yer off yer medication again" or "smells good, got any more?" or
"He's obviously smoking something *very* good and not sharing" or 
"No, in a geodesic gift economy you really *might not* charge for drugs." :-)


				Thanks! 
					Bill
Bill Stewart, bill.stewart@pobox.com
PGP Fingerprint D454 E202 CBC8 40BF  3C85 B884 0ABE 4639

