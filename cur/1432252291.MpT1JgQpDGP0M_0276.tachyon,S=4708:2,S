From owner-cryptography+rsw=mit.edu@wasabisystems.com  Mon Oct 21 18:00:14 2002
Return-Path: <owner-cryptography+rsw=mit.edu@wasabisystems.com>
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g9LM0DW14103
	for <rsw@opamp.org>; Mon, 21 Oct 2002 18:00:14 -0400
Received: from lion.ninthwonder.com (lion.ninthwonder.com [151.199.66.147])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id SAA04662
	for <rsw@mit.edu>; Mon, 21 Oct 2002 18:00:11 -0400 (EDT)
Received: by lion.ninthwonder.com (Postfix, from userid 96)
	id 5B2F530710; Mon, 21 Oct 2002 17:58:28 -0400 (EDT)
Delivered-To: cryptography@wasabisystems.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by lion.ninthwonder.com (Postfix) with ESMTP id 3B76B30706
	for <cryptography@wasabisystems.com>; Mon, 21 Oct 2002 17:58:27 -0400 (EDT)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id D1A04D97FB; Mon, 21 Oct 2002 17:58:26 -0400 (EDT)
Received: from mercury.ex.ac.uk (mercury.ex.ac.uk [144.173.6.26])
	by lion.ninthwonder.com (Postfix) with ESMTP id 69F3830706
	for <cryptography@wasabisystems.com>; Mon, 21 Oct 2002 17:52:34 -0400 (EDT)
Received: from cronus ([144.173.6.20] helo=cronus.ex.ac.uk)
	by mercury.ex.ac.uk with esmtp (Exim 3.33 #1)
	id 183kTF-008rHy-00; Mon, 21 Oct 2002 22:52:21 +0100
Date: Mon, 21 Oct 2002 22:52:20 +0100
From: Adam Back <adam@cypherspace.org>
To: "Arnold G. Reinhold" <reinhold@world.std.com>
Cc: Cypherpunks <cypherpunks@minder.net>,
   Cryptography <cryptography@wasabisystems.com>, dcsb@ai.mit.edu,
   Adam Back <adam@cypherspace.org>
Subject: Re: palladium presentation - anyone going?
Message-ID: <20021021225220.A123387@exeter.ac.uk>
References: <20021017191538.A53194@exeter.ac.uk> <v04210100b9d7c556a854@[192.168.0.2]>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.2i
In-Reply-To: <v04210100b9d7c556a854@[192.168.0.2]>; from reinhold@world.std.com on Sun, Oct 20, 2002 at 10:38:35PM -0400
Sender: owner-cryptography@wasabisystems.com
Precedence: bulk
Status: O
Content-Length: 2516
Lines: 62

On Sun, Oct 20, 2002 at 10:38:35PM -0400, Arnold G. Reinhold wrote:
> There may be a hole somewhere, but Microsoft is trying hard to get
> it right and Brian seemed quite competent.

It doesn't sound breakable in pure software for the user, so this
forces the user to use some hardware hacking.

They disclaimed explicitly in the talk announce that:

| "Palladium" is not designed to provide defenses against
| hardware-based attacks that originate from someone in control of the
| local machine.

However I was interested to know exactly how easy it would be to
defeat with simple hardware modifications or reconfiguration.

You might ask why if there is no intent for Palladium to be secure
against the local user, then why would the design it so that the local
user has to use (simple) hardware attacks.  Could they not, instead of
just make these functions available with a user present test in the
same way that the TOR and SCP functions can be configured by the user
(but not by hostile software).

For example why not a local user present function to lie about TOR
hash to allow debugging (for example).

> Adam Back wrote:
> >- isn't it quite weak as someone could send different information to
> >the SCP and processor, thereby being able to forge remote attestation
> >without having to tamper with the SCP; and hence being able to run
> >different TOR, observe trusted agents etc.
> 
> There is also a change to the PC memory management to support a 
> trusted bit for memory segments. Programs not in trusted mode can't 
> access trusted memory.

A "trusted bit" in the segment register doesn't make it particularly
hard to break if you have access to the hardware.

For example you could:

- replace your RAM with dual-ported video RAM (which can be read using
alternate equipment on the 2nd port).

- just keep RAM powered-up through a reboot so that you load a new TOR
which lets you read the RAM.

> Also there will be three additional x86 instructions (in microcode)
> to support secure boot of the trusted kernel and present a SHA1 hash
> of the kernel code in a read only register.  

But how will the SCP know that the hash it reads comes from the
processor (as opposed to being forged by the user)?  Is there any
authenticated communication between the processor and the SCP?

Adam
--
http://www.cypherspace.net/

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@wasabisystems.com

