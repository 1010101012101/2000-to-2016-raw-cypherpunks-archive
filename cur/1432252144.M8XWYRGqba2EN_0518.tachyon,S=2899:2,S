From owner-cypherpunks@lne.com  Mon Jun  2 17:05:14 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h52L5Aq25658
	for <rsw@jfet.org>; Mon, 2 Jun 2003 17:05:11 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h52KlTOx014966
	for cypherpunks-goingout345; Mon, 2 Jun 2003 13:47:29 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Message-ID: <3EDBB446.53B5852E@cdc.gov>
Date: Mon, 02 Jun 2003 13:32:06 -0700
From: "Major Variola (ret.)" <mv@cdc.gov>
Organization: GLODO
X-Mailer: Mozilla 4.75 [en] (WinNT; U)
X-Accept-Language: en
MIME-Version: 1.0
To: cypherpunks@lne.com
Subject: Typical PGP user mistakes
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1897
Lines: 50

I recall reading at least one study of learning PGP and its UI.
I have had the chance to observe half a dozen (albeit, smarter
than normal) others' (mostly engineers) learning curves.
All are using PGP 7.03 and Eudora 3.05.
We are not using public key servers.

Mistakes include:
* neglecting to encrypt to an intended recipient's key
* encrypting to self (only)
* not encrypting to self, requiring a recipient to send it back to you
* accidentally multiply encrypting a message (ie, you encrypt the
encrypted ASCII)

Problems also include not being able to rename the email address
associated
with a key, leading to some recipients being recognized and encrypted
to,
others not.  Also errors if there are spaces added to the PGP ASCII
block.

Yes, there are checkbox-features and PGP Groups and sufficient GUI
feedback
such that these mistakes are "not the tool's fault".  And I/we
appreciate these
features and overall excellent design.

Yet there are also people who enjoy
studying UI design, cognition, learning, etc.  and perhaps these
anecdotal observations
would be useful.  After all, Enigma was broken by exploiting the
man-machine
interface.

No one new to any tool should be using it for life-critical
apps before competent.  The above mistakes more self-inflicted denial of
service
problems than tool weaknesses.  In fact, one group member accidentally
sent email to
a random user in the sender's ISP (because of the sender's Eudora-alias
not matching the alias he typed in the To: field).  This didn't matter
because the content was encrypted.

You often put locks on things (cars, homes, throwaway email accounts) to
protect against benign, accidental intrusions, even if the lock is
easily defeated/circumvented.  We just happened to be
using a strong lock, endorsed by the Red Brigade :-)

-------
Pierre Curie didn't die from radiation
poisoning, he was hit by a horse drawn cart

