From owner-cypherpunks@lne.com  Fri May 30 14:20:23 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h4UIKMq09408
	for <rsw@jfet.org>; Fri, 30 May 2003 14:20:22 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h4UI8V8T026777
	for cypherpunks-goingout345; Fri, 30 May 2003 11:08:31 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
X-Authentication-Warning: eskimo.com: eresrch owned process doing -bs
Date: Fri, 30 May 2003 11:08:25 -0700 (PDT)
From: Mike Rosing <eresrch@eskimo.com>
To: "cypherpunks@lne.com" <cypherpunks@lne.com>
Subject: Re: 8-bit modular exponentiation code?
In-Reply-To: <3ED79000.2CD82DB3@cdc.gov>
Message-ID: <Pine.GSU.4.44.0305301104130.6038-100000@eskimo.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 789
Lines: 21

On Fri, 30 May 2003, Major Variola (ret) wrote:

> >On Fri, May 23, 2003 at 11:36:58AM -0700, Major Variola (ret.) wrote:
> >> Anyone know of any open-source modexp code for 8-bit cpus?
>
> Thank you for your response, however (for the record) that code requires
>
> at least a 16bit CPU.  From bnlib.doc (an amusing read, BTW):
>
> It is written in C, and should compile on any platform with an ANSI C
> compiler and 16 and 32-bit unsigned data types
>
> "Small" is defined as less than 65536, the minimum 16-bit word size
> supported by the library.

It can't be that hard to modify it to work with an 8 bitter.  I've
written an aweful lot of 40 bit floating point routines for everything
from 6809's to PIC's.  8 bit modulus code should be easy.

Patience, persistence, truth,
Dr. mike

