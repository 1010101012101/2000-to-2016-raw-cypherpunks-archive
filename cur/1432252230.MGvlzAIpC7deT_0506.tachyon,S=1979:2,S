From owner-cypherpunks@lne.com  Mon Jun  9 22:32:36 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h5A2WY620870
	for <rsw@jfet.org>; Mon, 9 Jun 2003 22:32:34 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h5A2MfBJ021880
	for cypherpunks-goingout345; Mon, 9 Jun 2003 19:22:41 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Date: Tue, 10 Jun 2003 14:21:57 +1200
Message-Id: <200306100221.h5A2Lvn02156@medusa01.cs.auckland.ac.nz>
From: pgut001@cs.auckland.ac.nz (Peter Gutmann)
To: amir@herzberg.name, cryptography@metzdowd.com, cypherpunks@lne.com,
   jamesd@echeque.com, tim@dierks.org
Subject: Re: An attack on paypal --> secure UI for browsers
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1007
Lines: 21

Amir Herzberg <amir@herzberg.name> writes:

>Ka Ping Yee, User Interface Design for Secure System, ICICS, LNCS 2513, 2002.

Ka-Ping Yee has a web page at http://zesty.ca/sid/ and a lot of interesting
things to say about secure HCI (and HCI in general), e.g. a characterisation
of safe systems vs. general-purpose systems:

  In order for Alice to use her computer usefully, she has to be able to
  instruct programs to do things for her.  In order for those programs to
  carry out tasks, she has to trust those programs with some authority.  So
  every useful operation involves making the system a little bit less safe.
  In order to keep the system from becoming unboundedly unsafe, Alice must
  also be able to make her system more safe.

  A system in an ultimately safe state is one that can't do anything other
  than what was planned ahead of time.  General-purpose computing is useful to
  Alice only because she can make unpredictable inputs into the system, asking
  it to do new things.

Peter.

