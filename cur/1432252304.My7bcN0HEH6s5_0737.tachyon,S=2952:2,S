From owner-cypherpunks@lne.com  Sun Nov  2 11:30:59 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from slack.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p3/8.11.6-03-31-03) with ESMTP id hA2GUvR09856
	for <rsw@jfet.org>; Sun, 2 Nov 2003 11:30:58 -0500
Received: from slack.lne.com (slack.lne.com [127.0.0.1])
	by slack.lne.com (8.12.10/8.12.10) with ESMTP id hA2GGKQe020611
	(version=TLSv1/SSLv3 cipher=EDH-DSS-DES-CBC3-SHA bits=168 verify=NO)
	for <cypherpunks-goingout345@slack.lne.com>; Sun, 2 Nov 2003 08:16:20 -0800
Received: (from majordom@localhost)
	by slack.lne.com (8.12.10/8.12.10/Submit) id hA2GGKgd020610
	for cypherpunks-goingout345; Sun, 2 Nov 2003 08:16:20 -0800
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
From: "James A. Donald" <jamesd@echeque.com>
To: cypherpunks@lne.com, Adam Back <adam@cypherspace.org>
Subject: Re: ECC and blinding.
Date: Sun, 02 Nov 2003 08:16:45 -0800
Message-ID: <4cbaqv8ka0jer4l8934tfjbncu4kjicim4@4ax.com>
X-Mailer: Forte Agent 1.92/32.572
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-MIME-Autoconverted: from quoted-printable to 8bit by slack.lne.com id
  hA2GGHQd020604
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 1574
Lines: 52

    --
James A. Donald:
> > Simple Chaumian blinding works fine on EC.

On 31 Oct 2003 at 15:26, Adam Back wrote:
> So Chaumian blinding with public exponent e, private exponent d, and
> modulus n is this and blinding factor b chosen by the client:
>
> blind:
> b^e.m mod n	 ->
>    sign:
>    <- 	(b^e.m)^d mod n
>     = b.m^d mod n  (simplifying)
>
> and divide by b to unblind:
> m^d mod n
>
> how are you going to do this over EC?  You need an RSA like e and d to
> cancel.

See:"Anonymous Electronic Cash"
http://www.echeque.com/Kong/anon_transfer.htm

Lower case letters represent integers, capital letters elliptic
curve points.

Let k be the banks secret key.

The bank promises to pay a specific sum of money for any secret
of the form ( x, P), such that P = k * H(x) where H is a hash
function mapping random integers onto points on an elliptic
curve and k is a secret known only to the token issuer

Bob has an existing old used token of this form, and therefore
knows that V= k * U even though he does not know k.

Bob invents the random numbers t and q, constructs an elliptic
point R = t *U + Hash( q ) and pays the bank to construct T= k
* R

He then calculates Q = T- t * V

He now has a new token ( q , Q) of the required form, even
though the Bank did not generate Q, has never seen it before,
and when it sees it will not recognize it as having any
relationship to T or R. 

    --digsig
         James A. Donald
     6YeGpsZR+nOTh/cGwvITnSR3TdzclVpR0+pr3YYQdkG
     ONKujWd8zHpibnZny18642N1+yn2u22b10pYMq9S
     4JTKi/HgEDA3K9dghxgfMcU8LPnOgG8ibhebtAfJR

