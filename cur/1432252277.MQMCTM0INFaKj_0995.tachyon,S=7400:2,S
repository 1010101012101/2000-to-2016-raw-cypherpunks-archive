From cypherpunks-bounces@cpunks.org  Mon Nov 18 05:08:29 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAIA7dHR025574;
	Mon, 18 Nov 2013 05:07:45 -0500
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=LqbmzXaH;
	dkim-adsp=none (insecure policy); dkim-atps=neutral
Received: from mail-oa0-f52.google.com (mail-oa0-f52.google.com
 [209.85.219.52])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id rAIA7ZEg025564
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Mon, 18 Nov 2013 05:07:36 -0500
Received: by mail-oa0-f52.google.com with SMTP id h16so853537oag.25
 for <cypherpunks@cpunks.org>; Mon, 18 Nov 2013 02:07:30 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:sender:in-reply-to:references:from:date:message-id
 :subject:to:cc:content-type;
 bh=N20E3jAobajyebFvH8WYL/TYRfr8DaH5Hwl+3WhyXuo=;
 b=LqbmzXaHX6697hduOGrAV+gol0Jk7VCj63ey+nkME4MevHLJW8cORbKW/SX20QAYqg
 l/CUxjVIsJR+ch7ZqLd1vIe4C6x6h9dJpCqpzVFCfk93klr7MOceqM1vOm7mieq4/I6+
 8t7LbBZltM+jqLjGQD6EKBNu+ryalfmChGS34eYcpY6faoxTtMGvLufcstEPapI0+AQy
 bHJDm/dRvmTwE1wUnV55v0rSzapy7f/IzMH61m4GTXSSb2Y5Hw4Tk8Y1M8SqxsQRowYc
 636s9iIYzQuJ3WmO8Ki7hZcZZ0NYypKzeNLwob8GXYRMgYTWbeba5thpt9RKCD5E/O9K
 64Dg==
X-Received: by 10.60.44.239 with SMTP id h15mr19456246oem.22.1384769250613;
 Mon, 18 Nov 2013 02:07:30 -0800 (PST)
MIME-Version: 1.0
Received: by 10.76.144.40 with HTTP; Mon, 18 Nov 2013 02:07:10 -0800 (PST)
In-Reply-To: <20131117234414.0e52405e@Neptune>
References: <2273118.NEfOTMQzUT@lap> <11446519.UaTmSoLtO9@lap>
 <CAHWD2rJTEjRmVDW1wJ+d3ZLJo10bm0GajTW2-Ofxu0xZ1fdmMw@mail.gmail.com>
 <1892324.eEEYb6oia5@lap> <20131117234414.0e52405e@Neptune>
From: =?UTF-8?Q?Lodewijk_andr=C3=A9_de_la_porte?= <l@odewijk.nl>
Date: Mon, 18 Nov 2013 11:07:10 +0100
X-Google-Sender-Auth: fZ4qsLYzJG2VtzK3oY0_jhnWITs
Message-ID: <CAHWD2rKGfKRyUCqZiZgyU693Y727Q5dfa3cEWiBCmsnLP9imdg@mail.gmail.com>
Subject: Re: RetroShare
To: Cathal Garvey <cathalgarvey@cathalgarvey.me>
Content-Type: multipart/alternative; boundary=001a11331e1a475df304eb70b720
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 4311
Lines: 88

--001a11331e1a475df304eb70b720
Content-Type: text/plain; charset=UTF-8

2013/11/18 Cathal Garvey <cathalgarvey@cathalgarvey.me>

> Retroshare isn't "like tor", it's "the opposite of tor".
>
> Tor establishes a network of mutual distrust (kinda; you still trust
> some aspects of the network such as the directory servers).
>

Yeah, Retroshare is Tor except with a different mechanism for finding
peers. I don't see how that is the opposite of Tor. The "opposite" of Tor
probably wouldn't use Onion Routing. BitTorrent might be closest to the
opposite of Tor.


> Also, I get mixed signals about the developer attitude to some security
> aspects of the P2P side of things. For example, they use SHA1 for the
> distributed hash table, whereas in my opinion one should never use an
> even partially broken hash for a *hash table*; you never know what
> exploits are known privately that further break the hash, and should
> generally assume it's fully broken if your threat model includes
> adversaries like the NSA. If you're willing to compromise on the
> quality of the hash that underlies the entire P2P end of the system,
> I'm wary about your attitude to security overall.
>

Why does the DHT require a cryptographic quality hash? I agree that SHA1 is
too weak to be cryptographic, but a DHT is merely finding chains of other
nodes. Worst that can happen is the adversary manipulating you into
connecting to them with higher chance. Given the whole friend-to-friend
mechanisms I don't see much harm in that. Depends on the plugin that runs
above it.

I must say that this is exactly the sort of thing I think makes RetroShare
risky. Some choices can be conditionally okay. Building a big stack of
software lacks overview easily.

--001a11331e1a475df304eb70b720
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote">2013=
/11/18 Cathal Garvey <span dir=3D"ltr">&lt;<a href=3D"mailto:cathalgarvey@c=
athalgarvey.me" target=3D"_blank">cathalgarvey@cathalgarvey.me</a>&gt;</spa=
n><br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-l=
eft:1px #ccc solid;padding-left:1ex">

<div id=3D":4kk" style=3D"overflow:hidden">Retroshare isn&#39;t &quot;like =
tor&quot;, it&#39;s &quot;the opposite of tor&quot;.<br>
<br>
Tor establishes a network of mutual distrust (kinda; you still trust<br>
some aspects of the network such as the directory servers).<br></div></bloc=
kquote><div><br></div><div>Yeah, Retroshare is Tor except with a different =
mechanism for finding peers. I don&#39;t see how that is the opposite of To=
r. The &quot;opposite&quot; of Tor probably wouldn&#39;t use Onion Routing.=
 BitTorrent might be closest to the opposite of Tor.</div>

<div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8=
ex;border-left:1px #ccc solid;padding-left:1ex"><div id=3D":4kk" style=3D"o=
verflow:hidden">Also, I get mixed signals about the developer attitude to s=
ome security<br>


aspects of the P2P side of things. For example, they use SHA1 for the<br>
distributed hash table, whereas in my opinion one should never use an<br>
even partially broken hash for a *hash table*; you never know what<br>
exploits are known privately that further break the hash, and should<br>
generally assume it&#39;s fully broken if your threat model includes<br>
adversaries like the NSA. If you&#39;re willing to compromise on the<br>
quality of the hash that underlies the entire P2P end of the system,<br>
I&#39;m wary about your attitude to security overall.</div></blockquote></d=
iv><br>Why does the DHT require a cryptographic quality hash? I agree that =
SHA1 is too weak to be cryptographic, but a DHT is merely finding chains of=
 other nodes. Worst that can happen is the adversary manipulating you into =
connecting to them with higher chance. Given the whole friend-to-friend mec=
hanisms I don&#39;t see much harm in that. Depends on the plugin that runs =
above it.</div>

<div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">I must say =
that this is exactly the sort of thing I think makes RetroShare risky. Some=
 choices can be conditionally okay. Building a big stack of software lacks =
overview easily.</div>

</div>

--001a11331e1a475df304eb70b720--

