From owner-cypherpunks@Algebra.COM  Fri Jul  5 06:53:33 2002
Return-Path: <owner-cypherpunks@Algebra.COM>
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by positron.jfet.org (8.11.6/8.9.3) with ESMTP id g65ArWG18599
	for <rsw@opamp.org>; Fri, 5 Jul 2002 06:53:33 -0400
Received: from ak47.algebra.com ([209.120.156.51])
	by pacific-carrier-annex.mit.edu (8.9.2/8.9.2) with ESMTP id KAA03746
	for <rsw@mit.edu>; Fri, 5 Jul 2002 10:56:46 -0400 (EDT)
Received: from ak47.algebra.com (majordom@localhost [127.0.0.1])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g65EPB4l018729
	for <cypherpunks-outgoing@ak47.algebra.com>; Fri, 5 Jul 2002 09:25:11 -0500
Received: (from majordom@localhost)
	by ak47.algebra.com (8.12.1/8.12.1/Submit) id g65EPBX4018728
	for cypherpunks-outgoing; Fri, 5 Jul 2002 09:25:11 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from einstein.ssz.com (cpunks@[207.200.56.4])
	by ak47.algebra.com (8.12.1/8.12.1) with ESMTP id g65EP94l018714
	for <cypherpunks@algebra.com>; Fri, 5 Jul 2002 09:25:10 -0500
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id JAA08270
	for cypherpunks@algebra.com; Fri, 5 Jul 2002 09:29:00 -0500
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id JAA08228
	for cypherpunks-outgoing; Fri, 5 Jul 2002 09:27:21 -0500
Received: from sklave3.rackland.de (sklave3.rackland.de [62.146.214.70])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id JAA08221
	for <cypherpunks@einstein.ssz.com>; Fri, 5 Jul 2002 09:27:14 -0500
Received: from sodom (uucp@localhost)
	by sklave3.rackland.de (8.12.3/8.12.3/Debian -7) with BSMTP id g65EN8tp002208;
	Fri, 5 Jul 2002 16:23:08 +0200
Received: (from hadmut@localhost)
	by sodom.home.danisch.de (8.12.3/8.12.3/Debian -7) id g65EK2XA010764;
	Fri, 5 Jul 2002 16:20:02 +0200
From: Hadmut Danisch <hadmut@danisch.de>
Date: Fri, 5 Jul 2002 16:20:02 +0200
To: Lucky Green <shamrock@cypherpunks.to>
Cc: cypherpunks@einstein.ssz.com, cryptography@wasabisystems.com
Old-Subject: CDR: Re: Ross's TCPA paper
Message-ID: <20020705142002.GC9463@danisch.de>
References: <20020704205410.GA8220@danisch.de> <006001c223e8$733e4200$6401a8c0@LUCKYVAIO>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <006001c223e8$733e4200$6401a8c0@LUCKYVAIO>
User-Agent: Mutt/1.3.27i
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-Unsubscription-Info: http://einstein.ssz.com/cdr
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Acceptable-Languages: English, Russian, German, French, Spanish
Subject:  Re: Ross's TCPA paper
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 2551
Lines: 71


On Thu, Jul 04, 2002 at 10:54:34PM -0700, Lucky Green wrote:
> 
> Sure you can use shell scripts. Though I don't understand how a shell
> script will help you in obtaining a dump of the protected data since
> your script has insufficient privileges to read the data. Nor can you
> give the shell script those privileges since you don't have supervisor
> mode access to the CPU. How does your shell script plan to get past the
> memory protection?
> 


That's why I was talking about a shell script (or take any
other program to be interpreted).

What does need to be certified: The shell or the shell script?
The CPU doesn't recognize the shell script as a program, this
is just some plain data entered through the keyboard like
writing a letter. A shell script is not a program, it is
data entered at a program's runtime.

This moves one step forward:

The hardware (palladium chip, memory management, etc.) can
check the binary program to be loaded. So you won'te be able
to run a compiled program and to access protected information.

But once a certified software is running, it takes input
(reading mouse, keyboard, files, asking DNS, connecting 
servers,...). This input might cause (by interpretation, by
bug or however) the certified software to do certain things
which do not comply with DRM requirements.

At this stage, the running binary software itself is the
instance to provide the DRM security, not the palladium 
memory management anymore. 

I agree that this is not yet an "open sesame", but it shows
that the game does not play on the binary/memory management
layer only.

But who controls runtime input?

History shows, that M$ software is anything but able
to deal with malicious input. That's why the world is
using virus filters. That's nothing else than an external
filter to keep malicious input from an attacker away
from the running software.

By analogy, Palladium might require the same: an input
filter between attacker and running software. Since the
"attacker" is sitting in front of the computer this time,
this filter has to be applied to the user interface,
keyboard and mouse.

Maybe they'll install a filter between the keyboard and
the software, thus building a certified keyboard, which
filters out any malicious key sequences. And maybe you
can use your keyboard only, if you have downloaded the
latest patterns (like your daily virus filter update).

I agree that this depends on the assumption that 
the certified software is not perfect and can't
deal with arbitrary input. But that's reality.

Hadmut






