From owner-cypherpunks@Algebra.COM  Wed Feb  7 14:34:31 2001
Received: from MIT.EDU (SOUTH-STATION-ANNEX.MIT.EDU [18.72.1.2])
	by positron.mit.edu (8.9.3/8.9.3) with SMTP id OAA29879
	for <kwantam@positron.mit.edu>; Wed, 7 Feb 2001 14:34:31 -0500
Received: from [208.233.99.160] by MIT.EDU with SMTP
	id AA14058; Wed, 7 Feb 01 14:32:56 EST
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f17DjJQ13463
	for cypherpunks-outgoing; Wed, 7 Feb 2001 07:45:19 -0600
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from sirius.infonex.com (sirius.infonex.com [216.34.245.2])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f17DjIq13449
	for <cypherpunks@algebra.com>; Wed, 7 Feb 2001 07:45:18 -0600
Received: (from cpunks@localhost) by sirius.infonex.com (8.8.8/8.8.8) id FAA04480; Wed, 7 Feb 2001 05:45:11 -0800 (PST)
Received: from cyberpass.net (cyberpass.net [216.34.245.3]) by sirius.infonex.com (8.8.8/8.8.8) with ESMTP id FAA04465 for <cpunks@sirius.infonex.com>; Wed, 7 Feb 2001 05:44:47 -0800 (PST)
Received: from mail.lemuria.org (www.lemuria.org [62.197.4.112]) by cyberpass.net (8.8.8/8.7.3) with ESMTP id FAA28213 for <cypherpunks@cyberpass.net>; Wed, 7 Feb 2001 05:47:16 -0800 (PST)
Received: from unicorn.lemuria.org (pd9500632.dip.t-dialin.net [217.80.6.50])
	by mail.lemuria.org (Postfix) with ESMTP id B740C27AEE
	for <cypherpunks@cyberpass.net>; Tue,  6 Feb 2001 11:21:54 +0100 (MET)
Received: by unicorn.lemuria.org (Postfix, from userid 1000)
	id 92C3B175195; Tue,  6 Feb 2001 11:24:10 +0100 (CET)
Date: Tue, 6 Feb 2001 11:24:10 +0100
From: Tom <tom@lemuria.org>
To: cypherpunks@cyberpass.net
Old-Subject: published secret - similiar to AP prot
Message-Id: <20010206112409.B28982@lemuria.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
Subject:  published secret - similiar to AP prot
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 2413
Lines: 54


I'd like to bounce an idea off the list and get some feedback,
especially on what I missed.

say alice has some information, published e.g. on her website. she is
afraid that said information may be a thought crime, aka decss or an
sdmi hack.
bob makes a copy of the information and wants to inform alice that he
did so in case a court or some jackboots tell her to take it down, so
she can link to him or do twist her dns records, whatever.

so far, simple. the new twist is that I want bob to know when alice (or
someone else) makes use of the information. at the lowest level, bob
may want to simply know when his mirror is being used. or the
information may be highly illegal and bob must know that he is now in
the line of fire. or maybe he doesn't even actually provide the
information until he gets the message that it is now required (think
moving target).

my solution is as follows:

when bob copies the info, he sends a message to alice. the "outer
shell" is encrypted to alice private key, to ensure that only alice can
make use of it. it contains a URL, a public key and a second, encrypted part. 
the URL is under bob's control and provides the key to the second part. it is
not linked from anywhere and reasonably complicated to make any
"accidental" hit to it extremely unlikely.
come day X where bob's mirror is needed. alice decrypts her mail and
visits bob's URL to get the 2nd key. bob now knows (or at least can
know, if he cares) that alice is in posession of the whole message
(e.g. containing the URL of his mirror site) and can react accordingly.
the 2nd key is also encrypted to alice, so eve can not learn about the
whole message until and if alice decides to publish it (e.g. link to
the new mirror site).
the 2nd key is also signed with the key contained in the 1st message in
order to assure alice that the information she now retrieves (possibly
months or years later) is from the same source as the original message.



problems I know about:

legally, this surely puts bob and alice "in cooperation", so a legal
injunction against alice will bind bob as well. any ideas on how to
solve that would be great.
it sure sounds a little heavy for a simple goal. I'm fairly sure there is 
a more general solution to the problem. it's just so common. "bob sends 
alice a message. bob needs to know when alice reads it."


-- 
-- http://www.lemuria.org
-- http://www.Nexus-Project.net
--

