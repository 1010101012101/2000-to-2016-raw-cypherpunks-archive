From owner-cypherpunks@al-qaeda.net  Mon Dec  6 00:24:43 2004
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (majordomo@localhost.localdomain [127.0.0.1])
	by positron.jfet.org (8.13.1/8.13.1/Debian-18) with ESMTP id iB66O8Lt001002
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Mon, 6 Dec 2004 00:24:08 -0600
Received: (from majordomo@localhost)
	by positron.jfet.org (8.13.1/8.13.1/Submit) id iB66O8Dv001001
	for cypherpunks-outgoing; Mon, 6 Dec 2004 00:24:08 -0600
Message-Id: <6.0.3.0.0.20041205215922.03bbed80@pop.idiom.com>
X-Sender: wcs@pop.idiom.com
X-Mailer: QUALCOMM Windows Eudora Version 6.0.3.0
Date: Sun, 05 Dec 2004 22:22:42 -0800
To: cypherpunks@al-qaeda.net
From: Bill Stewart <bill.stewart@pobox.com>
Subject: Re: Michael Riconosciuto, PROMIS
Cc: Steve Thompson <steve49152@yahoo.ca>
In-Reply-To: <20041205211434.Y13412@ubzr.zsa.bet>
References: <20041206015830.5830.qmail@web51807.mail.yahoo.com> 
  <20041205211434.Y13412@ubzr.zsa.bet>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
X-Keywords:                  
X-UID: 14715
Status: O
Content-Length: 3092
Lines: 55

>On Sun, 5 Dec 2004, Steve Thompson wrote:
> > Does anyone here have a good idea of what the PROMIS code actuall does;
> > what its characteristics and capabilities are in terms of its function as
> > an aid to intellegence analysts, logistics technicians, or consultants?

At 07:16 PM 12/5/2004, J.A. Terranson wrote:

>We had a PROMIS system on our 370 something (168?) back in '81 - ran under
>SPF/TSO [MVS] IIRC?  I always assumed the two were loosely related - I
>believe it was an early and crude relational DB implementation.  But who
>the hell really knows?

There are several different issues related to PROMIS
0 - What size tinfoil hat do you need?
         (It's probably still worth being paranoid about Echelon,
         but PROMIS is old hat...)
1 - Feds or somebody basically pirated their copy of the software,
         back when most mainframe software was expensive,
         and drove the company into bankruptcy rather than pay up,
         and they spent a lot of effort covering up their ripoff,
         possibly including the murder of a journalist.
2 - What are the basic capabilities of the software?
         I think Alif's got it about right, and remember that
         back in the early 80s, Codd & Date had written some really cool
         theory about how relational databases could and should work,
         but most computers didn't have the horsepower for them and
         the early implementations were mostly either crude or bloated.
         Also, mainframe software tended to be very customized,
         particularly if it had to interconnect with other mainframe software
         like somebody else's non-relational database with a different schema.
3 - What sets of data were the various spooks, feds, and staties
         _keeping_ in their databases, and how much of it did they
         share with each other or get from various other sources?

If you worked with databases back in the early 80s, remember that
a gigabyte of disk used to be pretty big, rather than wristwatch-sized,
and a megabyte of RAM was big and cost non-trivial amounts of money,
and magnetic tapes held less than 200MB and took tens of minutes to read,
and big database projects typically required departments of
dozens or hundreds of workers to spend months of budgeting and planning to
design schemas and processes that could take months to run,
instead of being ad-hoc queries any random employee can run on their desktop
over lunchtime if they feel like it, and might be able to run
on their pocket computer when riding home on the subway.

My department's ~1983 VAX had a 1 MIPS CPU, a gig of removable disk,
4MB RAM, and two tape drives, and cost about $400K.
It wasn't big iron - that was typically an order of magnitude bigger.
These days, $400 will get you a 3000 MIPS CPU, a gig of RAM,
and 100-200GB disk, and database software is free.

It's about a million times more cost-effective, depending on
whether you care more about CPU, disk, or RAM,
and there's an Internet hanging out the back side that will
let you use Google's farm of ~100K computers for free.

