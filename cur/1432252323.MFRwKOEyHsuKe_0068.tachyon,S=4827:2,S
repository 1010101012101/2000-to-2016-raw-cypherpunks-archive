From owner-cypherpunks@al-qaeda.net  Thu Jan  6 00:48:50 2005
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from positron.jfet.org (majordomo@localhost.localdomain [127.0.0.1])
	by positron.jfet.org (8.13.2/8.13.2/Debian-1) with ESMTP id j066lTEm029189
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@positron.jfet.org>; Thu, 6 Jan 2005 00:47:29 -0600
Received: (from majordomo@localhost)
	by positron.jfet.org (8.13.2/8.13.2/Submit) id j066lTLU029188
	for cypherpunks-outgoing; Thu, 6 Jan 2005 00:47:29 -0600
Message-ID: <41DCDEC8.4000902@garlic.com>
Date: Wed, 05 Jan 2005 23:46:32 -0700
From: Anne & Lynn Wheeler <lynn@garlic.com>
User-Agent: Mozilla Thunderbird 1.0 (X11/20041206)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Bill Stewart <bill.stewart@pobox.com>
CC: "R.A. Hettinga" <rah@shipwright.com>, cryptography@metzdowd.com,
        cypherpunks@al-qaeda.net
Subject: Re: Banks Test ID Device for Online Security
References: <017630AA6DF2DF4EBC1DD4454F8EE29704776BE6@rsana-ex-hq1.NA.RSA.NET>
  <20050105032142.7E8D4F2CB@red.metdow.com>
In-Reply-To: <20050105032142.7E8D4F2CB@red.metdow.com>
X-Enigmail-Version: 0.89.5.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net
X-Keywords:                  
X-UID: 17419
Status: O
Content-Length: 3335
Lines: 68

Bill Stewart wrote:
> Yup.  It's the little keychain frob that gives you a string of numbers,
> updated every 30 seconds or so, which stays roughly in sync with a server,
> so you can use them as one-time passwords
> instead of storing a password that's good for a long term.
> 
> So if the phisher cons you into handing over your information,
> they've got to rip you off in nearly-real-time with a MITM game
> instead of getting a password they can reuse, sell, etc.
> 
> That's still a serious risk for a bank,
> since the scammer can use it to log in to the web site
> and then do a bunch of transactions quickly;
> it's less vulnerable if the bank insists on a new SecurID hit for
> every dangerous transaction, but that's too annoying for most customers.

in general, it is "something you have" authentication as opposed to the 
common shared-secret "something you know" authentication.

while a window of vulnerability does exist (supposedly something that 
prooves you are in possession of "something you have"), it is orders of 
magnitude smaller than the shared-secret "something you know" 
authentication.

there are two scenarios for shared-secret "something you know" 
authentication

1) a single shared-secret used across all security domains ... a 
compromise of the shared-secret has a very wide window of vulnerability 
plus a potentially very large scope of vulnerability

2) a unique shaerd-secret for each security domain ... which helps limit 
the scope of a shared-secret compromise. this potentially worked with 
one or two security domains ... but with the proliferation of the 
electronic world ... it is possible to have scores of security domains, 
resulting in scores of unique shared-secrets. scores of unique 
shared-secrets typically results exceeded human memory capacity with the 
result that all shared-secrets are recorded someplace; which in turn 
becomes a new exploit/vulnerability point.

various financial shared-secret exploits are attactive because with 
modest effort it may be possible to harvest tens of thousands of 
shared-secrets.

In one-at-a-time, real-time social engineering, may take compareable 
effort ... but only yields a single piece of authentication material 
with a very narrow time-window and the fraud ROI might be several orders 
of magnitude less. It may appear to still be large risk to individuals 
... but for a financial institution, it may be relatively small risk to 
cover the situation ... compared to criminal being able to compromise 
50,000 accounts with compareable effort.

In some presentation there was the comment made that the only thing that 
they really needed to do is make it more attactive for the criminals to 
attack somebody else.

It would be preferabale to have a "something you have" authentication 
resulting in a unique value ... every time the device was used. Then no 
amount of social engineering could result in getting the victim to give 
up information that results in compromise. However, even with relatively 
narrow window of vulnerability ... it still could reduce risk/fraud to 
financial institutions by several orders of magnitude (compared to 
existing prevalent shared-secret "something you know" authentication 
paradigms).


old standby posting about security proportional to risk
http://www.garlic.com/~lynn/2001h.html#61

