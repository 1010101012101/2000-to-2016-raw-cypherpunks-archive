From owner-cypherpunks-outgoing@EINSTEIN.ssz.com  Mon Nov 20 11:05:52 2000
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id LAA28391
	for <kwantam@positron.mit.edu>; Mon, 20 Nov 2000 11:05:51 -0500
Received: from einstein.ssz.com (mdom@einstein.ssz.com [204.96.2.99])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id LAA14643
	for <rsw@MIT.EDU>; Mon, 20 Nov 2000 11:05:50 -0500 (EST)
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id KAA01733
	for cypherpunks-outgoing; Mon, 20 Nov 2000 10:09:04 -0600
Received: (from cpunks@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id JAA32647
	for cypherpunks@ssz.com; Mon, 20 Nov 2000 09:48:42 -0600
Received: from mail.virtual-estates.net (root@video-collage.com [160.79.196.177])
	by einstein.ssz.com (8.8.8/8.8.8) with ESMTP id JAA32601
	for <cpunks@ssz.com>; Mon, 20 Nov 2000 09:48:30 -0600
Received: (from cpunks@localhost)
	by mail.virtual-estates.net (8.9.3+3.2W/8.9.1) id TAA03210;
	Sun, 19 Nov 2000 19:26:30 -0500 (EST)
X-Authentication-Warning: video-collage.com: Processed from queue /var/spool/mqueue-majordomo
X-Authentication-Warning: video-collage.com: Processed by cpunks with -C /usr/local/majordomo/sendmail.cf
Received: from finch-post-11.mail.demon.net (finch-post-11.mail.demon.net [194.217.242.39])
	by mail.virtual-estates.net (8.9.3+3.2W/8.9.3) with ESMTP id TAA03200
	for <cypherpunks@algebra.com>; Sun, 19 Nov 2000 19:26:22 -0500 (EST)
From: lists@notatla.demon.co.uk
X-Relay-IP: 194.217.242.39
Received: from notatla.demon.co.uk ([194.222.156.169])
	by finch-post-11.mail.demon.net with esmtp (Exim 2.12 #1)
	id 13xemk-000Hsw-0B; Mon, 20 Nov 2000 00:26:14 +0000
Received: (from lists@localhost)
	by notatla.demon.co.uk (noyb/noyb) id AAA04152;
	Mon, 20 Nov 2000 00:25:40 GMT
Date: Mon, 20 Nov 2000 00:25:40 GMT
Message-Id: <200011200025.AAA04152@notatla.demon.co.uk>
X-Grumble: British Telecom - disconnected again by administrative error
To: bear@sonic.net, cryptography@c2.net
Old-Subject: Re: Key-Address correspondence in networks?
Cc: cypherpunks@algebra.com
Subject: CDR: Re: Key-Address correspondence in networks?
Sender: owner-cypherpunks@EINSTEIN.ssz.com
Precedence: bulk
Reply-To: cypherpunks@EINSTEIN.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Language: English, Russian, German
Status: O
Content-Length: 1694
Lines: 43

From: Ray Dillinger <bear@sonic.net>

You seem to have 2 different questions.

> In an application which passes encrypted messages from one host to 
> another, it is desirable to have the message differently encrypted 
> at each 'hop' along the way (to defeat traffic analysis).  But, this 
> link-to-link encryption requires keeping track of an enormous number 
> of keys, and that introduces complexity which a cracker could use 
> to get into the system.  

You might consider proxy cryptography here.
ftp://research.att.com/dist/mab/proxy.ps

>  The proposal is to use longer keys for each machine, and have the 
> IP address of each machine be part of its key.  (or in another 
> network environment, assign it an "address" which happens to *be* 
> its key...)  

> My questions: 
>    1)  Is using a longer key just paranoia in this case, or is there 
>        an actual weakness in constricting the choice of public key
>        that makes the private key easier to derive?  

Assuming RSA and IPv4 you are only planning to fix 32 bits (perhaps the
next to least significant because you want to cater for even numbered
IP addresses) out of each prime of size 512 or 1024 or whatever.  That does
not sound like much reduced security.
 
>    2)  Is there a reasonable class of attacks and spoofs that this 
>        protects against?

I think so.  Hard cheese for DCHP users though.



From: Bram Cohen <bram@gawth.com>

> Like I said, the important thing is that it stops passive attacks - in
> practice man in the middle attacks just don't seem to happen.

Sorry to take issue with Bram again but this reminds me of
    As far as we know, our computer has never had an undetected error.

