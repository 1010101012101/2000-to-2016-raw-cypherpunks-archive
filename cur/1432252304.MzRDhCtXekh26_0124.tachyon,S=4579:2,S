From owner-cypherpunks@Algebra.COM  Fri Aug 10 13:29:10 2001
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id NAA06731
	for <kwantam@positron.mit.edu>; Fri, 10 Aug 2001 13:29:10 -0400
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id NAA15779
	for <rsw@mit.edu>; Fri, 10 Aug 2001 13:29:01 -0400 (EDT)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f7AHBVq19528
	for cypherpunks-outgoing; Fri, 10 Aug 2001 12:11:31 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from pax.minder.net (minder.net-gate.com [64.80.72.231] (may be forged))
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f7AHBJH19485
	for <cypherpunks@algebra.com>; Fri, 10 Aug 2001 12:11:25 -0500
Received: from waste.minder.net (root@waste.minder.net [64.80.76.82])
	by pax.minder.net (8.11.1/8.11.1) with ESMTP id f7AH2JY87596
	for <cypherpunks@algebra.com>; Fri, 10 Aug 2001 13:02:19 -0400 (EDT)
	(envelope-from cpunks@waste.minder.net)
Received: (from cpunks@localhost)
	by waste.minder.net (8.9.3/8.9.3) id MAA01848
	for cypherpunks@algebra.com; Fri, 10 Aug 2001 12:10:10 -0400
Received: (from majordom@localhost)
	by waste.minder.net (8.9.3/8.9.3) id MAA01831
	for cypherpunks-outgoing; Fri, 10 Aug 2001 12:10:04 -0400
Received: from marine.sonic.net (marine.sonic.net [208.201.224.37])
	by waste.minder.net (8.9.3/8.9.3) with SMTP id MAA01815
	for <cypherpunks@minder.net>; Fri, 10 Aug 2001 12:09:41 -0400
Received: (qmail 28244 invoked from network); 10 Aug 2001 16:09:08 -0000
Received: from bolt.sonic.net (HELO sonic.net) (208.201.224.36)
  by marine.sonic.net with SMTP; 10 Aug 2001 16:09:08 -0000
Received: from localhost (bear@localhost) by sonic.net (8.11.0/8.7.3) with ESMTP id f7AG6q916208; Fri, 10 Aug 2001 09:06:53 -0700
Date: Fri, 10 Aug 2001 09:06:52 -0700 (PDT)
From: Ray Dillinger <bear@sonic.net>
To: "Dr. Evil" <drevil@sidereal.kz>
cc: cypherpunks@minder.net
Old-Subject: Linearized computations - was  OCR
In-Reply-To: <20010810061128.16726.qmail@sidereal.kz>
Message-ID: <Pine.LNX.4.21.0108100855510.13151-100000@bolt.sonic.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Old-Subject:  Linearized computations - was  OCR
Subject:   Linearized computations - was  OCR
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 1874
Lines: 42




On 10 Aug 2001, Dr. Evil wrote:

>blacked out.  Cool!  But I'm working on a different problem.
>Basically, I have a web site that lets you reserve domain names before
>you pay for them.  I want to make sure that no loser out there decides
>to be cool and write a script which reserves every word in the
>dictionary, or every sequence of eight characters, or some moronic
>thing like that.  So I will have the page display three characters,
>somewhat blurry, and say, "type these characters here!"  If they don't
>match, you're not human!  (Why didn't they think of this simple method
>in Terminator and Blade Runner?)  This same moron could sit there and
>type domain names all day long, but that's enough punishment in
>itself.

This is a case where I'd make them do some kind of computation before 
they could register a name.  Frex, -- "here's a number, and here's a 
downloadable utility that does squaring under a modulus.  Tell me what 
this number is, squared N times, under modulus X, and I'll let you 
register a domain name. "

So, your typical user has to wait thirty seconds, which is no big 
deal, but the guy who's trying to register every word in a million-
word dictionary is going to have to harness truly massive computing 
resources in order to do so. You can even linearize the computation 
(meaning it won't do them any good to sic multiple cpu's on it) if 
you make them submit numbers in a sequence for multiple registrations.
(ie, first registration is number squared N times, second is number 
squared 2N times, third is number squared 6N times, etc....)

Or, if you are keeping track of who registers what, which of course 
you must be for "register" to have any meaning, why not just refuse 
the tenth and subsequent registrations for any particular address?
Even if the addresses are masked, you can still compare hashes of them.

			Bear





