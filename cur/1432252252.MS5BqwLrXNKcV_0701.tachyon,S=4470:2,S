From owner-cypherpunks@lne.com  Sun Apr 13 20:55:40 2003
Return-Path: <owner-cypherpunks@lne.com>
Received: from gw.lne.com (gw.lne.com [209.157.136.81])
	by positron.jfet.org (8.11.6p2/8.11.6-03-31-03) with ESMTP id h3E0tct00740
	for <rsw@jfet.org>; Sun, 13 Apr 2003 20:55:38 -0400
Received: (from majordom@localhost)
	by gw.lne.com (8.12.5/8.12.5) id h3DNc4Ae001646
	for cypherpunks-goingout345; Sun, 13 Apr 2003 16:38:04 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Date: Sun, 13 Apr 2003 22:45:33 +0200 (CEST)
From: Thomas Shaddack <shaddack@ns.arachne.cz>
X-X-Sender: <shad@Zeta>
To: Eric Murray <ericm@lne.com>
cc: <cypherpunks@lne.com>
Subject: Re: Kill MS, again, but sideways
In-Reply-To: <20030413101054.A27412@slack.lne.com>
Message-ID: <Pine.LNX.4.33.0304132217060.1643-100000@Zeta>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-cypherpunks@lne.com
Precedence: bulk
X-Loop: cypherpunks@lne.com
Status: O
Content-Length: 3432
Lines: 80

> Really?  You got this mail through an old modem and linux box..

The keyword is *OLD* modem.

There were times when the interface was RS232, the manufacturers
voluntarily obeyed the Hayes standard AT command set, and their
vendor-specific extensions were typically documented in the booket you got
with the modem. No special drivers, no proprietary interfaces, as the
computers were meant to be when Gods created them.

> Microsoft's lock on the winmodem appears to have been pretty short.

Depends on vendor and chipset.

> Commonly used interfaces do eventually become well known.
> While they do have owners, the amount of market interia they
> develop makes then essentially unchangeable.

PROBLEM: Depends on how willing the vendor is in documenting the chipset.

> But demanding that they be "communal property" sounds like
> the sort of socialism that can only be imposed by authority
> and fails when it is imposed.

Interfaces, APIs, and standards are WAY too important to be let
exclusively in the hands of the manufacturers. Besides, there is no point
in proprietariness of technology as if the vendors want to keep
exclusivity for manufacturing of their designs, they already have the
infrastructure of (*spit*) patents.

I am pretty militant in this issue. No compromises.

> That's been done before-- Diamond refused for years to supply info
> to Xfree86, so there was a boycott of Diamond graphic cards in
> the Linux community.  They eventually saw the light (or market).

...and for years it was impossible to use Diamond cards in real operating
systems. Good.

> 1. figuring out the winmodem interface.  It's software, so its possible.
> But it appears that others have already done the work for at least
> some winmodem chips.

VERY labor-intensive. Requires highly qualified workforce. Barely suitable
only for the most common chipsets. (See the end for more comments.) Wastes
brain-hours that could be invested better.

> 2. boycotting winmodem makers.  Not likely to work in this case since
> most modem makers sell the things.  Besides, the market drive for
> reduced chip count and the PC makers' hunger for anything that chews up CPU
> cycles and drives consumers to buy faster machines is a lot stronger
> than that for linux.

Won't work well, and surely won't work well for integrated modems in
laptops.

> 3. beg for some higher power to "do something".  You can probably
> guess from my tone that I don't think much of this option.

I would be happy if we could ignore this option. However, still better
than nothing; you have to have a really big stick for the big vendors.
Maybe it could be sneaked into something about security or infrastructure
protection/maintenance.

One more option:

4) Extend Assassination Politics to high managers. Everyone who peddles
proprietary technology and refuses to open their documentation should be
killed in a long and painful way. They should pay for the frustration they
inflict onto the field technicians.

Or a version of 4),
5) A bounty for the information leaks. Have a cash pool with a bounty for
the one who will leak the given "proprietary" information into the Public
Domain. This could extend to schematics and service manuals.


However, the option 1) would be the best, if we'd manage to dramatically
reduce the amount of labor necessary to tear a proprietary driver apart.
This requires development of good, easy to use reverse engineering tools.

