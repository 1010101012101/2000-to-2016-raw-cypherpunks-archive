From owner-cryptography+rsw=mit.edu@metzdowd.com  Sun Mar 20 10:56:49 2005
Return-Path: <owner-cryptography+rsw=mit.edu@metzdowd.com>
Received: from south-station-annex.mit.edu (SOUTH-STATION-ANNEX.MIT.EDU [18.72.1.2])
	by positron.jfet.org (8.13.3/8.13.3/Debian-9) with ESMTP id j2KGumkx022203
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <rsw@opamp.org>; Sun, 20 Mar 2005 10:56:49 -0600
Received: from pacific-carrier-annex.mit.edu (PACIFIC-CARRIER-ANNEX.MIT.EDU [18.7.21.83])
	by south-station-annex.mit.edu (8.12.4/8.9.2) with ESMTP id j2KGuVvm021348
	for <rsw@opamp.org>; Sun, 20 Mar 2005 11:56:31 -0500 (EST)
Received: from red.metdow.com (red.metdow.com [209.166.243.235])
	by pacific-carrier-annex.mit.edu (8.12.4/8.9.2) with ESMTP id j2KGuHrN020298
	for <rsw@mit.edu>; Sun, 20 Mar 2005 11:56:22 -0500 (EST)
Received: by red.metdow.com (Postfix, from userid 1002)
	id EC486F2AA; Sun, 20 Mar 2005 11:48:55 -0500 (EST)
X-Original-To: cryptography@metzdowd.com
Delivered-To: cryptography@metzdowd.com
Received: from snark.piermont.com (snark.piermont.com [166.84.151.72])
	by red.metdow.com (Postfix) with ESMTP id 847C8F2AB
	for <cryptography@metzdowd.com>; Sun, 20 Mar 2005 11:48:54 -0500 (EST)
Received: by snark.piermont.com (Postfix, from userid 1000)
	id DBE18D989A; Sun, 20 Mar 2005 11:48:55 -0500 (EST)
X-Original-To: cryptography@metzdowd.com
Received: from www.enhyper.com (mailgate.enhyper.com [62.49.250.18])
	by red.metdow.com (Postfix) with ESMTP id 9BBD0F2C8
	for <cryptography@metzdowd.com>; Tue, 15 Mar 2005 14:47:19 -0500 (EST)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by www.enhyper.com (8.11.6/8.11.6) with SMTP id j2FKkda27847;
	Tue, 15 Mar 2005 20:46:49 GMT
X-Authentication-Warning: www.enhyper.com: localhost.localdomain [127.0.0.1] didn't use HELO protocol
Message-ID: <42373C9E.7080505@systemics.com>
Date: Tue, 15 Mar 2005 19:50:54 +0000
From: Ian G <iang@systemics.com>
Organization: http://financialcryptography.com/
User-Agent: Mozilla Thunderbird 1.0 (X11/20050219)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: stpeter@jabber.org
Cc: Ian Goldberg <ian@cypherpunks.ca>, cryptography23094893@aquick.org,
        cryptography@metzdowd.com, otr@cypherpunks.ca
Subject: Re: Encryption plugins for gaim
References: <20050314061904.GA14354@lola.aquick.org> <423706AE.3040101@systemics.com> <20050315185419.GA23656@jabber.org> <20050315191448.GY980@smtp.paip.net>
In-Reply-To: <20050315191448.GY980@smtp.paip.net>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-cryptography@metzdowd.com
Precedence: bulk
X-Spam-Score: -4.9
X-Spam-Flag: NO
X-Scanned-By: MIMEDefang 2.42
Status: O
Content-Length: 5137
Lines: 121

Ian Goldberg wrote:
>>...Unfortunately
>>the original Jabber developers did not build encryption in from the
>>beginning and the existing methods have not been implemented widely
>>(OpenPGP over Jabber) or are not very Jabberish (RFC 3923), so we need
>>to improve what we have. Contributions welcome. See here for pointers:
>>
>>http://www.saint-andre.com/blog/2005-03.html#2005-03-15T11:23
> 
> 
> OTR works over Jabber today.  Granted, it's not very "Jabberish" (as far
> as I understand the term; I don't know the Jabber protocol very well):
> it just replaces the text of the message with ciphertext.  [gaim, at
> least, doesn't seem to have a way to construct a more "Jabberish"
> message, as far as I could tell.]

My thoughts are similar.  When I first got into the
design, I thought that the privacy aspects of the
protocol would be integral with the messaging system,
but that proved to be not the case.

For several reasons, I think the privacy layer is
going to end up being totally divorced from the messaging
layer.  As a stab at these:

    *  there are many messaging systems, and there are
       efforts at integrating these, so any decent
       privacy layer has to think about hops,
    *  we desperately want to preserve many messaging
       systems in violent competition,
    *  any privacy layer that involves a "decrypt at
       server and then re-encrypt" is not a privacy
       layer, as the threat is 99.9% at the node
       (all three - alice, bob, server) and not on
       the wire,
    *  involving the server in any identity and privacy
       concerns brings up conflicts such as asking the
       server to know who the user is, excrow, liability,...,
    *  messaging systems move at different paces and
       incorporating crypto into them may result in
       yoyo behaviour for safe chat - there today,
       gone tomorrow on the new alpha,
    *  the final authentication - alice of bob and v.v.
       - is something that is best done divorced from the
       lowtech as much as possible, so that means some
       sort of plugin and leveraging off pgp-style WoT.
       Integrating that step into the messaging system
       gives you "S/MIME authentication" which doesn't
       scale.

That was scratched off without pause...

Hence, my own efforts will probably go in these two
parallel directions:

     *  opportunistic key exchange followed by chat
        in SDP1 over SOX.  (Note that SOX is also
        encrypted client-to-server so for much of
        the journey packets will be doubly encrypted,
        but end-to-end is the target).  This method
        will be integrated and fast but lack user
        authentication.  This is uninteresting to
        anyone outside the SOX world.
     *  OpenPGP packets without any interference,
        and a sort of plugin ability to bootstrap
        a fast key exchange, with fingerprint display.
        Key signing to follow later...  Now this is
        much more interesting as conceivably the same
        protocol would (once designed!) work over
        email, Jabber, AIM, etc.  At least, that would
        be the intention.



> I'd be more than happy to help Jabber-ify the OTR protocol.  The reason
> we designed OTR was exactly that the GPG-over-IM solutions have
> semantics that don't match those of a private conversation: you have
> long-term encryption keys, as well as digital signatures on messages.


I'm not sure what this obsession with digital signatures
over messages is.  That probably wants to be unwound.  If
people are "signing a contract" over chat or indeed email,
then they probably need a lot more support in the tech and
a lot more warning, training, and legal support as to the
ramifications.  C.f.,
http://www.financialcryptography.com/mt/archives/000250.html

I agree that encrypting a chat message straight GPG/OpenPGP-
over-IM would probably be clunky.  I was more envisaging
using OpenPGP to handle the clunky key exchange and then
go fast from there.


> You don't *want* Bob to be able to prove to Charlie that Alice said what
> she did.  [Yet you want Bob to be himself assured of Alice's
> authorship.]  And a compromise of Bob's computer tomorrow should not
> expose today's messages.
> 
> OTR also adds a couple of extra features (malleable encryption,
> publishing of the MAC keys, a toolkit for forging transcripts) to help
> Alice claim that someone's putting words in her mouth.


(Note however that my efforts are towards integrating
two separate disparate systems - payments and IM - and
I am less concerned with the privacy aspects as Ian
Goldberg is.  This is one area where I'm adopting a
wait and see attitude because I'm not convinced that
this is an entirely tech issue.  But whichever, when
we get to that stage there is nothing wrong with doing
several possibilities.)

iang (the other other one)
-- 
News and views on what matters in finance+crypto:
         http://financialcryptography.com/

---------------------------------------------------------------------
The Cryptography Mailing List
Unsubscribe by sending "unsubscribe cryptography" to majordomo@metzdowd.com

