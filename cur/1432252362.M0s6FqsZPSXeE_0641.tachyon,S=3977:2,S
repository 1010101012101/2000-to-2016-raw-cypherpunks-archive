From owner-cypherpunks-outgoing@einstein.ssz.com  Sun Nov  5 19:11:15 2000
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id TAA02696
	for <kwantam@positron.mit.edu>; Sun, 5 Nov 2000 19:11:15 -0500
Received: from einstein.ssz.com (mdom@einstein.ssz.com [204.96.2.99])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id TAA07944
	for <rsw@MIT.EDU>; Sun, 5 Nov 2000 19:11:13 -0500 (EST)
Received: (from mdom@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) id SAA24309
	for cypherpunks-outgoing; Sun, 5 Nov 2000 18:04:20 -0600
Received: from localhost (ravage@localhost)
	by einstein.ssz.com (8.8.8/8.8.8) with SMTP id SAA24305
	for <cypherpunks@ssz.com>; Sun, 5 Nov 2000 18:04:17 -0600
Date: Sun, 5 Nov 2000 18:04:17 -0600 (CST)
From: Jim Choate <ravage@einstein.ssz.com>
To: cypherpunks@einstein.ssz.com
Subject: CDR: Re: Minesweeper and defeating modern encryption technology
In-Reply-To: <Pine.OSF.4.05.10011051537370.29138-100000@hcs.harvard.edu>
Message-ID: <Pine.LNX.3.96.1001105174957.295y-100000@einstein.ssz.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-cypherpunks@einstein.ssz.com
Precedence: bulk
Reply-To: cypherpunks@einstein.ssz.com
X-Mailing-List: cypherpunks@ssz.com
X-List-Admin: list@ssz.com
X-Loop: ssz.com
X-Language: English, Russian, German
Status: O
Content-Length: 2549
Lines: 56


On Sun, 5 Nov 2000, dmolnar wrote:

> > There is no guarantee that a NDTM will guess the correct answer at any
> > stage. The question the NDTM answers over a DTM is "Is there a statistical
> > algorithm that is more efficient than a deterministic one?".
> 
> Um, the definition of "nondeterministic Turing machine" implies such a
> guarantee. You seem to be thinking of a probabilistic Turing machine - a
> machine which can flip coins and use the results in an algorithm.
> They are **not** the same thing.

???

A NDTM has a stage which if given correct input will cause the result to
have one of several states (e.g. A Turing machine that holds both roots of
a quadratic at the same time). However, we're right back to 'provably
correct' which can't occur, even in principle because there are some
legitimate input states that can't be resolved as 'correct'. I wasn't the
one who injected 'guessing' in there (which a NDTM doesn't do, ever. It
takes the next state only after a 'proof of correctness' step.). When
the 'guess' factor is injected then you get a probabilistic NDTM. Which is
what I was addressing.

As to your assertion that they aren't the same thing, they can certainly
be combined. Which was my interpetation of the 'guess an answer and prove
it' and 'using a NDTM'. To me that implied a probabilistic NDTM, and that
is what I ran with.

Within the context of a universal set such as "all Boolean equations" it
is clear that the distinction between a NDTM and a DTM is irrelevant. It
goes back to the fact that NDTM can be shows to handle no languages that a
DTM can resolve. So injecting a NDTM into the mix does nothing to change
the results.

In addition a NDTM has little worth in a world where we postulate all
possible Boolean sentences are resolvable. It, after all, allows a state
to be both 1 and 0, clearly contrary to our assertion. What one would want
is to show that a DTM was all that is required to resolve any of those
Boolean equations. Which can't be done if we accept the NDTM <-> DTM
proof.

    ____________________________________________________________________

                     He is able who thinks he is able.

                                           Buddha

       The Armadillo Group       ,::////;::-.          James Choate
       Austin, Tx               /:'///// ``::>/|/      ravage@ssz.com
       www.ssz.com            .',  ||||    `/( e\      512-451-7087
                           -====~~mm-'`-```-mm --'-
    --------------------------------------------------------------------




