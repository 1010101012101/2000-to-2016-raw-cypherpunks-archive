From cypherpunks-bounces@cpunks.org  Wed Sep  4 10:34:22 2013
Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r84EYHmG021797;
	Wed, 4 Sep 2013 10:34:18 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; insecure key"
	header.d=gmail.com header.i=@gmail.com header.b=ifhzXU/M;
	dkim-adsp=none (insecure policy); dkim-atps=neutral
Received: from mail-ob0-f173.google.com (mail-ob0-f173.google.com
 [209.85.214.173])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-4) with ESMTP id r84EYEWa021793
 (version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)
 for <cypherpunks@cpunks.org>; Wed, 4 Sep 2013 10:34:16 -0400
Received: by mail-ob0-f173.google.com with SMTP id ta17so427072obb.32
 for <cypherpunks@cpunks.org>; Wed, 04 Sep 2013 07:34:09 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:sender:in-reply-to:references:from:date:message-id
 :subject:to:cc:content-type;
 bh=uxurB9GXjv5DgsOj9PzA5ex48xkcbStOFC63UJMPBnk=;
 b=ifhzXU/Mjkia6keNA+Fikj/4PwDBX9vQDB/PxViNnIx/15ZvqcWtI8Nalby1oZHx2E
 6xB5n89WmlE4xF1yHYaiWIH8G4B3KvGuqQYjVjzX9jSp2jurQAzt9n44gFz6HajkDVy4
 qoa9nFOs7M+k5ADA3BCPz0YiqrKh0U218NlRQ+P0krRwe8g6oFl6gCoR2tDjNU2AnLdD
 YWoObxmdHVGGj2bEi77qJzZodC/VeGZFBfyPxEncj5NeVloe8zesL5Caok7EqENwiBSW
 1y/Z6XTJnAHNqx21D3tiZ7wmHH+GpQPaDYBlTUKgY+diEmhCTJ34fJp2jdYa0pOH4pyf
 Q5Mg==
X-Received: by 10.60.120.69 with SMTP id la5mr332973oeb.86.1378305249043; Wed,
 04 Sep 2013 07:34:09 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.76.129.36 with HTTP; Wed, 4 Sep 2013 07:33:49 -0700 (PDT)
In-Reply-To: <CAESvgEq=X9mYw=oxvEn2G4EyK_7-QyUvVpw=VophL5chQLaOCw@mail.gmail.com>
References: <F29B40CB-753A-44A7-97CB-5A92B924F480@ei8fdb.org>
 <E1VGzb2-0002kU-FX@elasmtp-junco.atl.sa.earthlink.net>
 <CAD2Ti29wzvYfpx+hb=useW76VqwFpRtTLum755LRJ5RwrBK2Vg@mail.gmail.com>
 <CAHWD2rLPrzE+tBsSaL8pxfp=pzxvU5DzKGFnJ6jiDpg8GqCPEQ@mail.gmail.com>
 <CAESvgEq=X9mYw=oxvEn2G4EyK_7-QyUvVpw=VophL5chQLaOCw@mail.gmail.com>
From: =?UTF-8?Q?Lodewijk_andr=C3=A9_de_la_porte?= <l@odewijk.nl>
Date: Wed, 4 Sep 2013 16:33:49 +0200
X-Google-Sender-Auth: obXpB06sm8w5zO5MbDaIPAbYUVw
Message-ID: <CAHWD2rKwjgiFnMHo_3yaBKasj2HCZbJB3CYnq0UnYp_YYejjjg@mail.gmail.com>
Subject: Re: Safest exit country?
To: Kyle Maxwell <kylem@xwell.org>
Content-Type: multipart/alternative; boundary=047d7b339559c2ebe004e58fb294
Cc: "cypherpunks@cpunks.org" <cypherpunks@cpunks.org>
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Status: O
Content-Length: 4598
Lines: 100

--047d7b339559c2ebe004e58fb294
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

2013/9/4 Kyle Maxwell <kylem@xwell.org>

> On Wed, Sep 4, 2013 at 8:20 AM, Lodewijk andr=C3=A9 de la porte <l@odewij=
k.nl>
> wrote:
> > Enough mind games. You have to pass the wires anyway, encrypt and trust
> the
> > endpoints. (and encrypt hard)
>
> Which, generally speaking, will still not defeat traffic analysis
> without special considerations...


I'm gonna go ahead and suggest trickle connections. It's in my paper about
mesh networking that I might release once. You have n connections to n
nodes (1 on 1) and you continuously flow (both directions) random data over
it. Occasionally instead of random data you put an encrypted package in it.
The other end continuously (tries to) decrypt packages. This way you never
know if something is being sent or not, at the cost of some bandwidth.

Schematically:

generate random > send buffer
secret package > send buffer
send buffer > stream encryption > transmit buffer
transmit buffer > rate limited connection to peer

on the other side:
receive buffer > stream decryption > package detector > usual way of
dealing with incoming packages.

If you never actually use these trickle connections, but you do have them,
you can deny being the origin of packages (I didn't know what it was! I got
it over a trickle connection!). If you mark packages as "top secret" they
should only be send over trickles and they'll never be network observable
at all.

Additional tricks such as delayed further transmission, network path
mixing, etc. are all possible with what I have in my paper and should be
(easily) doable in Tor.

I never really understood the problem with traffic analysis.

--047d7b339559c2ebe004e58fb294
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_extra">2013/9/4 Kyle Maxwell <span dir=
=3D"ltr">&lt;<a href=3D"mailto:kylem@xwell.org" target=3D"_blank">kylem@xwe=
ll.org</a>&gt;</span><br><div class=3D"gmail_quote"><blockquote class=3D"gm=
ail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-l=
eft-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">

<div class=3D"im">On Wed, Sep 4, 2013 at 8:20 AM, Lodewijk andr=C3=A9 de la=
 porte &lt;<a href=3D"mailto:l@odewijk.nl">l@odewijk.nl</a>&gt; wrote:<br>
&gt; Enough mind games. You have to pass the wires anyway, encrypt and trus=
t the<br>
&gt; endpoints. (and encrypt hard)<br>
<br>
</div>Which, generally speaking, will still not defeat traffic analysis<br>
without special considerations...</blockquote></div><br>I&#39;m gonna go ah=
ead and suggest trickle connections. It&#39;s in my paper about mesh networ=
king that I might release once. You have n connections to n nodes (1 on 1) =
and you continuously flow (both directions) random data over it. Occasional=
ly instead of random data you put an encrypted package in it. The other end=
 continuously (tries to) decrypt packages. This way you never know if somet=
hing is being sent or not, at the cost of some bandwidth.</div>

<div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">Schematical=
ly:</div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">ge=
nerate random &gt; send buffer</div><div class=3D"gmail_extra">secret packa=
ge &gt; send buffer</div>

<div class=3D"gmail_extra">send buffer &gt; stream encryption &gt; transmit=
 buffer</div><div class=3D"gmail_extra">transmit buffer &gt; rate limited c=
onnection to peer</div><div class=3D"gmail_extra"><br></div><div class=3D"g=
mail_extra">

on the other side:<br>receive buffer &gt; stream decryption &gt; package de=
tector &gt; usual way of dealing with incoming packages.</div><div class=3D=
"gmail_extra"><br></div><div class=3D"gmail_extra">If you never actually us=
e these trickle connections, but you do have them, you can deny being the o=
rigin of packages (I didn&#39;t know what it was! I got it over a trickle c=
onnection!). If you mark packages as &quot;top secret&quot; they should onl=
y be send over trickles and they&#39;ll never be network observable at all.=
</div>

<div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">Additional =
tricks such as delayed further transmission, network path mixing, etc. are =
all possible with what I have in my paper and should be (easily) doable in =
Tor.</div>

<div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">I never rea=
lly understood the problem with traffic analysis.</div></div>

--047d7b339559c2ebe004e58fb294--

