From owner-cypherpunks@al-qaeda.net  Fri Jun 15 00:38:24 2012
Return-Path: <owner-cypherpunks@al-qaeda.net>
Received: from proton.jfet.org (localhost.localdomain [127.0.0.1])
	by proton.jfet.org (8.14.3/8.14.3/Debian-9.4) with ESMTP id q5F4YrP6021147
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Fri, 15 Jun 2012 00:34:53 -0400
Received: (from majordomo@localhost)
	by proton.jfet.org (8.14.3/8.14.3/Submit) id q5F4Yr04021146
	for cypherpunks-outgoing; Fri, 15 Jun 2012 00:34:53 -0400
Date: Fri, 15 Jun 2012 06:34:49 +0200
From: Eugen Leitl <eugen@leitl.org>
To: cypherpunks@al-qaeda.net, zs-p2p@googlegroups.com, info@postbiota.org
Subject: Re: [tahoe-dev] Proposed short description of tahoe-LAFS for 
  personal backup
Message-ID: <20120615043449.GK17120@leitl.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 7bit
User-Agent: Mutt/1.5.18 (2008-05-17)
Sender: owner-cypherpunks@al-qaeda.net
Precedence: bulk
X-Loop: al-qaeda.net

----- Forwarded message from Zooko Wilcox-O'Hearn <zooko@zooko.com> -----

From: Zooko Wilcox-O'Hearn <zooko@zooko.com>
Date: Thu, 14 Jun 2012 15:03:52 -0300
To: Tahoe-LAFS development <tahoe-dev@tahoe-lafs.org>
Subject: Re: [tahoe-dev] Proposed short description of tahoe-LAFS for
	personal backup
Reply-To: Tahoe-LAFS development <tahoe-dev@tahoe-lafs.org>

On Tue, Jun 12, 2012 at 7:44 PM, Saint Germain <saintger@gmail.com> wrote:
>
> tahoe-LAFS is not really a backup software but rather a storage solution.

How about:

"""
Tahoe-LAFS is not just a backup tool, but rather a distributed file
system. It also comes with an integrated backup tool.
"""

>  The primary objective is to secure your data, either for
> privacy or for safety (against damage). To do so, it stores your
> encrypted data (encrypted at the source) on several machines organized
> in a network with a configurable policy (specifying K=2 and N=5 for
> instance, will spread your data on 5 machines, 2 of which need at least
> to be available to access your data).

Nicely written.

> A few remarkable points:
>  - I like its "paranoid" approach. The idea is to trust no one (and especially not your online storage provider)

This is fine and I don't think you need to change it, but for your
information whenever I see the word "trust" a little warning flag goes
up in my brain, and I go back and mentally rewrite the sentence
without the word "trust". This is because that word combines two
things: 1. Whether you think a person or tool is going to fail or
betray you, and 2. Whether your system relies on that person or tool
operating correctly and loyally.

A lot of the architecture of Tahoe-LAFS is focused on question 2 and
the interference of question 1 just confuses everyone. If you think
about question 1 then you'll sometimes end up choosing the wrong
answer for question 2.

For example: think of Least Authority Enterprises. As a company, we
don't want our users to think that we are weak or malicious -- that we
are likely to fail or to betray our customers to someone else. But, we
very much want our customers to be *invulnerable* to us, so that *if*
we were to fail or to betray our customers to someone else, there
would be very little damage that we would be able to do.

If you use the word "trust", then it is hard to explain why you don't
want to give LAE your encryption keys. Does that mean you think we are
dishonest? Don't you trust us?

If you force yourself not to use the word trust, then you can usually
rewrite the sentences to be in terms of "reliance" or "vulnerability"
instead of trust, and suddenly the confusion about question 1 vs.
question 2 disappears. Why do you withhold your capabilities from LAE?
Because you don't wish to be vulnerable to a failure or betrayal at
LAE. Because you don't want the safety of your backups to *rely on*
the continued security of LAE's servers and the continued loyalty of
its employees.

Doing that transformation on your sentence above would give something like:

"""
I like its "paranoid" approach. The idea is that no one (not even your
online storage provider) should have read or write access to your
backups.
"""

>  - Don't need any redundant PAR2 checksum, given that the data are

By the way, zfec is an alternative to PAR2.

https://tahoe-lafs.org/trac/zfec/browser/zfec/README.rst

zfec is much more efficient than PAR2 for some settings. (See the
benchmarks in the README.rst.)

I don't know of anyone who is actively using zfec's command-line tool
in the way that one uses PAR2's command-line tool, though. There are
lots of people using zfec as a library inside other tools.

Looking forward to reading your article! Maybe I'll painfully struggle
through the first 10 words in French and then get my Francophone wife
to read it to me. :-)

Regards,

Zooko
_______________________________________________
tahoe-dev mailing list
tahoe-dev@tahoe-lafs.org
https://tahoe-lafs.org/cgi-bin/mailman/listinfo/tahoe-dev

----- End forwarded message -----
-- 
Eugen* Leitl <a href="http://leitl.org">leitl</a> http://leitl.org
______________________________________________________________
ICBM: 48.07100, 11.36820 http://www.ativel.com http://postbiota.org
8B29F6BE: 099D 78BA 2FD3 B014 B08A  7779 75B0 2443 8B29 F6BE

