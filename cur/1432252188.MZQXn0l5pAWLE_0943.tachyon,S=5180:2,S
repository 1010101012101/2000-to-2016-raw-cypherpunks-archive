From owner-cypherpunks@Algebra.COM  Sat Jul 21 20:43:49 2001
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.72.0.53])
	by positron.mit.edu (8.9.3/8.9.3) with ESMTP id UAA30674
	for <kwantam@positron.mit.edu>; Sat, 21 Jul 2001 20:43:49 -0400
Received: from ak47.algebra.com (root@ak47.algebra.com [208.233.99.160])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id UAA25431
	for <rsw@mit.edu>; Sat, 21 Jul 2001 20:38:37 -0400 (EDT)
Received: (from majordom@localhost)
	by ak47.algebra.com (8.11.1/8.11.1) id f6M0K2q04324
	for cypherpunks-outgoing; Sat, 21 Jul 2001 19:20:02 -0500
X-Authentication-Warning: ak47.algebra.com: majordom set sender to owner-cypherpunks@Algebra.COM using -f
Received: from slack.lne.com (dns.lne.com [209.157.136.81])
	by ak47.algebra.com (8.11.1/8.11.1) with ESMTP id f6M0Jvq04286
	for <cypherpunks@algebra.com>; Sat, 21 Jul 2001 19:19:57 -0500
Received: (from cpunk@localhost)
	by slack.lne.com (8.11.0/8.11.0) id f6M0JZ322813
	for cypherpunks@algebra.com; Sat, 21 Jul 2001 17:19:35 -0700
Received: (from majordom@localhost)
	by slack.lne.com (8.11.0/8.11.0) id f6M0JYX22805
	for cypherpunks-goingout; Sat, 21 Jul 2001 17:19:34 -0700
X-Authentication-Warning: slack.lne.com: majordom set sender to owner-cypherpunks@lne.com using -f
Received: from mail.got.net (beholder.got.net [207.111.232.12]) by
  slack.lne.com (8.11.0/8.11.0) with SMTP id f6M0JWr22798 for
  <cypherpunks@lne.com>; Sat, 21 Jul 2001 17:19:32 -0700
Received: (qmail 16967 invoked from network); 22 Jul 2001 00:17:52 -0000
Received: from 66-81-36-211-modem.o1.com (HELO ?66.81.32.90?)
  (66.81.36.211) by always.got.net with SMTP; 22 Jul 2001 00:17:52 -0000
Mime-Version: 1.0
X-Sender: tcmay@mail.got.net
Message-Id: <a05100303b77fc8f5c052@[66.81.32.90]>
In-Reply-To: <3B59ADA6.25566.12ED9E1@localhost>
References: <NEBBJHBKILFDJEFIABHPOEDLDKAA.aimee.farr@pobox.com>
  <3B59ADA6.25566.12ED9E1@localhost>
Date: Sat, 21 Jul 2001 17:19:44 -0700
To: cypherpunks@lne.com
From: Tim May <tcmay@got.net>
Old-Subject: Ensuring that LSBs in Stego "look random enough"
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
X-Loop: cypherpunks@lne.com
X-spam: 0 
Subject:  Ensuring that LSBs in Stego "look random enough"
X-Algebra: <A HREF=http://www.algebra.com>Algebra</A>
Sender: owner-cypherpunks@Algebra.COM
Precedence: bulk
X-Mailing-List: cypherpunks@algebra.com
X-List-Admin: ichudov@algebra.com
X-Loop: cypherpunks@algebra.com
Status: O
Content-Length: 2669
Lines: 61


At 4:28 PM -0700 7/21/01, jamesd@echeque.com wrote:
>     --
>On 18 Jul 2001, at 8:07, Ray Dillinger wrote:
>>  *sigh*.  I will not use a stego system unless I write it first and
>>  my recipient has the only other copy.   Because it's a matter of
>>  keeping the *method* secret, that's really the only way.
>
>In principle, it should be possible to write a stego program that is
>undetectable, provided your enemy has no better models of noise
>sources in the medium than you have.   As far as I know, no one
>has done this.
>
>It is probably easier to do this with sound than with video, as order
>and randomness in sound somewhat easier to specify.

Take a set of bits generated by a good PRNG. Use this set for the LSB 
of GIFs or other noncompressed image files. Anyone analyzing the LSBs 
sees a set with various spectral and statistical properties.

To send a signal, a message, XOR the message with this set of 
PRNG-generated bits. One's recipient already has a copy of the 
PRNG-generated bits. (Remember, stego is not the same as public key 
crypto, so Alice and Bob can arrange in advance to use a particular 
entry point in an PRNG, or an entry point in a one-time pad, etc.)

The resulting LSBs will have, "in almost cases," a set of spectral 
and statistical properties nearly identical with the original LSBs. 
Unless the message bits are somehow correlated with the 
PRNG-generated bits, the distribution will pass all tests for 
"randomness" that the orginal PRNG-generated bits passed.

This is a kind of variant on von Neumann's scheme for ensuring even 
distributions of heads and tails in a message stream even with coins 
weighted unevenly towards heads and tails.

The approach can be extended to have the distribution of LSBs look 
like that of a camera source, or whatever normal images or sound 
files typically have. (In this case, Alice and Bob exchange sets of 
LSBs from camera/microphone sources. Messages are then XORed with 
these sets. All statistical tests produce the same results as 
original camera/microphone sources produce.)

(A "gotcha" left as an exercise if if the image or microphone source 
produces fixed patterns of bits in certain places. For example, if 
every image file begins with 16 fixed bits, or somesuch. In this 
case, XORing these fixed bits with the message bits would NOT 
preserve the statistical properties.)

--Tim May

--Tim May




-- 
Timothy C. May         tcmay@got.net        Corralitos, California
Political: Co-founder Cypherpunks/crypto anarchy/Cyphernomicon
Technical: physics/soft errors/Smalltalk/Squeak/agents/games/Go
Personal: b.1951/UCSB/Intel '74-'86/retired/investor/motorcycles/guns

