Return-Path: <cypherpunks-bounces@cpunks.org>
Received: from antiproton.jfet.org (localhost.localdomain [127.0.0.1])
	by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t96Kj47Z010434;
	Tue, 6 Oct 2015 16:45:06 -0400
Authentication-Results: antiproton.jfet.org; dkim=fail
	reason="verification failed; unprotected key"
	header.d=openmailbox.org header.i=@openmailbox.org
	header.b=dK8eO3hr; dkim-adsp=fail (unprotected policy);
	dkim-atps=neutral
Received: from smtp18.openmailbox.org (smtp18.openmailbox.org [62.4.1.52])
 by antiproton.jfet.org (8.14.4/8.14.4/Debian-8) with ESMTP id t96Kix1K010427
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT)
 for <cypherpunks@cpunks.org>; Tue, 6 Oct 2015 16:45:01 -0400
Received: by mail2.openmailbox.org (Postfix, from userid 1002)
 id 15CED7C113A; Tue,  6 Oct 2015 22:44:58 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=openmailbox.org;
 s=openmailbox; t=1444164296;
 bh=yLBQfR3hlaJLMz3gFbaiIzPgi6tWKn1QK9GPFSlu2lw=;
 h=Date:From:To:Subject:References:In-Reply-To:From;
 b=dK8eO3hrCzTUCcMYwhAFe79YSjkuPIpz32r+F9uccEI4TE7CXk+y4z4b5bf4ciOxu
 KB9qpQMXALtbRkkU7wR89l8hksSkd8BD1y1Y3QqVAqUP989z+tPo1n20bCeblJfc0d
 vgM2U+clGp8J39abWXf2UDHMyRm/ODQv5EwDqGVw=
Message-ID: <561432CC.2070304@openmailbox.org>
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=openmailbox.org;
 s=openmailbox; t=1444164298;
 bh=yLBQfR3hlaJLMz3gFbaiIzPgi6tWKn1QK9GPFSlu2lw=;
 h=Date:From:To:Subject:References:In-Reply-To:From;
 b=iT5ahf0h8R31RW2G0nPoKeXmn8Q6g/9GSNw7LTRPt+xR+t0aQKcT5yANXMztykGLs
 +HwzX/10MR/ZHk7wqoE/66pOFaRN6dtwU98d81Q+wsP9kdeTxDwjm1+aF0+OZmdpXN
 0jkQ4OZNYRo7kgwpeRzpNvcQ5CheIdG6nl/1ksl0=
Date: Tue, 06 Oct 2015 21:45:00 +0100
From: oshwm <oshwm@openmailbox.org>
User-Agent: Mozilla/5.0 (X11; Linux x86_64;
 rv:31.0) Gecko/20100101 Icedove/31.8.0
MIME-Version: 1.0
To: cypherpunks@cpunks.org
Subject: Re: Introduce randommess in keypress timings
References: <1343496924.1220914.1444162539833.JavaMail.yahoo@mail.yahoo.com>
In-Reply-To: <1343496924.1220914.1444162539833.JavaMail.yahoo@mail.yahoo.com>
Content-Type: multipart/signed; micalg=pgp-sha1;
 protocol="application/pgp-signature";
 boundary="6GFOCJ8RM58x8nlQw2Q3HSMqTrcKsHDsD"
X-BeenThere: cypherpunks@cpunks.org
X-Mailman-Version: 2.1.18
Precedence: list
List-Id: The Cypherpunks Mailing List <cypherpunks.cpunks.org>
List-Unsubscribe: <https://cpunks.org/mailman/options/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=unsubscribe>
List-Archive: <http://cpunks.org/pipermail/cypherpunks/>
List-Post: <mailto:cypherpunks@cpunks.org>
List-Help: <mailto:cypherpunks-request@cpunks.org?subject=help>
List-Subscribe: <https://cpunks.org/mailman/listinfo/cypherpunks>,
 <mailto:cypherpunks-request@cpunks.org?subject=subscribe>
Errors-To: cypherpunks-bounces@cpunks.org
Sender: "cypherpunks" <cypherpunks-bounces@cpunks.org>
Lines: 93

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--6GFOCJ8RM58x8nlQw2Q3HSMqTrcKsHDsD
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable



On 06/10/15 21:15, Michael Nelson wrote:
> Alternatively all keystrokes could be done with fixed timing.  The poin=
t is that no individual pattern should be discernable.  There are more su=
btle aspects, such as jitter from perfectly regular timing, which could i=
dentify the machine/browser being used.  With added randomness, such jitt=
er would be harder to discern.  Also, you would ideally not want eavesdro=
ppers to know that you are obfuscating your keystrokes, and obfuscating v=
ia randomness, as opposed to fixed timing, would help with that.

My first thoughts were to use fixed timing but quickly realised that for
fixed timing to work, EVERYONE using a keyboard/mouse would have to have
their firmware modified otherwise your fixed timing would identify you
just as surely as your genuine timing patterns.
The randomness will also make each user appear as many different users -
not just hiding existing users but giving the impression that there are
many more users out there than truly exist (increasing the size of the
haystack).

> There are quite a few companies selling keystroke dynamics products as =
an authentication factor.  There are also various efforts, such as one st=
arted at Stanford a few years ago, to monitor all aspects of a person's i=
nput, for continuous background authentication.  Not sure how that one's =
going.  Keystroke dynamics normally works on a short chosen phrase.  The =
latter stuff is more ambitious and extends that to arbitrarily long text,=
 along with grammatical patterns, etc.  There is nothing new here.
>
>
> After evaluating several products for a company I worked for, I built a=
 keystroke dynamics product myself -- it was less work than going through=
 the pain of registering for a trial of their software!  It was never use=
d, for the same reason that kd is not used much -- it's more trouble than=
 it's worth. It worked as well as any of the products being sold.
>
> Though a key down or key up event from the Windows operating system has=
 a timestamp in it (the OS will not give you more than a certain accuracy=
, but it's adequate), that timestamp is discarded and not available in Ja=
vascript.  My Javascript solution calls for a new Date as soon as it capt=
ures a key event.  People selling this stuff say that as there is too muc=
h potential lag between the key event and the time thus associated, Javas=
cript is not good.  The best thing is something like an ActiveX  plugin o=
r a native client in C that can capture the timestamp from the OS.  The n=
ext best thing was touted as Flash.  However, mine worked very well.

This is exactly why modifying the firmware would be better than running
software either within the OpSys or on top of it - by the time your
software gets a look at the keystroke timing then another 'driver' etc
could already have seen it.
It is surprising to know that Javascript is fast enough not to have an
impact on system performance when monitoring the keystroke timing!

> If anyone is interested I will describe in simple terms how one tests t=
he keystroke vectors, and some of the challenges.

Would be interesting to read this as there are probably many things I
hadn't even considered, thanks :)

> mn



--6GFOCJ8RM58x8nlQw2Q3HSMqTrcKsHDsD
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBAgAGBQJWFDLUAAoJECp4BxhKkbWIdT0QAJHqcAEK84FVkwjCAh1LTv5t
gtGM42ZRUCoDl9ADsoPAjseedSAWUi8qeqcqEpakj4+MUaxbw9lCzpRmQ+7W89Ac
CgttKpGUas7ZX7WaIexQCD86/K8dIWPOz8XQgQvcxEwwC6HWu4clMYaLdfxQQ3be
Ootdok2pXQzaMkwqw7VlpDKOU5fSxon7OKpE6lVWwZ62VZ0h2YfYLrCQ4KZzk9V3
BrhROQ2SBzAA80b7LHmA5KKnEpuFoofPCHZUaaeoKjZpFJEZc5Uwx99Y85hHfvyI
BoMDQlX91Q8BWqJi20Ie0PCTnwDMhdNY40c25+8irt1t0VVVnV85d3Lf4Tv0RxGN
t8TlpE+s7dKzymLD+id+hvGTlGAYJK7lokQVBVNhwTAItMufaDNCcp4Rb5YKrB07
6v49BIWX32fWl9DqY7+Q2i4xmKzf6O2qjomN3yxxpU7zPtP2ZBvVKhbICyYjFEv5
NXf194TZBCPlAm6ebdnlubkg/L3Yn4mzgnuXtiAnf32YO1KB4VsdoN9IvgHngjMU
2M/YiUhcWfGAZgMo9jlUwOuavQ/lVgkQoV7ZvyyUT6e9D4LS3FLEWshaPeDIvcPY
CEV5pTn8sjELWmpLzKGt/qoi4XEMm4KqoW3ckZHT4DiK87yvJqbGaFc4URI1igfT
SJ02uc/2Vsfoi5AUIx3Y
=2LZA
-----END PGP SIGNATURE-----

--6GFOCJ8RM58x8nlQw2Q3HSMqTrcKsHDsD--

