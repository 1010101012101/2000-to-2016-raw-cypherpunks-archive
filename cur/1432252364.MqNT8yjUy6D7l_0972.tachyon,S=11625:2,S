From owner-cypherpunks@jfet.org  Sun Jun  3 09:52:57 2007
Return-Path: <owner-cypherpunks@jfet.org>
Received: from proton.jfet.org (majordomo@localhost [127.0.0.1])
	by proton.jfet.org (8.13.8/8.13.8/Debian-3) with ESMTP id l53DqEk7027849
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <cypherpunks-outgoing@proton.jfet.org>; Sun, 3 Jun 2007 09:52:14 -0400
Received: (from majordomo@localhost)
	by proton.jfet.org (8.13.8/8.13.8/Submit) id l53DqECp027848
	for cypherpunks-outgoing; Sun, 3 Jun 2007 09:52:14 -0400
Mime-Version: 1.0
Message-Id: <p06240836c28877ee5afe@[68.167.57.91]>
Date: Sun, 3 Jun 2007 09:51:54 -0400
To: "Philodox Clips List" <clips@philodox.com>, cypherpunks@jfet.org
From: "R.A. Hettinga" <rah@shipwright.com>
Subject: Re: [gsc] Does anyone out exchange loom?
Content-Type: text/plain; charset="us-ascii"
Sender: owner-cypherpunks@jfet.org
Precedence: bulk
X-Loop: al-qaeda.net
Status: O
Content-Length: 10654
Lines: 269

--- begin forwarded text


Mailing-List: contact gold-silver-crypto-help@rayservers.com; run by ezmlm
Reply-To: gold-silver-crypto@rayservers.com
Date: Sun, 03 Jun 2007 09:51:07 -0400
From: Patrick Chkoreff <patrick@fexl.com>
User-Agent: Thunderbird 1.5.0.12 (X11/20070509)
To: gold-silver-crypto@rayservers.com
Subject: Re: [gsc] Does anyone out exchange loom?

Graham Kelly wrote:

> On Thu, 31 May 2007 13:48:17 -0500, "Arrakis"

>> Obviously loom has a far way to go for usability, but I guess this is
>> a process.


I am getting two very different classes of reaction from users:

1. I cannot believe how easy this interface is!
   It's amazing!

2. I have no idea how to use this user interface!
   It sucks!


I believe the problem is primarily conceptual.  Here's a little
background on how Loom works.


Consider buying a shirt at a retail clothing store.  You walk up to the
counter with the shirt, the cashier rings it up, and says that will be
37 euros please.  You take the 37 euros out of your wallet and put it on
the counter.  The cashier then picks up the 37 euros and puts it in the
cash register.  You are now the proud owner of a new shirt.

Loom works in a similar way.  When Alice wants to pay Bob some euros,
she does *not* stuff the euros directly into Bob's wallet or cash
register.  Instead, Alice puts the euros in a place where Bob can reach
them.  Then Bob *himself* picks up the euros and puts them into his
wallet or cash register.

That place on the counter-top where Alice puts the euros is called the
"drop point."  It is a location where the ownership of the euros is up
for grabs.  If Bob refuses the payment, Alice can take the euros right
back from the drop point and put them back in her wallet.

So a payment in Loom is a two-step process.  Note that I am using
"euros" in this example simply to make it more familiar to readers.
Loom itself knows nothing about specific asset types like "euros" or
even "gold" -- Loom is basically just an online spreadsheet of sorts.

So again, a payment in Loom is a two-step process.

1.  Alice moves the euros from her personal stash to
    a drop point X.

2.  Bob moves the euros from the drop point X to his
    personal stash.


Now before Alice can pay Bob, they need to *establish* that shared drop
point X, and add it to their own respective folders.  It doesn't matter
who dreams up the drop point first, but let's say Alice does it.

In her folder, Alice clicks Locations, then clicks to add a new
location, presses Random to generate a new random drop point, types
"Bob" as her nickname for that location, and presses Save.

Now when Alice wants to give something to Bob, she can easily select
"Bob" from the drop-down menu in her folder.

But at this point only half of the picture is complete.  Bob has not yet
added the drop point to his *own* folder.  First, Alice obviously needs
to tell Bob the new drop point she generated.  Ideally she could copy
and paste the location into a PGP-encrypted email, but alternatively she
could send it via Skype, or read it to Bob over the phone, or even send
it in a plain unencrypted email.  (Most of the time the drop point will
be empty, so anyone intercepting the email and looking at the drop point
will not typically see any assets.  Let the user beware.)

That part, the *communication* of the shared drop point, is where people
have to be the most careful.  Once the drop point is established in both
folders, then payments are extremely easy and secure.

So now let's say that Bob gets a Skype chat from Alice saying "Hey Bob,
let's use this as our drop point:  0f6f31b8eeeb795a7885ac670a344de1".
Bob replies "OK Alice, hold on just a sec!"

Bob logs into his folder, clicks Locations, clicks to add a new
location, and pastes that big number into the box labeled "Location".
He types in a nickname for this location, which in this case will be
"Alice".  He presses Save.

Now, when Bob wants to give something to Alice, he can easily select
"Alice" from the drop-down menu in his folder.


Note that the SAME drop point 0f6f31b8eeeb795a7885ac670a344de1 is now
installed in both Alice's and Bob's folder.  But also note that Alice
has nicknamed that location as "Bob," while Bob has nicknamed that same
location as "Alice."  It makes complete sense when viewed from the
perspective of Alice's and Bob's folders.


At that point, everything is configured and Alice and Bob now have a
shared drop point.  They have established an "economic relationship" if
you will.


And now payments between Alice and Bob are amazingly easy and fast.
When I showed this to my wife, she could not believe how easy it was.

I just tested making a payment last night, and it took me TEN SECONDS
FLAT, *including* logging into my folder to begin with.

So let's say Alice wants to pay Bob 5.6 grams of loom gold.  Here's the
process.  Click the stopwatch.

1. Alice visits loom.cc, enters her folder passphrase, and
   presses Login.

2. She types the number 5.6 into the quantity field.

   (Note that when she logs in, her cursor is already sitting
   there conveniently in the Qty field, so she doesn't even
   have to bother clicking into it.)

3. She selects "grams loom gold" from the drop-down menu
   labeled "choose asset."

4. She selects "Bob" from the drop-down menu labeled
   "choose location."

5. She presses the button labeled "Give".


I don't know about Alice, but I can do that in about 10 seconds, if I
don't mistype my passphrase.


But now here's where things get even easier.  Let's say Alice wants to
make another payment, this time paying 3.25 grams to Carol.  Here's the
process.


1. Type 3.25 in the Qty field.

2. Click "Carol" in the drop-down location menu.

3. Press Give.


Note that this time, Alice didn't even have to select the asset type,
since she had already selected "grams loom gold" before.


But wait!, you may ask.  That's too easy, and Alice might make a
mistake.  Let's say Alice entered 32.5 instead of 3.25.  No problem.
When Alice notices the mistake, she can just quickly press the Take
button to take the assets right back.  Then she can fix the number and
press Give.

(Now if Bob somehow managed to be in his folder RIGHT AFTER Alice made
her mistake, and he saw the 32.5 grams sitting there, and he did a Take
to grab all those 32.5 grams before Alice had a chance to take them back
herself, then there's a problem.  But that's unlikely.  And if it
happens, then Alice should (1) chide herself for being so careless and
(2) tell Bob to give the money back.)



That's it.  Payments done in seconds flat, and no fumbling around for
drop points stored in a notepad file or written on slips of paper, and
no account numbers (just handy nicknames for drop points, completely at
your discretion).



Now at some point I'll put all that background information up on the
Loom site under the Help link, for those who actually bother to click
Help links and read what's there.  Personally, I generally loathe Help
screens, but I really do have some helpful information there.

Mind you, I have been BUSY ENOUGH just writing and testing this code, so
please bear with me as I improve the help and educational process here.


Realistically, the background information I just gave you will best
circulate by word of mouth.  This is basic conceptual background here.
It's like knowing what the steering wheel and accelerator are for in an
automobile.  Nobody ever reads that stuff in a manual:  they learn it
from their father.

It's probably somewhat akin to creating a MySpace page.  If I signed up
at MySpace, I'd probably fumble around for quite a while before I became
adept at editing and placing content.  Meanwhile, long-time MySpace
users have established a deep tradition and understanding of the site,
and are even using advanced editing tools.


The Loom model is a *conceptual* shift away from ordinary payment
systems -- it is a totally different paradigm of how ownership of
arbitrary "units" may be transferred.


Now if you think the Location (drop point) feature is mind-bending, just
wait till you realize that even ASSET TYPES themselves can be added to
folders.  Right now when you create a new folder, the system
automatically adds a few known asset types for you.  If I hadn't done
that, people would be ESPECIALLY baffled about Loom right now, arriving
at my door with torches and pitchforks.

That's right folks, the basic Loom system itself KNOWS NOTHING about
specific asset types or what they mean.  With the exception of the
predefined asset types automatically added to newly created folders, you
must "introduce" a new asset type into your folder.

For example, let's say your friend Joe creates a new asset type which
you and your friends will use to settle up lunch money debts.  He'll
choose some random asset identifier such as
857ca0317f031689f6782c8b2c09bbda, add it to his folder under a nickname
such as "Sandwich Credits," and become the issuer of that type.


Now, before Joe can pay Bob any of these new "Sandwich Credits," Bob
will have to be informed about this new asset type.  Joe tells Bob all
about it, and how they'll use it to settle up lunch debts.

Bob says OK sounds good.  Bob logs into his folder, clicks the "Types"
link (which I'm working on now), clicks to add a new type, pastes in the
new asset type 857ca0317f031689f6782c8b2c09bbda, and nicknames it
"Sandwich Credits".  Bob could actually choose a different nickname if
he preferred, perhaps "Sandwich from Joe!".  (Maybe other people Bob
knows have issued sandwich credits as well and Bob wants to keep them
all straight in his mind.)


Now when Joe slides some Sandwich Credits over to Bob's drop point, Bob
will see them and he can then Take them up into his personal stash.


This example underscores the fact that the Loom code itself is *totally
generic*, and knows ABSOLUTELY NOTHING about specific asset types except
for usage tokens.


Consequently, the biggest hurdle users have to overcome is
CONFIGURATION, e.g. adding nicknamed locations and asset types to their
folders.  Once that is done, the payment process is unbelievably easy.
And even the configuration is not so bad, once you understand the basic
concept of payment through shared drop points.


-- Patrick

--- end forwarded text


-- 
-----------------
R. A. Hettinga <mailto: rah@ibuc.com>
The Internet Bearer Underwriting Corporation <http://www.ibuc.com/>
44 Farquhar Street, Boston, MA 02131 USA
"... however it may deserve respect for its usefulness and antiquity,
[predicting the end of the world] has not been found agreeable to
experience." -- Edward Gibbon, 'Decline and Fall of the Roman Empire'

